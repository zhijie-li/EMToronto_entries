<mediawiki xmlns="http://www.mediawiki.org/xml/export-0.11/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mediawiki.org/xml/export-0.11/ http://www.mediawiki.org/xml/export-0.11.xsd" version="0.11" xml:lang="en">
  <siteinfo>
    <sitename>EMToronto</sitename>
    <dbname>emtorontowiki</dbname>
    <base>https://emtoronto.miraheze.org/wiki/Main_Page</base>
    <generator>MediaWiki 1.35.0</generator>
    <case>first-letter</case>
    <namespaces>
      <namespace key="-2" case="first-letter">Media</namespace>
      <namespace key="-1" case="first-letter">Special</namespace>
      <namespace key="0" case="first-letter" />
      <namespace key="1" case="first-letter">Talk</namespace>
      <namespace key="2" case="first-letter">User</namespace>
      <namespace key="3" case="first-letter">User talk</namespace>
      <namespace key="4" case="first-letter">EMToronto</namespace>
      <namespace key="5" case="first-letter">EMToronto talk</namespace>
      <namespace key="6" case="first-letter">File</namespace>
      <namespace key="7" case="first-letter">File talk</namespace>
      <namespace key="8" case="first-letter">MediaWiki</namespace>
      <namespace key="9" case="first-letter">MediaWiki talk</namespace>
      <namespace key="10" case="first-letter">Template</namespace>
      <namespace key="11" case="first-letter">Template talk</namespace>
      <namespace key="12" case="first-letter">Help</namespace>
      <namespace key="13" case="first-letter">Help talk</namespace>
      <namespace key="14" case="first-letter">Category</namespace>
      <namespace key="15" case="first-letter">Category talk</namespace>
      <namespace key="828" case="first-letter">Module</namespace>
      <namespace key="829" case="first-letter">Module talk</namespace>
    </namespaces>
  </siteinfo>
  <page>
    <title>Main Page</title>
    <ns>0</ns>
    <id>1</id>
    <revision>
      <id>4696</id>
      <parentid>4695</parentid>
      <timestamp>2020-01-23T18:19:15Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <comment>/* Educational resources */</comment>
      <origin>4696</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4282" sha1="6qzqgosyjiao07pjprn2lbpitqi8opr" xml:space="preserve">__NOTOC__
== Welcome to {{SITENAME}}! ==

This wiki site is for sharing knowledge on biological electron microscopy. Have fun editing!


'''New pages can be easily created by searching the term in the search box (look upper-right), then click on the link in red.'''

==Booking the L120C at MSB==
https://utorontomil.bookmylab.com/index.php

== All pages in this wiki ==

https://emtoronto.miraheze.org/wiki/Special:AllPages

== Links to frequently used software ==

Packages:
* &lt;span class="plainlinks"&gt;[https://blake.bcm.edu/emanwiki/EMAN2 EMAN2: only uses GPU for particle picking. Runs on any computer with 4 GB hard disk space. ]&lt;/span&gt;
* &lt;span class="plainlinks"&gt;[https://www2.mrc-lmb.cam.ac.uk/relion RELION: GPU accelerated, in almost all steps.]&lt;/span&gt;
* &lt;span class="plainlinks"&gt;[https://cryosparc.com/ cryoSPARC v2: GPU based computation, comprehensive, yet fast evolving. ]&lt;/span&gt;
* &lt;span class="plainlinks"&gt;[https://cistem.org/ cisTEM: EM analysis from movies to maps, with a very nicely designed GUI. No GPU required. ]&lt;/span&gt;
* &lt;span class="plainlinks"&gt;[http://grigoriefflab.janelia.org/frealign Frealign: high-resolution refinement of 3D reconstructions. GPU version available separately. ]&lt;/span&gt;
* &lt;span class="plainlinks"&gt;[https://spider.wadsworth.org/spider_doc/spider/docs/spider.html SPIDER: an image processing system for electron microscopy. ]&lt;/span&gt;
* &lt;span class="plainlinks"&gt;[http://www.ccpem.ac.uk/ CCPEM: Collaborative Computational Project for Electron cryo-Microscopy. ]&lt;/span&gt;



Task-specific:
* &lt;span class="plainlinks"&gt;[http://grigoriefflab.janelia.org/unblur Unblur ]&lt;/span&gt;
* &lt;span class="plainlinks"&gt;[http://msg.ucsf.edu/em/software/motioncor2.html Motioncor2 ]&lt;/span&gt;

* &lt;span class="plainlinks"&gt;[http://grigoriefflab.janelia.org/ctffind4 CTFFIND  ]&lt;/span&gt;
* &lt;span class="plainlinks"&gt;[https://www.mrc-lmb.cam.ac.uk/kzhang/ GCTF  ]&lt;/span&gt;

* &lt;span class="plainlinks"&gt;[https://www.mrc-lmb.cam.ac.uk/kzhang/ Gautomatch  ]&lt;/span&gt;

* &lt;span class="plainlinks"&gt;[http://dimaiolab.ipd.uw.edu/software/ Rossetta cryoEM tools by Dimaio lab, U of Washington]&lt;/span&gt;


Tools:
* &lt;span class="plainlinks"&gt;[https://imagej.nih.gov/ij/ IMAGEJ: tool for displaying and converting image files. ]&lt;/span&gt;
* &lt;span class="plainlinks"&gt;[https://github.com/asarnow/pyem pyEM: python tools by Eugene Palovcak and Daniel Asarnow at UCSF. ]&lt;/span&gt;


A more complete list of software at EMDB:
*http://www.emdatabank.org/emsoftware.html

==Forums==
* &lt;span class="plainlinks"&gt;[http://www.jiscmail.ac.uk/cgi-bin/webadmin?A0=CCPEM/ CCPEM: Mailing list. General EM discussions, job listings, seminar announcements. Use for Relion-specific questions. ]&lt;/span&gt;
* &lt;span class="plainlinks"&gt;[http://3dem.ucsd.edu/mailinglist.shtm/ 3D-EM: Mailing list. General EM discussions, job listings, seminar announcements. ]&lt;/span&gt;
* &lt;span class="plainlinks"&gt;[https://groups.google.com/forum/#!forum/eman2/ EMAN2 Google Group. Post EMAN2-specific questions here. ]&lt;/span&gt;
* &lt;span class="plainlinks"&gt;[https://discuss.cryosparc.com/ CryoSPARC forum. Post cryoSPARC-specific questions here. ]&lt;/span&gt;

== Educational resources==

* &lt;span&gt;[https://EM-learning.com EM-learning.com ]&lt;/span&gt;
* &lt;span&gt;[https://cryoemprinciples.yale.edu cryoem principles @yale]&lt;/span&gt;
* &lt;span&gt;[https://www2.mrc-lmb.cam.ac.uk/research/scientific-training/electron-microscopy/ MRC cryo-EM course ]&lt;/span&gt;
* &lt;span&gt;[http://www.maxsidorov.com/ctfexplorer/ CTF explorer: CTF curve simulations ]&lt;/span&gt;
* &lt;span&gt;[http://rodenburg.org John Rodenburg's EM tutorials]&lt;/span&gt;
* &lt;span&gt;[https://ricktu288.github.io/ray-optics/simulator A ray-trace simulator]&lt;/span&gt;
* &lt;span&gt;[http://3demmethods.i2pc.es/ 3D EM methods wiki]&lt;/span&gt;

== Manuals found on Internet==
* &lt;span&gt;[https://sciencehill-cryoem.yale.edu/sites/default/files/files/align_talos12.pdf Talos12 Alignments]&lt;/span&gt;

* &lt;span&gt;[https://sciencehill-cryoem.yale.edu/sites/default/files/files/userint_talos12.pdf Talos12 user interface]&lt;/span&gt;

* &lt;span&gt;[https://sciencehill-cryoem.yale.edu/sites/default/files/files/Options.pdf Talos12 Options]&lt;/span&gt;

* &lt;span&gt;[https://sciencehill-cryoem.yale.edu/sites/default/files/files/tia.pdf TIA]&lt;/span&gt;

* &lt;span&gt;[https://www.ifm.liu.se/materialphysics/thinfilm/Manualer/galadriel/FEI%20manuals/Modes_12to30.pdf Tecnai12-30 Modes]&lt;/span&gt;</text>
    </revision>
  </page>
  <page>
    <title>ChimeraX commands</title>
    <ns>0</ns>
    <id>132</id>
    <revision>
      <id>4673</id>
      <parentid>4670</parentid>
      <timestamp>2019-08-29T20:01:36Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <comment>/* Saves */</comment>
      <origin>4673</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1359" sha1="nyslh0648eic9bhespyk61r1hqxdsfb" xml:space="preserve">This Page lists ChimeraX commands for reference:
==General display==
&lt;syntaxhighlight&gt;

lighting full; lighting simple; lighting soft;
background white;set bgColor white;

set silhouette  true;
set selectionWidth 1;
size stickRadius 0.01;

&lt;/syntaxhighlight&gt;

==Open files==
&lt;syntaxhighlight&gt;
close all

open 6eyd; open 3983 from emdb

open reflections.mtz structureModel #1

fitmap #1 inMap #2 moveWholeMolecules false


&lt;/syntaxhighlight&gt;

==Maps==
&lt;syntaxhighlight&gt;
volume selMaps appearance \"Airways II\"
volume #1 level 0.28
volume orthoplanes  xyz

&lt;/syntaxhighlight&gt;

==Saves==
&lt;syntaxhighlight&gt;

save image /cavity_1.png width 1800 height 1800
save session R77.cxs
save 829b.pdb format pdb models #1.3

&lt;/syntaxhighlight&gt;

==Clipper &amp; ISOLDE==
&lt;syntaxhighlight&gt;
clipper associate #2 toModel #1

clipper isolate atoms [surroundDistance a number] [contextDistance a number] [maskRadius a number] [hideSurrounds true or false] [focus true or false] [includeSymmetry true or false]
clipper spotlight radius 20.00
clipper spotlight [models [enable]] [radius a number]

isolde start
isolde sim start #1
isolde sim stop #1
&lt;/syntaxhighlight&gt;

==distance==
&lt;syntaxhighlight&gt;
distance style color #3465a4
distance style symbol false
&lt;/syntaxhighlight&gt;


==Movie==
&lt;syntaxhighlight&gt;
movie record
turn y 2 180
wait 180
movie encode movie1.mp4
&lt;/syntaxhighlight&gt;</text>
    </revision>
  </page>
  <page>
    <title>Computer hardware setup</title>
    <ns>0</ns>
    <id>3</id>
    <revision>
      <id>350</id>
      <parentid>255</parentid>
      <timestamp>2019-01-17T21:08:03Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <comment>/* SSDs */</comment>
      <origin>350</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="7071" sha1="c24u3udxawlwryx166mpychc3x27brk" xml:space="preserve">This page is created to provide some references for setting up computation hardware, mainly desktop systems, for small labs. 

== Observations and impressions ==
* RELION generally requires large amount of GPU time for refinements. The RELION documents mention that two GPU cards are needed for 3D auto-refine: https://www2.mrc-lmb.cam.ac.uk/relion/index.php?title=Benchmarks_%26_computer_hardware 
* cryoSPARC is not very demanding on hardware. The minimum setup can be a single (good) GPU and 16 GB CPU memory. 32 GB CPU memory is recommended though. The cryoSPARC v1, now phased out, used to have a 32 GB memory limit for starting heterogeneous refinement jobs. Although in practice bypassing this limit on a 16 GB system, for a 300 KDal protein project with a small dataset, didn't show any negative effect.   Some cryoSPARC tasks can utilise multiple GPUs.
* cisTEM uses CPU computation only. The time consumption is still in the acceptable range. It will try to use all physical cores of a CPU unless limited explicitly by the user.
* EMAN2 does not use GPU except for particle picking.
* Memory requirements vary among jobs. This is determined by the size of the particle images, the number of particles, and the software package. 
* Negative stain datasets are usually small (up to 10K particles) and the processing goals are usually limited to obtaining 2D classes. Therefore they do not really need high-end computation hardware. Even an obsolete 4th gen i5 computer with 8 GB memory and no GPU can handle such tasks.

== Suggested minimal setup==

=== A fast CPU === 

A flagship desktop CPU, such as Intel Core i7 or i9, or the AMD equivalent, should be adequate. The GPU-heavy tasks may not benefit much from more cores, as the CPU part of computations are often run on a single thread. However EMAN2 and cisTEM both use multicore CPUs, instead of GPUs, to do most computations. 

Besides the speed and number of cores, the number of PCIe lanes usable for communicating with the graphics card is also a consideration, because it in theory put an upper limit to the data transfer rate between CPU and the GPU. Intel Core i7 and i9 CPUs always have 16 PCIe lanes for the graphics cards. Xeon CPUs have more PCIe lanes. But Xeon systems are usually much more expensive. In practise, it has been shown that PCIe lanes are rarely the bottle neck.

=== 32 GB memory or more  ===

Ideally 64 GB. Intel Core CPUs (i3, i5, i7, i9) can not use more than 64 GB memory per processor.  Xeon CPUs can use more memory, but again, those systems cost much more than regular i7 or i9 systems.

99% of the time the OS and the EM programs will only use 8-16 GB of memory and we do not benefit from any of the extra memory sticks on the mother board, at all. But when the memory usage hits the max RAM size, HDDs or SSDs will be used for caching: some data from memory will be moved to caches on hard disk, then some will be read back for processing. Back and forth multiple times. This may happen during some complex 3D refinement with large particle sizes. 

To give an idea: 64bit PC2133 DDR4 RAM moves data at 2133M*64/8=17GB/s, while the NVMe SSDs do that at ~1 GB/s and SATA SSDs at &lt;500 MB/s.

=== Motherboard that has at least two full-length PCIe slots to accommodate 2 GPU cards. ===

RELION documents state that its auto-refine jobs require two GPUs to run fast. However 1 GPU is also capable of handling most tasks if not all. cryoSPARC jobs are fast in general, so it is quite likely a single GPU will be enough.

As stated above, for intel Core (i7, i9) CPUs, a total of 16 PCIe lanes are used for communication with the GPU. Therefore when there are two GPU cards in the system, both are communicating with the CPU at 8x PCIe speed. However, this is unlikely to produce much noticeable effect unless the data transfer becomes very frequent.

A side note: the graphics cards can actually run on the short PCIe slots, except that the data transfer speed would be limited to 1x or 4x, instead of 16x (1 card) or 8x (2 cards).

=== GPU cards ===

The Nvidia 1080TI or 2080TI video cards seem to give the biggest bang for the buck at the moment. 1080TI is disappearing from the market.

A better GPU card should have more GPU cores, more GPU memory, higher bandwidth (speed of moving data from/to CPU). The size of the GPU memory is most important, as a larger memory reduces the need to frequently transfer data between CPU and GPU.

Mixing different GPUs on a same machine should not be a problem. Some software even know which GPU is faster. Graphics cards of different producer but employing the same GPU chip, for example 1080TI cards from MSI and ASUS, will work largely the same. Therefore adding cards one at a time is not a problem. Before buying a new card, one should check that the computer does have enough power and a usable power cable for it. Each 1080TI card needs ~250W of power and will use one 12V (yellow-black) power cable bundle that carries two 8-pin (6+2) plugs. This cable should normally come with the power box (750W power box should have two such bundles). Some cables coming with some cards are not meant for being used as a power cable for the card. The SLI bridges coming with the cards only help gaming, not GPU computation (CUDA ignores SLI).

=== SSDs ===

1TB SATA SSD minimum. NVMe SSDs are roughly 2x the speed of SATA SSDs.  However, the number of M.2 NVMe slots on a mother board is usually limited to two or three.

NVMe is a storage interface standard that allows an SSD to directly use the PCIe interface to communicate with the motherboard. Therefore it allows an SSD to transfer data at a high speed, instead of being limited by the slower SATA interface. 

NVMe SSD drives usually come in the form of a slim M.2 card. Bear in mind though, that M.2 is only a physical form factor and that being M.2 does not necessarily imply NVMe interface. SATA M.2 SSDs exist in the market. Many slim laptops use M.2 SATA SSDs as storage, for example. The SATA M.2 SSDs are usually cheaper than the NVMe ones, but they are also only as fast as those SATA SSDs in 2.5 inch cases. Make sure to look for "NVMe" instead of "M.2" when trying to buy one.

On a desktop motherboard, an M.2 slot may be PCIe-only or SATA/PCIe (may be set through BIOS). Here PCIe indicates that it can accept an NVMe SSD. When checking a motherboard's manual, which kind of M.2 slots it provides is one thing that worth paying some attention to.

If a large SSD working directory is desirable, one can get multiple SSDs and make them into an LVM. An LVM is a logical volume that spans multiple physical hard drives but pretends to be made on a single drive. For example, if there are 3x 1TB SSDs in the computer and they are made into one LVM, we get a single 3TB, continuous logical volume, which can be mounted as a single directory in Linux.

=== Power ===

At full speed, one CPU consumes ~100W of power, one GPU consumes 250-280W. Motherboard, memories, drives and peripherals consume less than 100W in total. For a 2-GPU system, 750W power should be enough.</text>
    </revision>
  </page>
  <page>
    <title>Coot and chimera functions</title>
    <ns>0</ns>
    <id>128</id>
    <revision>
      <id>4711</id>
      <parentid>4685</parentid>
      <timestamp>2020-11-17T17:32:41Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <comment>/* Transforming maps and coordinates in COOT */</comment>
      <origin>4711</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="8275" sha1="dahb5b7eiz10eiqey8hk688a52gvj0z" xml:space="preserve">https://github.com/pemsley/coot/blob/master/src/coot.py#L999

==A list of useful python functions==


&lt;syntaxhighlight language=python&gt;

set_nomenclature_errors_on_read ("autocorrect")
set_nomenclature_errors_on_read ("ignore")

set_refine_auto_range_step (2)
refine_residue_sphere_radius = 1.5
set_show_unit_cells_all (0)



def del_chains(imol,chains):
    if isinstance(chains,basestring):
        chains=list(chains)
    for c in chains:
        delete_chain(imol,c)
def sel(chain,res):
    return [[chain,i,''] for i in res]
    

def sel_range(chain,start,stop):
    return [[chain,i,''] for i in range(start,stop+1)]


handle_read_draw_molecule_with_recentre ("A.pdb", 1)
del_chains(0,'ABCDEF')
s1=sel_range('B',20,337)
s=[['B',5081,'']]+s1
refine_residues(0,s)

copy_residue_range(5,'L',12,'A',105,214)

delete_residue_range(0,'A',1,2000)

&lt;/syntaxhighlight&gt;

==Transforming maps and coordinates in COOT==

=== To get the transformation matrix:====
&lt;syntaxhighlight&gt;
d:\CCP4\6.4\bin\superpose.exe pdbb.pdb pdba.pdb &gt;out1.log
        Rx         Ry         Rz           T
     -0.234     -0.944      0.231       15.850
     -0.484     -0.093     -0.870       52.586
      0.843     -0.316     -0.435        8.455
&lt;/syntaxhighlight&gt;
From COOT SSM:
&lt;syntaxhighlight&gt;
pdbb.pdb to pdba.pdb
-0.2342,-0.9443,0.2314
-0.4838, -0.09325,-0.8702
0.8432,-0.3157, -0.435
(15.8497,52.5858,8.45504)
&lt;/syntaxhighlight&gt;
===To transform map in P1===

guile command:
&lt;syntaxhighlight&gt;
(transform-map imol mat trans about-pt radius space-group cell)
//transform a block of map with radius 10, at current view point, the cell(1) means take the cell parameter of molecule 1, it is madatory, due to program bug
transform_map (4, (-0.2342,-0.9443,0.2314,-0.4838, -0.09325,-0.8702,0.8432,-0.3157, -0.435),(15.85,52.59,8.455), rotation_centre(),10,"P 1",cell(1))
//transform a block of map with radius 35, at center of molecule 2
transform_map (4, (-0.2342,-0.9443,0.2314,-0.4838, -0.09325,-0.8702,0.8432,-0.3157, -0.435),(15.85,52.59,8.455), center_of_mass(2),35,"P 1",cell(1))
&lt;/syntaxhighlight&gt;
===To transform PDB only===
&lt;syntaxhighlight&gt;
//transform 
transform_molecule_by(2, -0.2342,-0.9443,0.2314,-0.4838, -0.09325,-0.8702,0.8432,-0.3157, -0.435,15.85,52.59,8.455 )
&lt;/syntaxhighlight&gt;

==COOT python scripting examples==
===getting the internal atom index===
&lt;syntaxhighlight lang="Python" line='line'&gt;

atom_index_full(0,"A", 37, "", "O", "") 

'''
&lt;c-interface.cc&gt;
// return -1 if atom not found.
int atom_index_full(int imol, const char *chain_id, int iresno, const char *inscode, const char *atom_id, const char *altconf) {
'''
&lt;/syntaxhighlight&gt;

===fix an atom===

Note that COOT is very specific on the atom name: ' C  ' (four charactors, first one is space). 
Chain ID here should not have a space in front.

&lt;syntaxhighlight lang="Python" line='line'&gt;

mark_atom_as_fixed(0,['A',37,'',' C  ',''],1)

&lt;/syntaxhighlight&gt;


COOT C++ source for reference:

&lt;syntaxhighlight lang="C++" line='line'&gt;

#ifdef USE_PYTHON
PyObject *mark_atom_as_fixed_py(int imol, PyObject *atom_spec, int state) {
   PyObject *retval = Py_False;
   std::pair&lt;bool, coot::atom_spec_t&gt; p = make_atom_spec_py(atom_spec);
   if (p.first) {
      graphics_info_t::mark_atom_as_fixed(imol, p.second, state);
      graphics_draw();
      retval = Py_True; // Shall we return True if atom got marked?
   }
   Py_INCREF(retval);
   return retval;
}
#endif // USE_PYTHON 

enum fixed_atom_pick_state_t { FIXED_ATOM_NO_PICK = 0, 
				  FIXED_ATOM_FIX = 1, 
				  FIXED_ATOM_UNFIX = 2 };
				  
				  

// ipick is on/off, is_unpick is when we are picking a fixed atom to
// be unfixed.
// 
void setup_fixed_atom_pick(short int ipick, short int is_unpick) {

   graphics_info_t g;
   if (ipick == 0) {
      graphics_info_t::in_fixed_atom_define = coot::FIXED_ATOM_NO_PICK;
   } else {
      g.pick_cursor_maybe();
      if (is_unpick) {
	 graphics_info_t::in_fixed_atom_define = coot::FIXED_ATOM_UNFIX;
      } else { 
	 graphics_info_t::in_fixed_atom_define = coot::FIXED_ATOM_FIX;
      }
   }
}
void
graphics_info_t::check_if_in_fixed_atom_define(GdkEventButton *event,
					       const GdkModifierType &amp;state) {

   
   if (in_fixed_atom_define != coot::FIXED_ATOM_NO_PICK) {
      // we were listening for a pick then...
      bool pick_state = 0;
      if (in_fixed_atom_define == coot::FIXED_ATOM_FIX) {
	 pick_state = 1;
      }
      if (in_fixed_atom_define == coot::FIXED_ATOM_UNFIX) {
	 pick_state = 0;
      }

      // pick and fix are interchanged here. I mean on
      // UNFIX/pick_state=0 that an atom that is marked as FIXED (it
      // should have a dot) becomes unmarked as fixed.
      // 
      pick_info naii = atom_pick(event);
      if (naii.success == GL_TRUE) {
	 coot::atom_spec_t as(molecules[naii.imol].atom_sel.atom_selection[naii.atom_index]);
	 mark_atom_as_fixed(naii.imol, as, pick_state);
	 std::cout &lt;&lt; "   " &lt;&lt; as &lt;&lt; " is a marked as fixed " &lt;&lt; pick_state &lt;&lt; std::endl;
	 graphics_draw();

	 // Sadly, Ctrl + left mouse click is intercepted upstream of
	 // this and we don't get to see it here.  Currently (20080212).
	 
	 if (! (state &amp; GDK_CONTROL_MASK)) { 
	    // Ctrl key is not pressed.
	    if (!fixed_atom_dialog) {
	       std::cout &lt;&lt; "Ooops fixed atom dialog has gone!" &lt;&lt; std::endl;
	    } else { 
	       GtkWidget *button1 = lookup_widget(fixed_atom_dialog,   "fix_atom_togglebutton");
	       GtkWidget *button2 = lookup_widget(fixed_atom_dialog, "unfix_atom_togglebutton");
	       if (button1)
		  gtk_toggle_button_set_active(GTK_TOGGLE_BUTTON(button1), FALSE);
	       if (button2)
		  gtk_toggle_button_set_active(GTK_TOGGLE_BUTTON(button2), FALSE);
	       in_fixed_atom_define = coot::FIXED_ATOM_NO_PICK;
	       normal_cursor();
	    }
	 }
      }
   }
}



&lt;/syntaxhighlight&gt;
===Fix the whole backbone===
&lt;syntaxhighlight lang="Python" line='line'&gt;
imol=0
chain='A'

resrange=range(1500)

for res in resrange:
  for atm in ('CA','N','O','C'):
    atm_formated=' {:3}'.format(atm)
    imol=0
    s=[chain,res,'',atm_formated,'']
    print(s)
    
    mark_atom_as_fixed(imol,s,1) #1 means fix, 0 means unfix
    
  &lt;/syntaxhighlight&gt;

===atom_spec syntax (python)===
Note the very specific format for atom names. One leading space, four chars in total (wwPDB specifies cols 13-16, COOT always starts at col 14).
&lt;syntaxhighlight lang="Python" line='line'&gt;

[str chain, int res_no, str ins_code, str atm, str alt_conf]

["A", 81, "", " CA ", ""]
&lt;/syntaxhighlight&gt;

Source: &lt;c-interface-build.cc&gt;
&lt;syntaxhighlight lang="C" line='line'&gt;
#ifdef USE_GUILE
// e.g. atom_spec: '("A" 81 "" " CA " "")
//      position   '(2.3 3.4 5.6)


#ifdef USE_PYTHON
PyObject *drag_intermediate_atom_py(PyObject *atom_spec, PyObject *position) {
// e.g. atom_spec: ["A", 81, "", " CA ", ""]
//      position   [2.3, 3.4, 5.6]

   PyObject *retval = Py_False;
   PyObject *x_py;
   PyObject *y_py;
   PyObject *z_py;
   std::pair&lt;bool, coot::atom_spec_t&gt; p = make_atom_spec_py(atom_spec);
   if (p.first) {
      int pos_length = PyObject_Length(position);
      if (pos_length == 3) {
	 x_py = PyList_GetItem(position, 0);
	 y_py = PyList_GetItem(position, 1);
	 z_py = PyList_GetItem(position, 2);
	 double x = PyFloat_AsDouble(x_py);
	 double y = PyFloat_AsDouble(y_py);
	 double z = PyFloat_AsDouble(z_py);
	 clipper::Coord_orth pt(x,y,z);
	 graphics_info_t::drag_intermediate_atom(p.second, pt);
	 retval = Py_True; // Shall we return True if atom is dragged?
      }
   }

   Py_INCREF(retval);
   return retval;
}
#endif // USE_PYTHON


&lt;/syntaxhighlight&gt;


Source: &lt;graphics-info.cc&gt;
&lt;syntaxhighlight lang="C++" line='line'&gt;

#ifdef USE_PYTHON
// lets have it as a tuple not a list
PyObject *
graphics_info_t::atom_spec_to_py(const coot::atom_spec_t &amp;spec) const {

  //  PyObject *r = PyTuple_New(6);
  PyObject *r = PyList_New(6);
  PyList_SetItem(r, 0, PyInt_FromLong(spec.int_user_data));
  PyList_SetItem(r, 1, PyString_FromString(spec.chain_id.c_str()));
  PyList_SetItem(r, 2, PyInt_FromLong(spec.res_no));
  PyList_SetItem(r, 3, PyString_FromString(spec.ins_code.c_str()));
  PyList_SetItem(r, 4, PyString_FromString(spec.atom_name.c_str()));
  PyList_SetItem(r, 5, PyString_FromString(spec.alt_conf.c_str()));

  return r;
} 
#endif

&lt;/syntaxhighlight&gt;</text>
    </revision>
  </page>
  <page>
    <title>CryoSPARC tips</title>
    <ns>0</ns>
    <id>7</id>
    <revision>
      <id>4662</id>
      <parentid>4661</parentid>
      <timestamp>2019-08-01T07:31:32Z</timestamp>
      <contributor>
        <ip>142.1.243.41</ip>
      </contributor>
      <comment>/* Changing CUDA version */</comment>
      <origin>4662</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="8505" sha1="ky7u1pwxs1u8zxdfzr6w9co2s5bnh2d" xml:space="preserve">==Working with negative stain data==
Although there is a switch in the particle extraction job type for indicating that the data are negative stain images, it is simpler to invert the original micrographs using e2proc2d.py from EMAN2:

&lt;syntaxhighlight lang="bash" style="border:1px "&gt;
e2proc2d.py  *.DM4  @.mrc  --mult=-1 
&lt;/syntaxhighlight&gt;

https://blake.bcm.edu/emanwiki/EMAN2/Programs/e2proc2d

==Deleting cache==
The location of the cache directory is set in the cryosparcw start command in "--ssdpath /SSD_disk". The name of the cache folder is usually "instance_MachineName:39001". 

The contents in the cache can be safely deleted to release disk space, when no job is running. If deleted when jobs are running, only the running job may quit because the cached data it is using no longer exists. Finished jobs do not have any result directed to the cache folder.


==Changing Database location==

https://discuss.cryosparc.com/t/how-to-change-database-directory-in-cryosparc-v2/2068/6


== An example cryoSPARC2 start script (single workstation) ==

cryoSPARC2.sh:
&lt;syntaxhighlight lang="bash" style="border:1px "&gt;
#!/bin/bash
#cryoSPARC2.sh
/usr/local/cryosparc2/cryosparc2_master/bin/cryosparcm start
/usr/local/cryosparc2/cryosparc2_worker/bin/cryosparcw connect --worker ThisMachine --master ThisMachine  --update --gpus 0,1 --ssdpath /SSD_disk  --lane default 

&lt;/syntaxhighlight&gt;
Run the above script as:
&lt;syntaxhighlight lang="bash" style="border:1px "&gt;
bash cryoSPARC2.sh
&lt;/syntaxhighlight&gt;



For freshly installed cryosparc2 there may not be a lane already. The above worker startup command should be changed to:
&lt;syntaxhighlight lang="bash" style="border:1px "&gt;
/usr/local/cryosparc2/cryosparc2_worker/bin/cryosparcw connect --worker ThisMachine --master ThisMachine   --gpus 0,1 --ssdpath /SSD_disk  --lane default --newlane
&lt;/syntaxhighlight&gt;

==Fixing "ERROR: This hostname is already registered! Remove it first."==
1 Delete the current lane (assuming that it is "default":
::&lt;syntaxhighlight lang="bash" style="border:1px "&gt;
cryosparcm cli 'remove_scheduler_lane("default")'
&lt;/syntaxhighlight&gt;
2 Restart cryosparcm 
::&lt;syntaxhighlight lang="bash" style="border:1px "&gt;
cryosparcm restart
&lt;/syntaxhighlight&gt;
3 create a new lane
::&lt;syntaxhighlight lang="bash" style="border:1px "&gt;
cryosparcw connect --worker WorkerName --master MasterName  --ssdpath /SSD    --newlane --lane default
&lt;/syntaxhighlight&gt;

==Removing cryoSPARC from $PATH==
The cryoSPARC dependencies (anaconda python, mongodb, supervisord) do not need to exits in the path. Deleting them from .bashrc is completely safe.

With a minor modification to the cryosparcm and cryosparcw scripts, even the cryoSPARC_master/bin and cryoSPARC_master/bin directories can be removed from $PATH:
::&lt;syntaxhighlight lang="bash" style="border:1px "&gt;
script_dir="$( cd "$(dirname "$0")" ; pwd -P )"
&lt;/syntaxhighlight&gt;
to
::&lt;syntaxhighlight lang="bash" style="border:1px "&gt;
script_dir="$(dirname "$(realpath "$0")")"
&lt;/syntaxhighlight&gt;

==Changing CUDA version==

The cryosparcw script needs to be able to find the pip of the anaconda isntallation in the "deps" dir.



::&lt;syntaxhighlight lang="bash" style="border:1px "&gt;
cryosparcw newcuda /usr/local/cuda-10.1
&lt;/syntaxhighlight&gt;

If after this cryoSPARC2 can not run 2D classification, it is likely the Nvidia driver needs update.

==Cryosparcm commands==
===Starting cryosparc2 ipython environment===
&lt;syntaxhighlight lang="bash" style="border:1px "&gt;
cryosparcm ipython
&lt;/syntaxhighlight&gt;

===Starting cryosparc2 ipython environment with direct access to "cli" functions===

&lt;syntaxhighlight lang="bash" style="border:1px "&gt;
cryosparcm icli
&lt;/syntaxhighlight&gt;

===Starting mongo shell===
&lt;syntaxhighlight lang="bash" style="border:1px "&gt;
cryosparcm mongo
&lt;/syntaxhighlight&gt;
====Mongo shell commands====
=====listing collections=====
&lt;syntaxhighlight lang="bash" style="border:1px "&gt;
show collections
&lt;/syntaxhighlight&gt;
=====listing documents in a collection=====
&lt;syntaxhighlight lang="bash" style="border:1px "&gt;
db.&lt;collection&gt;.find()
&lt;/syntaxhighlight&gt;
for example:
&lt;syntaxhighlight lang="bash" style="border:1px "&gt;
db.fs.files.find()
&lt;/syntaxhighlight&gt;

===Starting meteor shell===
&lt;syntaxhighlight lang="bash" style="border:1px "&gt;
cryosparcm mshell
&lt;/syntaxhighlight&gt;

===Displaying (end of) log===
&lt;syntaxhighlight lang="bash" style="border:1px "&gt;
cryosparcm log
&lt;/syntaxhighlight&gt;

===Force updating deps(anaconda, meteor, mongo, nodejs, etc.)===
&lt;syntaxhighlight lang="bash" style="border:1px "&gt;
cryosparcm forcedeps
&lt;/syntaxhighlight&gt;

===Creating new user===
&lt;syntaxhighlight lang="bash" style="border:1px "&gt;
cryosparcm createuser --email &lt;user_email&gt; --password &lt;user_password&gt; --name "&lt;full name&gt;"
&lt;/syntaxhighlight&gt;

===Listing users===
&lt;syntaxhighlight lang="bash" style="border:1px "&gt;
cryosparcm listusers
&lt;/syntaxhighlight&gt;



===Backing up and restoring database===
&lt;syntaxhighlight lang="bash" style="border:1px "&gt;
cryosparcm backup --dir &lt;dir&gt; --file &lt;backup_filename&gt;
&lt;/syntaxhighlight&gt;
Eqivalent to:
&lt;syntaxhighlight lang="bash" style="border:1px "&gt;
$CRYOSPARC_ROOT_DIR/deps/external/mongodb/bin/mongodump --archive="$dump_path" --host localhost --port $CRYOSPARC_MONGO_PORT 
&lt;/syntaxhighlight&gt;

&lt;syntaxhighlight lang="bash" style="border:1px "&gt;
cryosparcm restore --file &lt;backup_filename&gt;
&lt;/syntaxhighlight&gt;

Eqivalent to:
&lt;syntaxhighlight lang="bash" style="border:1px "&gt;
$CRYOSPARC_ROOT_DIR/deps/external/mongodb/bin/mongorestore --archive="$restore_path" --host localhost --port $CRYOSPARC_MONGO_PORT 
&lt;/syntaxhighlight&gt;


=="cryosparcm cli" commands==

The "cryosparcm cli" commands allow directly calling internal control functions. There is no official document on them. Must be used with caution.
===Listing lanes===

&lt;syntaxhighlight lang="bash" style="border:1px "&gt;
cryosparcm cli 'get_scheduler_targets()'
&lt;/syntaxhighlight&gt;

===Deleting a lane===

&lt;syntaxhighlight lang="bash" style="border:1px "&gt;
cryosparcm cli 'remove_scheduler_lane("LaneName")'
&lt;/syntaxhighlight&gt;

===Turning off automatic caching on job start===

Source: https://discuss.cryosparc.com/t/how-to-clear-the-cache-in-v2/2161/12

&lt;syntaxhighlight lang="bash" style="border:1px "&gt;
cryosparcm cli 'set_project_param_default("PX","compute_use_ssd",False)'
&lt;/syntaxhighlight&gt;

&lt;syntaxhighlight lang="bash" style="border:1px "&gt;
cryosparcm cli 'unset_project_param_default("PX","compute_use_ssd")'
&lt;/syntaxhighlight&gt;
===Managing jobs===
====Getting job information====
&lt;syntaxhighlight lang="bash" style="border:1px "&gt;
cryosparcm cli 'get_job("PX","JXXXX", kwargs)' 
&lt;/syntaxhighlight&gt;
This returns the mongodb entry of the job as a dictionary. The "kwargs" can be a list of keywords of interest, such as "running_at", "job_type", "_id", "job_dir", "output_results", "input_slot_groups", etc.. To find all keys, use this command:
&lt;syntaxhighlight lang="bash" style="border:1px "&gt;
cryosparcm cli 'get_job("PX","JXXXX").keys()' 
&lt;/syntaxhighlight&gt;

====Deleting a job====
&lt;syntaxhighlight lang="bash" style="border:1px "&gt;
cryosparcm cli 'delete_job("PX","JXXXX" )'
&lt;/syntaxhighlight&gt;

==MongoDB commands==
&lt;syntaxhighlight lang="bash" style="border:1px "&gt;
show dbs
use meteor
show collections

db.cache_files.stats({ scale : 1024 })
db.config.stats({ scale : 1024 })
db.events.stats({ scale : 1024 })
db.file_index.stats({ scale : 1024 })
db.fs.chunks.stats({ scale : 1024 })
db.fs.files.stats({ scale : 1024 })
db.int_curate_exposures.stats({ scale : 1024 })
db.jobs.stats({ scale : 1024 })
db.meteor_accounts_loginServiceConfiguration.stats({ scale : 1024 })
db.projects.stats({ scale : 1024 })
db.roles.stats({ scale : 1024 })
db.sched_config.stats({ scale : 1024 })
db.users.stats({ scale : 1024 })
db.workspaces.stats({ scale : 1024 })


db.events.find().sort({_id:-1})


db.events.find({created_at:{$lt:new Date((new Date())-1000*60*60*24*14)}}).sort({created_at:-1})

db.events.deleteMany({created_at:{$lt:new Date((new Date())-1000*60*60*24*7)}})


db['fs.chunks'].remove({files_id:my_id});
db['fs.files'].remove({_id:my_id});

/usr/local/cryosparc2/cryosparc2_master/deps/external/mongodb/bin/mongofiles --host localhost:39001 --db fs.files delete logo_susan1225.png
/usr/local/cryosparc2/cryosparc2_master/deps/external/mongodb/bin/mongofiles --host localhost:39001 --db fs.files search image.png
mongofiles -d records search corinth


mongofiles --host localhost:39001 -d meteor get P1_J2*


db.fs.chunks.find({files_id: ObjectId("5bf1c7a90398a21465aed0b2")})

&lt;/syntaxhighlight&gt;</text>
    </revision>
  </page>
  <page>
    <title>EMAN2</title>
    <ns>0</ns>
    <id>133</id>
    <revision>
      <id>4710</id>
      <parentid>4709</parentid>
      <timestamp>2020-11-07T20:25:16Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <comment>/* Script 1: making projections from a map */</comment>
      <origin>4710</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2422" sha1="rfdr06ia79prb601w80653z3mpu7gl8" xml:space="preserve">==Preparations==

Need to have EMAN2 python as the default python.  Temporarily override $PATH can work:

::&lt;syntaxhighlight lang="bash" style="border:1px "&gt;
export PATH=/usr/local/EMAN2/bin:$PATH
&lt;/syntaxhighlight&gt;

Better way: install EMAN2 as an conda ENV:

https://blake.bcm.edu/emanwiki/EMAN2/COMPILE_EMAN2_ANACONDA

::&lt;syntaxhighlight lang="bash" style="border:1px "&gt;
conda create -n eman2 eman-deps-dev -c cryoem -c defaults -c conda-forge

conda activate eman2
git clone https://github.com/cryoem/eman2.git
mkdir build
cd build 
cmake ../eman2  -DENABLE_OPTIMIZE_MACHINE=ON 
make -j 8
make install

&lt;/syntaxhighlight&gt;

Activate:
::&lt;syntaxhighlight lang="bash" style="border:1px "&gt;
conda activate eman2
&lt;/syntaxhighlight&gt;


==Script 1: making projections from a map==

::&lt;syntaxhighlight lang="python" style="border:1px "&gt;
#!/usr/bin/env python
#https://blake.bcm.edu/emanwiki/EMAN2/Tutorials/make_a_projection
#prj.py
#usage:
#prj.py map.mrc 15 10 120 
#this tilts the map every 10 degrees, while rotating from 0 to 105 degrees at 15 deg intervals at each tilting angle

#if the systme has imagemagick, uncomment the os.sysmem... lines to generate montage of the projections


from EMAN2 import *
import os

a = EMData()
a.read_image(sys.argv[1])

deg =15
tilt=10
end=180

if len(sys.argv)&gt;2:
    deg=int(sys.argv[2])
if len(sys.argv)&gt;3:
    tilt=int(sys.argv[3])
if len(sys.argv)&gt;4:
    end=int(sys.argv[4])


#sym = Symmetries.get("C3")
#orients = sym.gen_orientations("eman",{"delta":deg, 'inc_mirror':True})
#data = [a.project("standard",t) for t in orients]
#display(data)

altrange=range(0,90+1,tilt)
azrange=range(0,end,deg)
c=0
for alt in altrange:
    for az in azrange: #for C3
        c+=1
        t=Transform({"type":"eman","alt":alt,'az':az})
        d=a.project("standard",t)
        name="{:04d}".format(c)
        name+="_al{}_az{}".format(alt,az)
        name+=".png"
        d.write_image("{}".format(name))
        crop='convert {} -crop 300x300+50+50 +repage {} '.format(name,name)
        #if the systme has imagemagick, uncomment the os.sysmem... lines to generate montage of the projections
        #os.system(crop)


r1=len(altrange)
r2=len(azrange)
command="montage 0*.png -tile {}x{} -background '#ffffff'  -geometry +0+0 proj.png".format(r2,r1)
#if the systme has imagemagick, uncomment the os.sysmem... lines to generate montage of the projections
#os.system(command)
&lt;/syntaxhighlight&gt;</text>
    </revision>
  </page>
  <page>
    <title>EPU XML</title>
    <ns>0</ns>
    <id>18</id>
    <revision>
      <id>525</id>
      <parentid>450</parentid>
      <timestamp>2019-01-28T23:25:06Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <origin>525</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="8317" sha1="qbkpacfdn129g18i9ony5czz5e1cpdq" xml:space="preserve">Here is an example of EPU XML file. 

The following parameters can be found: 

Nominal magnification: 57000X

Voltage: 120000 V

Applied defocus:1.25 (um)

Ångströms per pixel: 2.5 

Intensity: 0.4084 (C2 aperture)


&lt;syntaxhighlight lang="XML" style="border:1px "&gt;XML
&lt;MicroscopeImage xmlns="http://schemas.datacontract.org/2004/07/Fei.SharedObjects" xmlns:i="http://www.w3.org/2001/XMLSchema-instance"&gt;
&lt;name&gt;Empty&lt;/name&gt;
&lt;uniqueID&gt;68bf9b3b-262c-4818-b46b-dfe3284d8d71&lt;/uniqueID&gt;
&lt;CustomData xmlns:a="http://schemas.microsoft.com/2003/10/Serialization/Arrays"&gt;
&lt;a:KeyValueOfstringanyType&gt;
&lt;a:Key&gt;Dose&lt;/a:Key&gt;
&lt;a:Value i:type="b:double" xmlns:b="http://www.w3.org/2001/XMLSchema"&gt;2.4752796037075441E+21&lt;/a:Value&gt;
&lt;/a:KeyValueOfstringanyType&gt;
&lt;a:KeyValueOfstringanyType&gt;
&lt;a:Key&gt;PhasePlateUsed&lt;/a:Key&gt;
&lt;a:Value i:type="b:boolean" xmlns:b="http://www.w3.org/2001/XMLSchema"&gt;false&lt;/a:Value&gt;
&lt;/a:KeyValueOfstringanyType&gt;
&lt;a:KeyValueOfstringanyType&gt;
&lt;a:Key&gt;AppliedDefocus&lt;/a:Key&gt;
&lt;a:Value i:type="b:double" xmlns:b="http://www.w3.org/2001/XMLSchema"&gt;-1.2499999999999999E-06&lt;/a:Value&gt;
&lt;/a:KeyValueOfstringanyType&gt;
&lt;a:KeyValueOfstringanyType&gt;
&lt;a:Key&gt;BinaryResult.Detector&lt;/a:Key&gt;
&lt;a:Value i:type="b:string" xmlns:b="http://www.w3.org/2001/XMLSchema"&gt;BM-Ceta&lt;/a:Value&gt;
&lt;/a:KeyValueOfstringanyType&gt;
&lt;/CustomData&gt;
&lt;IntensityScale i:nil="true"/&gt;
&lt;ReferenceTransformation&gt;
&lt;matrix xmlns:a="http://schemas.datacontract.org/2004/07/System.Windows.Media"&gt;
&lt;a:_m11&gt;6.536022279344795E-13&lt;/a:_m11&gt;
&lt;a:_m12&gt;-2.4962916042425776E-10&lt;/a:_m12&gt;
&lt;a:_m21&gt;-2.4962916042425776E-10&lt;/a:_m21&gt;
&lt;a:_m22&gt;-6.5360222793446415E-13&lt;/a:_m22&gt;
&lt;a:_offsetX&gt;0&lt;/a:_offsetX&gt;
&lt;a:_offsetY&gt;0&lt;/a:_offsetY&gt;
&lt;a:_padding&gt;0&lt;/a:_padding&gt;
&lt;a:_type&gt;TRANSFORM_IS_UNKNOWN&lt;/a:_type&gt;
&lt;/matrix&gt;
&lt;unit xmlns:a="http://schemas.datacontract.org/2004/07/Fei.Common.Types"&gt;
&lt;a:_x003C_PrefixExponent_x003E_k__BackingField&gt;1&lt;/a:_x003C_PrefixExponent_x003E_k__BackingField&gt;
&lt;a:_x003C_Symbol_x003E_k__BackingField&gt;m&lt;/a:_x003C_Symbol_x003E_k__BackingField&gt;
&lt;/unit&gt;
&lt;/ReferenceTransformation&gt;
&lt;SpatialScale&gt;
&lt;offset&gt;
&lt;x&gt;
&lt;numericValue&gt;0&lt;/numericValue&gt;
&lt;unit xmlns:a="http://schemas.datacontract.org/2004/07/Fei.Common.Types"&gt;
&lt;a:_x003C_PrefixExponent_x003E_k__BackingField&gt;1&lt;/a:_x003C_PrefixExponent_x003E_k__BackingField&gt;
&lt;a:_x003C_Symbol_x003E_k__BackingField&gt;m&lt;/a:_x003C_Symbol_x003E_k__BackingField&gt;
&lt;/unit&gt;
&lt;/x&gt;
&lt;y&gt;
&lt;numericValue&gt;0&lt;/numericValue&gt;
&lt;unit xmlns:a="http://schemas.datacontract.org/2004/07/Fei.Common.Types"&gt;
&lt;a:_x003C_PrefixExponent_x003E_k__BackingField&gt;1&lt;/a:_x003C_PrefixExponent_x003E_k__BackingField&gt;
&lt;a:_x003C_Symbol_x003E_k__BackingField&gt;m&lt;/a:_x003C_Symbol_x003E_k__BackingField&gt;
&lt;/unit&gt;
&lt;/y&gt;
&lt;/offset&gt;
&lt;pixelSize&gt;
&lt;x&gt;
&lt;numericValue&gt;2.496300111065608E-10&lt;/numericValue&gt;
&lt;unit xmlns:a="http://schemas.datacontract.org/2004/07/Fei.Common.Types"&gt;
&lt;a:_x003C_PrefixExponent_x003E_k__BackingField&gt;1&lt;/a:_x003C_PrefixExponent_x003E_k__BackingField&gt;
&lt;a:_x003C_Symbol_x003E_k__BackingField&gt;m&lt;/a:_x003C_Symbol_x003E_k__BackingField&gt;
&lt;/unit&gt;
&lt;/x&gt;
&lt;y&gt;
&lt;numericValue&gt;2.496300111065608E-10&lt;/numericValue&gt;
&lt;unit xmlns:a="http://schemas.datacontract.org/2004/07/Fei.Common.Types"&gt;
&lt;a:_x003C_PrefixExponent_x003E_k__BackingField&gt;1&lt;/a:_x003C_PrefixExponent_x003E_k__BackingField&gt;
&lt;a:_x003C_Symbol_x003E_k__BackingField&gt;m&lt;/a:_x003C_Symbol_x003E_k__BackingField&gt;
&lt;/unit&gt;
&lt;/y&gt;
&lt;/pixelSize&gt;
&lt;/SpatialScale&gt;
&lt;microscopeData&gt;
&lt;acquisition&gt;
&lt;acquisitionDateTime&gt;2019-01-23T11:54:43.9909873+01:00&lt;/acquisitionDateTime&gt;
&lt;analyticalDetectors/&gt;
&lt;camera&gt;
&lt;Binning xmlns:a="http://schemas.datacontract.org/2004/07/System.Drawing"&gt;
&lt;a:x&gt;1&lt;/a:x&gt;
&lt;a:y&gt;1&lt;/a:y&gt;
&lt;/Binning&gt;
&lt;CameraLocation&gt;BottomMounted&lt;/CameraLocation&gt;
&lt;CameraSpecificInput xmlns:a="http://schemas.microsoft.com/2003/10/Serialization/Arrays"&gt;
&lt;a:KeyValueOfstringanyType&gt;
&lt;a:Key&gt;CetaFramesSummed&lt;/a:Key&gt;
&lt;a:Value i:type="b:int" xmlns:b="http://www.w3.org/2001/XMLSchema"&gt;1&lt;/a:Value&gt;
&lt;/a:KeyValueOfstringanyType&gt;
&lt;a:KeyValueOfstringanyType&gt;
&lt;a:Key&gt;CetaNoiseReductionEnabled&lt;/a:Key&gt;
&lt;a:Value i:type="b:boolean" xmlns:b="http://www.w3.org/2001/XMLSchema"&gt;true&lt;/a:Value&gt;
&lt;/a:KeyValueOfstringanyType&gt;
&lt;/CameraSpecificInput&gt;
&lt;DarkGainCorrection&gt;None&lt;/DarkGainCorrection&gt;
&lt;ExposureTime&gt;1&lt;/ExposureTime&gt;
&lt;Inserted&gt;true&lt;/Inserted&gt;
&lt;Name&gt;BM-Ceta&lt;/Name&gt;
&lt;PreExposurePauseTime&gt;0&lt;/PreExposurePauseTime&gt;
&lt;PreExposureSupported&gt;false&lt;/PreExposureSupported&gt;
&lt;PreExposureTime&gt;0&lt;/PreExposureTime&gt;
&lt;ReadoutArea xmlns:a="http://schemas.datacontract.org/2004/07/System.Drawing"&gt;
&lt;a:height&gt;4096&lt;/a:height&gt;
&lt;a:width&gt;4096&lt;/a:width&gt;
&lt;a:x&gt;0&lt;/a:x&gt;
&lt;a:y&gt;0&lt;/a:y&gt;
&lt;/ReadoutArea&gt;
&lt;Shutter&gt;PreSpecimen&lt;/Shutter&gt;
&lt;/camera&gt;
&lt;plateCamera&gt;
&lt;ExposureTime&gt;0&lt;/ExposureTime&gt;
&lt;Use&gt;false&lt;/Use&gt;
&lt;/plateCamera&gt;
&lt;scanSettings&gt;
&lt;DwellTime&gt;0&lt;/DwellTime&gt;
&lt;ReducedArea i:nil="true" xmlns:a="http://schemas.datacontract.org/2004/07/System.Drawing"/&gt;
&lt;Resolution xmlns:a="http://schemas.datacontract.org/2004/07/System.Drawing"&gt;
&lt;a:height&gt;0&lt;/a:height&gt;
&lt;a:width&gt;0&lt;/a:width&gt;
&lt;/Resolution&gt;
&lt;ScanArea xmlns:a="http://schemas.datacontract.org/2004/07/System.Drawing"&gt;
&lt;a:height&gt;0&lt;/a:height&gt;
&lt;a:width&gt;0&lt;/a:width&gt;
&lt;a:x&gt;0&lt;/a:x&gt;
&lt;a:y&gt;0&lt;/a:y&gt;
&lt;/ScanArea&gt;
&lt;ScanRotation&gt;0&lt;/ScanRotation&gt;
&lt;/scanSettings&gt;
&lt;scanningDetector&gt;
&lt;DetectorType&gt;SecondaryElectrons&lt;/DetectorType&gt;
&lt;Gain i:nil="true"/&gt;
&lt;Inserted&gt;false&lt;/Inserted&gt;
&lt;Name i:nil="true"/&gt;
&lt;Offset i:nil="true"/&gt;
&lt;/scanningDetector&gt;
&lt;/acquisition&gt;
&lt;core&gt;
&lt;ApplicationSoftware&gt;Fei EPU&lt;/ApplicationSoftware&gt;
&lt;ApplicationSoftwareVersion&gt;1.5.1.50&lt;/ApplicationSoftwareVersion&gt;
&lt;Guid&gt;2c067b49-5eb5-4427-bcf5-4cfbac8e5473&lt;/Guid&gt;
&lt;/core&gt;
&lt;gun&gt;
&lt;AccelerationVoltage&gt;120000&lt;/AccelerationVoltage&gt;
&lt;ExtractorVoltage i:nil="true"/&gt;
&lt;Filament i:nil="true"/&gt;
&lt;GunLens i:nil="true"/&gt;
&lt;Sourcetype&gt;Thermionic&lt;/Sourcetype&gt;
&lt;WehneltBias i:nil="true"/&gt;
&lt;/gun&gt;
&lt;instrument&gt;
&lt;AcquisitionSoftware i:nil="true"/&gt;
&lt;AcquisitionSoftwareVersion i:nil="true"/&gt;
&lt;ComputerName&gt;TALOS-9950328&lt;/ComputerName&gt;
&lt;InstrumentID&gt;9950328&lt;/InstrumentID&gt;
&lt;InstrumentModel&gt;TALOS-9950328&lt;/InstrumentModel&gt;
&lt;/instrument&gt;
&lt;optics&gt;
&lt;BeamConvergence i:nil="true"/&gt;
&lt;BeamDiameter&gt;0&lt;/BeamDiameter&gt;
&lt;BeamShift xmlns:a="http://schemas.datacontract.org/2004/07/Fei.Types"&gt;
&lt;a:_x&gt;-0.00670307781547308&lt;/a:_x&gt;
&lt;a:_y&gt;0.018017951399087906&lt;/a:_y&gt;
&lt;/BeamShift&gt;
&lt;BeamTilt xmlns:a="http://schemas.datacontract.org/2004/07/Fei.Types"&gt;
&lt;a:_x&gt;0.027218857780098915&lt;/a:_x&gt;
&lt;a:_y&gt;0.017424918711185455&lt;/a:_y&gt;
&lt;/BeamTilt&gt;
&lt;Cameralength&gt;0&lt;/Cameralength&gt;
&lt;ColumnOperatingMode&gt;TEM&lt;/ColumnOperatingMode&gt;
&lt;ColumnOperatingTemSubMode&gt;BrightField&lt;/ColumnOperatingTemSubMode&gt;
&lt;CondenserStigmator xmlns:a="http://schemas.datacontract.org/2004/07/Fei.Types"&gt;
&lt;a:_x&gt;0&lt;/a:_x&gt;
&lt;a:_y&gt;0&lt;/a:_y&gt;
&lt;/CondenserStigmator&gt;
&lt;Defocus&gt;-8.1523700885439466E-08&lt;/Defocus&gt;
&lt;DiffractionFocus&gt;0&lt;/DiffractionFocus&gt;
&lt;DiffractionShift xmlns:a="http://schemas.datacontract.org/2004/07/Fei.Types"&gt;
&lt;a:_x&gt;0&lt;/a:_x&gt;
&lt;a:_y&gt;0&lt;/a:_y&gt;
&lt;/DiffractionShift&gt;
&lt;DiffractionStigmator xmlns:a="http://schemas.datacontract.org/2004/07/Fei.Types"&gt;
&lt;a:_x&gt;0&lt;/a:_x&gt;
&lt;a:_y&gt;0&lt;/a:_y&gt;
&lt;/DiffractionStigmator&gt;
&lt;EFTEMOn&gt;false&lt;/EFTEMOn&gt;
&lt;EnergyFilter i:nil="true"/&gt;
&lt;Focus&gt;0.0014091398916150954&lt;/Focus&gt;
&lt;GunStigmator i:nil="true" xmlns:a="http://schemas.datacontract.org/2004/07/Fei.Types"/&gt;
&lt;IlluminationMode i:nil="true"/&gt;
&lt;IlluminationProbeSubMode i:nil="true"/&gt;
&lt;ImageShift xmlns:a="http://schemas.datacontract.org/2004/07/Fei.Types"&gt;
&lt;a:_x&gt;0&lt;/a:_x&gt;
&lt;a:_y&gt;0&lt;/a:_y&gt;
&lt;/ImageShift&gt;
&lt;Intensity&gt;0.40840156549035567&lt;/Intensity&gt;
&lt;ObjectiveLensMode&gt;HM&lt;/ObjectiveLensMode&gt;
&lt;ObjectiveStigmator xmlns:a="http://schemas.datacontract.org/2004/07/Fei.Types"&gt;
&lt;a:_x&gt;0&lt;/a:_x&gt;
&lt;a:_y&gt;0&lt;/a:_y&gt;
&lt;/ObjectiveStigmator&gt;
&lt;ProbeMode&gt;MicroProbe&lt;/ProbeMode&gt;
&lt;ProjectorMode&gt;Imaging&lt;/ProjectorMode&gt;
&lt;SpotIndex&gt;6&lt;/SpotIndex&gt;
&lt;StemDefocus&gt;0&lt;/StemDefocus&gt;
&lt;StemFieldOfView i:nil="true"/&gt;
&lt;StemMagnification i:nil="true"/&gt;
&lt;TemMagnification&gt;
&lt;NominalMagnification&gt;57000&lt;/NominalMagnification&gt;
&lt;/TemMagnification&gt;
&lt;/optics&gt;
&lt;sample&gt;
&lt;Description i:nil="true"/&gt;
&lt;ID i:nil="true"/&gt;
&lt;/sample&gt;
&lt;stage&gt;
&lt;Holder&gt;Unspecified&lt;/Holder&gt;
&lt;Position&gt;
&lt;A&gt;-1.7575000000029511E-05&lt;/A&gt;
&lt;B&gt;0&lt;/B&gt;
&lt;X&gt;0.00081372579&lt;/X&gt;
&lt;Y&gt;-0.00034490542799999992&lt;/Y&gt;
&lt;Z&gt;1.5010799999999754E-06&lt;/Z&gt;
&lt;/Position&gt;
&lt;SampleLoader&gt;None&lt;/SampleLoader&gt;
&lt;/stage&gt;
&lt;vacuum&gt;
&lt;ProjectionChamberPressure&gt;0&lt;/ProjectionChamberPressure&gt;
&lt;SamplePressure&gt;0&lt;/SamplePressure&gt;
&lt;VacuumMode&gt;Ready&lt;/VacuumMode&gt;
&lt;/vacuum&gt;
&lt;/microscopeData&gt;
&lt;/MicroscopeImage&gt;
 
&lt;/syntaxhighlight&gt;</text>
    </revision>
  </page>
  <page>
    <title>Glossary</title>
    <ns>0</ns>
    <id>23</id>
    <revision>
      <id>4535</id>
      <parentid>4534</parentid>
      <timestamp>2019-02-26T11:12:07Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <comment>/* Twin lens */</comment>
      <origin>4535</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="14915" sha1="nqi22vpq6doinnltdimon56vazcgejh" xml:space="preserve">==Acronyms==
===Acronyms in the Tecnai manuals===
'''LM''': Low Magnification mode. In this mode the objective lens is only weakly excited (&lt;10%). The diffraction lens (first lens below objective) is now used as the main imaging lens. The diffraction pattern of the weakly excited objective lens is now at the SA plane.

'''HM''': High Magnification mode. In this mode the objective lens is strongly excited (&gt;80%) and is the main imaging lens. The diffraction lens focuses at the image plane of the objective lens.

'''Mi, SA and Mh''': Three ranges in the HM mode. In the SA range (2.6 - 390 kx on L120C) the first intermediate image is at the selected area(SA) aperture height. In Mi range and the Mh range, the first intermediate image is below and above the SA aperture, respectively (Reference: Tecnai manual - Modes 12 to 30). When in the Mi range, the TEM software displays the magnification as "M nnnn ×". In the SA range and the Mh range the magnifications are displayed as "SA nnnn ×" and "Mh nnnn ×" respectively.

'''D''': Diffraction mode. The diffraction lens focuses at the back focal plane of the objective lens (the fixed height for the objective aperture).

'''DF''': Dark Field. The axial direct beam is blocked by the objective aperture and only some of the scattered electrons are used for forming the image.

'''BF''': Bright Field. Both the axial direct beam and the scattered electrons that pass the objective aperture are used for forming the image. The size of the objective aperture controls the contrast (amplitude contrast or mass-thickness contrast).

'''nP''': nano probe mode. In this mode the mini-condenser lens (on the TWIN-objective lens) is effectively turned off (negative current reading of ~-90%) to allow for a very small area (0.3-2 nm diameter) of illumination on the specimen. In this mode the illumination is intense and usually convergent on the specimen. This is used for STEM and X-ray analysis. It needs to be noted that, with careful adjustment, it is possible to achieve parallel illumination in the nP mode by focusing the beam from C2 at the front focal plane of the upper pole piece of the objective lens. Because nP allows limiting the illumination to a much smaller circle than the μP, this is a very valuable technique for low-dose cryoEM imaging. See [[L120C operation]].

'''μP''': micro probe mode. This is the normal TEM imaging mode. In this mode the mini-condenser lens (on the TWIN-objective lens - found on all modern Phillipes/FEI/TFS electron microscopes) is turned on (positive current reading of ~90%). A larger area of illumination on the specimen is generated compared to the nP mode. On a two-condenser system, in μP mode, still only one C2 strength setting generates parallel illumination and the illuminated circle is much larger than that from the nP mode.

===Acronyms in the Microscope interface===

'''IGP''': Ion Getter Pump

'''TMP''': Turbo Molecular Pump

'''ODP''': Oil Diffusion Pump, not on the L120C

'''PVP''': Pre-Vacuum Pump, a rotary vane pump

'''Pen, Pir''': Vacuum gauges, Penning and Pirani.

'''V''': Valves. If a "T" is also drawn on the the double triangle symbol, it is a manual valve. One example for a manual valve is the specimen loading valve, which is open and closed by the turning action during specimen insertion and removal.) 

'''MF''': Multi-Function knobs

'''LTb''': The track ball.

'''pp''': Pivot point

'''LHP, RHP''': left-hand side panel, right-hand side panel

'''HT''': High tension, meaning high voltage. This refers to the acceleration voltage (80-120kV for L120C) in the gun. Similarly '''LT''' means low tension, low voltage. "LT" can be found on the old carbon evaporator, where it refers to the low voltage, high current power supply for heating the carbon rod to incandescent temperature.

==Non-Acronyms==
===Wobbler===

{{Quote
|text=A wobbler is a mechanism for rapidly switching a microscope element or function from a negative value to an identical but positive value; it can thus be on beam shift or beam tilt, image shift, a stigmator, objective-lens current, high tension, etc., even though the traditional meaning is the beam-tilt aid for focusing the TEM image.
|source=Talos 12 on-line help - Alignments,  Page 14
}}


The '''"Wobbler" button''' on the right-hand side panel is for turning on "the beam-tilt aid for focusing the TEM image"

The '''alpha Wobbler''' (usually assigned to R2) is for rocking the CompuStage.

===Spot size===

Strength of the condenser lens C1. The term "spot size" refers to the de-magnified gun crossover image on the specimen - the minimum size of the illumination spot. Stronger C1 lens (larger number on the spot size control slider) moves the crossover below C1 up, further away from the C2 lens, resulting in a smaller spot size. With stronger C1/smaller spot size/larger slider number, less electrons will pass through the condenser aperture. This gives direct control on the total electron dose rate on the specimen.  From spot size 1 to 11, every stop reduces the dose rate of electron from the illumination system by a factor of 2. If desired, the dose rate can be further reduced by using a smaller C2 aperture. 

It needs to be pointed out, that on modern electron microscopes, when the spot size (C1 strength) is changed, the strength of C2 is in fact also changed automatically by the controlling computer to maintain the crossover from C2 at the save position. This way the user is relieved from readjusting the C2 ('''Intensity''').

===Intensity===

Strength of the condenser lens C2. Turning the '''Intensity''' knob clockwise increases the strength of the C2 lens. After passing the crossover point (minimum size of the illuminated circle on the screen, in fact the image of the filament), turning the knob clockwise decreases the intensity in the illuminated area due to the spreading of the illumination beam. However the total dose rate of electron on the specimen remains the same. The total dose rate on specimen should be changed through changing the spot size or the condenser aperture.

Turning the '''Intensity''' knob clockwise always increases the strength of the C2 lens. Normally, a cross over should always be present above the objective lens and the specimen. Therefore one should always first find the crossover point then turn the knob clockwise to dilate the illumination circle.

===Micro condenser===
A lens immediately above the upper pole piece of the objective lens. In fact, it is part of the objective lens assembly. The main function of this lens is to allow a larger area to be illuminated for lower magnification imaging.  When the micro condenser lens is activated, the microscope is operating in the '''micro probe''' mode. When it is off (its current is reversed, indicated by a negative strength value), the microscope is in '''nano probe''' mode.  

On a two-condenser system (non-Titan), in the micro probe mode, the parallel illumination beam is about 5x the diameter of the parallel illumination beam obtained in the nano probe mode. That is, ~21 μm with a 150 μm C2 aperture in μP mode versus ~5 μm in nP mode. Consequently, for cryo-EM work, using nano probe mode and obtain parallel illumination becomes necessary to avoid damaging protein in adjacent holes.

===Twin lens===

A symmetrical objective lens design (Riecke-Ruska type), in which the specimen is placed at the center of the objective lens, with two magnetic fields of equal strength above and below it. A micro-condenser lens is added as part of the objective lens assembly to allow larger area to be illuminated (see above).

A magnetic lens is composed of an upper ring-shaped pole piece and a lower ring-shaped pole piece. A gap between the two rings will have concentrated magnetic field lines and the magnetic field expand towards the center of the bore with decreasing strength. This generates a curved magnetic field in the bore, which acts at a convex lens for electrons (see http://www.feynmanlectures.caltech.edu/II_29.html). The specimen is usually immersed in the magnetic field of the objective lens on electron microscopes. The magnetic field above and below the specimen are called the '''prefield''' and '''postfield'''.

In the twin lens design, the objective upper and lower pole pieces have the same size and shape, giving a symmetric magnetic field along the optical axis. The specimen is placed at the 1/2 position between the upper and lower pole pieces. The magnetic field above and below the specimen act as two identical lenses. The prefield is also called the '''objective condenser lens''', apparently referring to its effect of acting as a final condenser lens. The postfield can be referred to as the '''objective imaging lens''', as it is the real imaging objective lens.

It is obvious that the upper lens plays an important role in the illumination. Ideally (but not necessarily for non-cryoEM applications), the illumination beam should be set to form a crossover at the frontal focal plane of the upper lens, so that a parallel beam is generated to illuminate the specimen. It is also obvious that since the twin lens is symmetrical, the positions of the frontal focal plane of the upper lens and the back focal plane of the lower lens are both controlled by the '''Focus''' knob and will change simultaneously. Therefore when the frontal focal plane of the upper lens is at the right position, the back focal plane must also be at the right height. The "right height" of the back focal plane of the lower lens is the height of the objective aperture in the SA magnification range. When the microscope is properly aligned, pressing the '''Eucentric'''' button should bring the objective lens to a preset value, at which the front and back focal planes are both at their respective correct height.

Note: On the Talos L120C, a C-Twin lens is used.

What is in contrast to the symmetric twin lens is the '''high contrast lens'''.  In the high contrast lens design, the upper and lower pole pieces have different geometric sizes. Usually the upper pole piece has a smaller bore. Consequently the field between the two pole pieces (the magnetic lens) is asymmetric. The specimen plane is designed to be located at the 1/3 position in the pole piece gap, and the back focal plane is at the 2/3 of the position in the pole piece gap. The objective lens is then considered as a single lens below the specimen, even though the specimen is in fact still immersed in the magnetic field of the objective lens. Electrons entering the high contrast lens does not experience a strong field for long before hitting the specimen, therefore the condensing  effect of the prefield is not very significant. (Page 199-200, ''Introduction to Conventional Transmission Electron Microscopy, Marc De Graef and De Graef Marc, Cambridge University Press'')

===Focus===
Strength of the objective lens under imaging mode. 

The magnification of the objective lens is in fact a fixed value, errors in it leads to errors in the overall magnification. The image from the objective lens is always at a fixed height (the SA aperture plane) in the column, where the diffraction lens is coupled at. Therefore the specimen should always be brought to the eucentric height to ensure that the specimen-objective lens distance is correct. In addition, achieving parallel illumination is dependent on bringing the illumination beam crossover at the frontal focal plane of the objective lens. Keeping the objective lens current close to the predetermined eucentric value allows keeping the height of the frontal focal plane of the objective lens relatively fixed.

Therefore, the "Focus" knob should only provide the necessary fine-tuning of the focusing.

===Eucentric height===
{{quote|text="
The α tilt of the CompuStage is constructed in such a way that it is possible to tilt around it without having large apparent movements of the point of interest on the specimen. This is called eucentric tilting and is achieved by bringing the point of interest to the same height (with the Z axis) as the a tilt axis itself : the eucentric height. The eucentric height is important because it not only provides an easy way of tilting without having to correct specimen position continuously, but it also defines the reference point inside the microscope for all alignments, magnifications, camera lengths, and so on. In general one should work at the eucentric height (the only reason for deviating could be that at very high b tilts and specimen positions away from the center, the range of the Z axis may not be sufficient to bring the specimen to the eucentric height)."
|source=Tecnai online help, Column
}}

The height of the alpha rotation axis of the CompuStage. 
The optical system of an electron microscope is designed to have the specimen at the eucentric height. If the specimen is too far away from the eucentric height, even though an image can still be formed on the detector by aggressively adjusting the focus, owing to the fact that the magnification is determined essentially by the distance between the objective lens and the specimen, the actual magnification on the screen will have considerable error. The quality of the image may also be affected. Ideally, when the specimen has been brought to the eucentric height, pressing the '''EUCENTRIC''' button (which loads the saved objective lens value to the lens) should bring the sample very close to focus.

===Parallel illumination=== 
Illuminating the specimen with parallel beam. The specimen is in fact situated between the upper and lower pole pieces of the objective lens, each of which is in fact a lens by itself. When the illumination beam is focused at the front focal plane of the upper pole piece of the objective lens, parallel illumination can be achieved. As a result, if the specimen is crystalline, very sharp diffraction spots can be observed at the back focal plane of the objective lens (= the back focal plane of the lower pole piece), which can be observed in the diffraction mode.
===Camera length===
The effective length of specimen to the diffraction image plane in diffraction mode. Controlled by the magnification knob in diffraction mode.
The original diffraction pattern is formed at the back focal plane of the objective lens, which is only a few millimeters below the sample. In diffraction mode, the projection system projects the diffraction image to the camera with certain amount of magnification. The Camera length displayed at the bottom of the computer screen is the effective length between the specimen and the diffraction image center. Multiplying camera length by the diffraction angle (in radians) gives the spacing of the diffraction spot. For example, if the camera length is 500 mm and the diffraction angle of a spot is 2 mRad, then the diffracted spot should be 1 mm away from the direct beam on the camera.</text>
    </revision>
  </page>
  <page>
    <title>L120C cryo-EM operation</title>
    <ns>0</ns>
    <id>121</id>
    <revision>
      <id>4701</id>
      <parentid>4588</parentid>
      <timestamp>2020-06-08T21:58:15Z</timestamp>
      <contributor>
        <ip>142.1.243.41</ip>
      </contributor>
      <comment>/* Mounting a cryo holder */</comment>
      <origin>4701</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="6373" sha1="i0qsgw8cmt4wrrwfgq7ded7qk0ce9ot" xml:space="preserve">==Mounting a cryo holder==

'''Warning: the L120C room (not the computer room) is not ventilated. Mind the oxygen level when working alone.'''

Mounting a cryo holder is essentially same as mounting a regular room temperature sample holder. '''The only major difference is that the CompuStage needs to be turned to -55° beforehand''' so that the liquid nitrogen dewar is not turned upside down in the beginning. When the CompuStage is at -55°, the dewar of the cryo holder would face roughly horizontal to the right when initially inserted to the pre-pump position. 

Steps for insertion:

1. On the computer: 

   '''Start the turbo pump and wait for the 100% speed'''

   With XYZ all at zero, turn the alpha to -55 degrees.

   Retract screen and camera.
   
   Pumping time set to 180s. (60s is for room temperature work.)
   
   '''Check: column valve closed, turbo at 100%, cryobox retracted, stage at -55 deg.'''

2. Microscope room

   '''Wear gloves to protect hand from LN&lt;sub&gt;2&lt;/sub&gt;'''

   a. Check that the shutter on the holder is closed.

   b. Pull out the holder from the transfer dewar.

   c. Turn the holder 90 degrees to the right. Some liquid nitrogen will flow out.

   d. Gently insert the holder.

   The automatic valve connecting the pre-pumping chamber to the TMP will be opened shortly after. 

3. Computer room:
#Take a look at the vacuum value. The column reading should be below 15 log. There is only one column valve on the L120C protecting the gun area. Therefore if there is a vacuum crash, both the column and the projection chamber will have high readings (in red).
#Choose single tilt (ST) cryo holder on the TEM UI, click enter. 

4. Microscope room:
#When the red light is off, gently turn the holder CCW to the end. The dewar opening should be facing left at 55° angle. Then lightly hold the dewar and let the vacuum to gently pull the holder into the column.

5. Computer room:
#Click the alpha button again to set the stage back to 0°. Now the dewar should be upright.


6. Microscope room:

*Fill the cryo holder's dewar to top with Liquid nitrogen.
*If there are other specimen on the same cryo grid box, transfer the cryo grid box to a dewar that can last for at leave an hour.
*One can leave the transfer dewar in liquid nitrogen while checking the specimen in microscope - in case the current one is no good. However do not use a transfer dewar that has been cold for longer than 30 min - the rod housing is known to bend over time due to the coldness on one end.


'''The cryo holder should be refilled every 2-3 hours to make sure it still has enough liquid nitrogen in the dewar. Set up a timer.''' If the tip warms up, not only the specimen will be destroyed, the  released water vapor will also crash the vacuum in the column.

==Unmounting a cryo holder==

# '''Always prepare the transfer stage with liquid nitrogen first''', unless it is the end of the day.
# On computer, Check: 
##the column valve closed, 
##CompuStage reset, 
##cryobox retracted, 
##objective aperture removed, 
##camera retracted, FluCam retracted.
# '''Only if''' the cryo-specimen is going to be recovered: turn the CompuStage alpha angle to -55°.
# Microscope room: Close the shutter on the cryo holder by pushing the knobs towards the microscope
# With thumb pushing against the front plate of the CompuStage, pull the cryo holder until stopped by the airlock. Gently turn clockwise ~120° to the end. Be prepared that the liquid nitrogen will be spilling from the dewar. 
# Find a comfortable posture for your hand. With thumb pushing against the front plate of the CompuStage, pull the holder out. Insert the cryo holder to the cold transfer stage.

==Preparing the cryo holder==
Notice:

If there are multiple cryo holders on a same pumping station, close all needle valves on all cryo holders before any removal

The turbo pump used in the pumping stations should never be allowed to directly pump at atmospheric pressure.

===Removing cryo holder from the pumping stage===

# Close the valve on the cryo holder and the valve on the pumping stage.
# Stop the vacuum pump on the pumping stage. Wait for the pump to spin down.
# Unplug the cable and tubing from the cryo holder. Remove the cryo holder from the pumping stage. Use the sheath to protect the rod when transferring the holder between locations.

'''The needle valve on the cryo holder should be closed before the heating is turned off.'''

===Baking the cryo holder after use===
# Mount the cryo holder on the vacuum stage. The dewar opening faces down to keep its inside clean and to help the convection. 
# Connect vacuum tubing, but do not open the valve yet.  
# Start the vacuum pump and wait until the pressure drops to 10E-4 hPa (or Torr).
# Open the valve on the pumping stage. Observe that the pressure drops to 10E-4 hPa again.  If not check for leakage in the tubing connections
# Connect the heater cable. 
# Start the heater. Set the heating to 100°C, 18 hours.
# Wait until the tip is heated to 22°C. (20-30 min)
# Open the valve on the holder's dewar.
# Leave overnight.

* The dewar should be pumped to below 10E-5 Torr. (1 Torr ≈ 1.33 hPa. For the purpose here we can simply regard 10E-5 Torr as 10E-5 hPa).

==Loading grid to the Gatan 626 cryo holder==
#Place the cryo holder on the transfer dewar, check that the tip is at right position and that the shutter can be open and closed freely
#Fill the transfer dewar and the cryo holder dewar. There will be two boiling events, so do not over fill at the beginning. Do not fill liquid nitrogen over the seam inside the transfer dewar.
#If desired, plug the heater unit to the holder dewar to monitor the temperature at its tip. 
#Use the clamp tool to remove the ring clamp and then use a fine-tip tweezer to remove old grid.
#When the dewars are cold, transfer cryo grid box to the transfer dewar.
#Cool a tweezer and the clamp tool with the ring clamp
#Place a specimen grid on the tip of the cryo holder
#Vertically insert the ring clamp over the specimen. There should be a click sound. 
#Visually check if the ring clamp is secure and flat on the holder
#Close the shutter
==References==

* &lt;span class="plainlinks"&gt;[http://cbi.ibp.ac.cn/workshop/workshop2015/workshop2015_may/files/Documents/FEI%20material/How%20to%20handle%20cryo%20holders%20Gatan.pdf Gatan 626 cryo holder operations]&lt;/span&gt;</text>
    </revision>
  </page>
  <page>
    <title>L120C example images</title>
    <ns>0</ns>
    <id>22</id>
    <revision>
      <id>551</id>
      <parentid>550</parentid>
      <timestamp>2019-01-29T01:32:19Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <comment>/* 2D class of apoferritin. Jan 23 2019, Tunsten filament. */</comment>
      <origin>551</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="549" sha1="fw4xhny5pnll6r85yy85wlb2gbacwbv" xml:space="preserve">==Cryo-EM 2D class==
===2D class of apoferritin. Jan 23 2019, Tunsten filament.===
[[File:P1 J51 2d classes for iteration 20.png|thumb|none|2D class of apferritin, Jan 23 2019 (The resolution numbers in images are not reliable)]]

Generated using cryoSPARC V2.5.0

*~@27000 particles from 8 images taken with Ceta 16M. 
*Magnification: 57000x.
*Pixel size: 2.5 Å  
*Exposure: 1 s
*Tungsten source.  
*C-flat holey carbon. 

Plunge freezing:
*Device: Vitrobot. 
*Cryogen: Ethane, -182°C. 
*Blotting time: 2s
*Chamber condition: 5°C, 100% humidity.</text>
    </revision>
  </page>
  <page>
    <title>L120C operation</title>
    <ns>0</ns>
    <id>10</id>
    <revision>
      <id>4597</id>
      <parentid>4596</parentid>
      <timestamp>2019-03-08T02:19:27Z</timestamp>
      <contributor>
        <ip>142.1.243.41</ip>
      </contributor>
      <comment>/* To achieve parallel illumination on a 2-condensor system for cryo-EM work */</comment>
      <origin>4597</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="20123" sha1="nvqrdr0wch8b1tws5t6mb8f2bo0srzo" xml:space="preserve">
==Start up check==

'''Whenever a mechanical operation is performed by hand, such as changing specimen or opening the shutter on the cryo-holder, the column valve should be kept closed'''

Note: Unlike Tecnai microscopes, L120C only has one column valve protecting the gun compartment. 

#All vacuum items are green. Column vacuum should be below 15 log. '''Whenever column vacuum is above 15, close the column valve'''.
#Liquid nitrogen level &gt;10% 
#Column Valve closed (button in yellow). 
#CompuStage has been reset ("Reset Holder")
#Cryobox retracted
#Condenser aperture 150 μm.
#Objective aperture not inserted ("disabled").
#Camera cooling normal. Ideally camera should be retracted during sample insertion.


After checking the microscope, the filament can be switched on. For tungsten filament the normal heating value is 26 . For LaB&lt;sub&gt;6&lt;/sub&gt; filament, the heating value is 34 (although the usable range can be up to 50). For tungsten filament set the gun emission value to 10 μA. For LaB&lt;sub&gt;6&lt;/sub&gt; filament, set the emission to 5 μA (eco mode).

For de-saturating the filament, lower the heating value 3-4 stops: 23 for W filament and 30-31 for LaB&lt;sub&gt;6&lt;/sub&gt; filament.

==RT Specimen holder operation==
'''When the CompuStage red LED is on, no operation is allowed on the sample port'''

Insertion:
#On computer, '''Reset Holder''', make sure that column valve is closed (button in  yellow). Retract objective aperture, cryobox and camera if any of them had been inserted. Optionally the turbo pump can be started beforehand to save some time.
#In microscope room, load specimen on the RT single tilt holder, specimen side facing down (away from the clip ring).
#Align the pin on the holder rod with the tick mark or the notch (5 o'clock) on the sample port. Insert the holder in a gentle linear motion. The CompuStage red LED will light up. 
#On computer, choose single tilt holder on the screen.
#Wait until the pumping finishes (red LED will turn off).
#Gently turn the holder CCW on the microscope. The vacuum will suck the holder smoothly into the microscope. Tap the black knob in the end to make sure the holder is secure.
#On computer, check that the vacuum is OK. The specimen is now ready for inspection.


Extraction:
Insertion:
#On computer, '''Reset Holder''', '''Close Column valve'''. Retract objective aperture, cryobox and camera if any of them had been inserted.
#In microscope room, pull the sample holder, turn clockwise, then pull again.

==Direct Alignment==
===Preparation===

Gun tilt, Gun shift, Beam tilt pivot point x,y and Beam shift should be done in a hole of the specimen. If There is no hole on the grid, the specimen holder can be slightly withdrawn and blocked on the CompuStage using a ~1 cm diameter tube. Alternatively, these steps can be done without a specimen on the microscope. The specimen can be inserted just before the '''Rotation centre''' step.

#Load a grid with amorphous carbon film or a negative stain specimen, check that the beam is visible.
#Insert the 150 μm C2 aperture. Change magnification to SA. Check centring of the C2 aperture by turning the '''Intensity''' knob to make the beam size change between the large and small circles on the FluCam. The beam should open and close concentrically. If the C2 aperture is not centred, click '''Conderser 2 adjust''', use '''MF-x''' and '''MF-y''' to center the C2 aperture. When done, click '''adjust''' again to exit the adjustment mode.
#If the illumination circle is elliptical and changes shape when passing through the crossover, the condenser lens stigmator needs to be adjusted (see below).
#At 2-5 Kx magnification (SA), click '''Eucentric focus''' on the right-hand side panel. Find eucentric height by using the alpha wobbler (R2) and stage Z control ('''+''' and '''-''' on the right-hand side panel).
----

===Gun tilt===
The goal: to direct the gun beam to the C1 lens and make it parallel with the optical axis of C1, thereby maximizing brightness from the gun.

====Method 1====
#Dim the filament by lowering the heating current (for W filament change from the regular 26 to 23). 
#Find the '''Direct Alignment''' box from the quick access tool (lower right corner of screen), click "Gun tilt".
#At 2-5 kx(SA), focus the C2 lens using the '''intensity''' knob to minimise the illumination circle, until the image of the filament is seen. The image should have a "cat eye" look - a brighter centre and darker surrounding. The FluCam can withstand the concentrated beam.
#Use the '''MF-x''' and '''MF-y''' knobs to centre the "cat eye".

====Method 2====
#Find the '''Direct Alignment''' box from the quick access tool (lower right corner of screen), click "Gun tilt".
#Change magnification to 10-60 kx(SA). Turn the '''Intensity''' knob clockwise pass the crossover, and make the size of the illumination circle roughly same as the large circle on the FluCam.
#Use the '''MF-x''' and '''MF-y''' knobs to change the gun tilt parameters. Watch the '''screen current''' reading at bottom of the screen. Try to maximise the reading on the FluCam.
----

===Gun shift===
The goal: to move the beam to the centre of the FluCam.

#Click "Reset beam" to reset the beam shift.
#Click '''Gun shift''' in '''Direct Alignment''' box.
#Change magnification to 10-60 kx(SA).
#If not yet done, reduce the size of the illumination circle to a spot using the '''intensity''' knob.
#Change spot size to 3 (weaker C1 magnifies imperfections in alignment above it)
#Use '''MF-x''' '''and '''MF-y'''''' to move the illumination circle to the centre of the screen.

Note: Ideally we should move the gun crossover to the front focal point of C1, however there is no guarantee that the beam deflector and image deflectors are both perfectly aligned. So even when we see the illumination is at the center of the FluCam, it does not mean that the gun crossover is really on the optical axis of C1. If it is quite off, then we are expecting to see some sort of distortion, such as coma, from the condenser system. Therefore multiple rounds of beam shift - gun shift should be performed to get the best result. This can be combined with the use of different C1 (Spot size) setting to maximize the effect of the imperfections in the gun shift or the beam shift when adjusting each of them. 

Stronger C1 = larger spot size number (eg., 9) = higher C1 crossover (father from C2)= demagnified gun shift error - good for isolating the beam + image shift; 
Weaker C1 = smaller spot size number (eg., 3) = lower C1 crossover position (closer to C2) = magnified gun shift error; 

Instead of going to beam shift alignment back and forth, we can use the trackball to temporarily change the beam shift at spot size 9 (smaller effect from gun misalignment) to roughly adjust the beam shift to correct value, then go back to spot size 3 to adjust the gun shift using MF knobs. This should bring the gun alignment close enough to the optical axis of C1.


----

===Beam tilt pivot point x,y===
#At 130 kx, reduce the size of the illumination circle to a spot using the '''intensity''' knob.
#Click '''Beam tilt pp x'''
#Minimize the beam centre movement using '''MF-x''' and '''MF-y'''. The illumination circle should be only pulsating but not moving in the end.
#Click '''Beam tilt pp y'''
#Minimize the beam centre movement using '''MF-x''' and '''MF-y'''.
----
===Beam shift===
#At 130 kx, reduce the size of the illumination circle to a spot using the '''intensity''' knob.
#Click '''Beam shift'''
#Move the beam to the centre of screen using '''MF-x''' and '''MF-y'''.
----
===Centering C2 aperture===

#Turn '''Intensity''' to focus the illumination to a spot. Move the spot to the center of screen using the track ball.
#Turn '''Intensity''' clockwise (over focus) to dilate the illuminated circle.
#Using '''MF-x''' and '''MF-y''' to make the illumination circle equal distance to the edges of the screen or overlap with the 4-cm ring on FluCam.


----

===Rotation center===
This step needs a specimen in the view.

#At 130 kx, find a feature on the specimen. Bring it to the centre of the view.
#Click '''Rotation center'''
#Minimise image shift using '''MF-x''' and '''MF-y'''.


----
References:

http://www.rodenburg.org/RODENBURG.pdf A very good article by John M. Rodenburg.

==Stigmator==
===Condenser stigmator===

This stigmator is located below the C2 lens and above the beam deflection coils. Apparently this would only correct astigmatism of the C2 lens.

For all stigmators, the TEM UI can save 3 different settings. It is advisable to use a slot that is not currently in use so the changes can be compared to the current setting.

Procedure:
Turn '''Intensity''' knob to make the illumination beam passing the focus. The shape of the beam should be roughly circular on both sides of the focus point. If not, open '''Stigmator''' tab and adjust the condenser stigmator using the '''MF-X''' and '''MF-Y''' knobs.


===Objective stigmator===

This stigmator is located right below the lower pole piece of the Objective lens and above the image deflection coils. Both of them are above the SA aperture (the image plane in the SA mode). 

Procedure of adjustment:

#Use a continuous carbon film as specimen. A negative stain specimen will work.
#Click '''Eucentric focus''' to reset the objective. Adjust the Z shift of the specimen so that it is at eucentric height.
#Preview with ceta camera. Activate a live FFT of the preview image in TIA. Check if the Thong rings are circular. If not, open '''Stigmator''' tab and adjust the objective stigmator using the '''MF-X''' and '''MF-Y''' knobs.

==Diffraction mode==
In imaging mode, the diffraction lens (the first lens below objective lens) focuses at the image plane (a few cm below the specimen) of the objective lens to couple the image with the projection system. The image plane is in fact defined by the position of the SA aperture (mechanically fixed).

In Diffraction mode, the diffraction lens focuses at the back focal plane (a few mm below the specimen) of the objective lens, where the diffraction pattern is. This plane is defined by the position of the objective aperture (also mechanically fixed). Now the '''Focus''' knob controls the strength of the diffraction lens, instead that of the objective lens. 

Therefore, before entering diffraction mode, there are two things to do: finding the eucentric height for the specimen and proper focusing of the specimen in imaging mode.

===Procedure===

#In imaging mode, move the specimen to eucentric height, adjust the '''Focus''' knob to obtain image. Find the area of interest. 
#Press '''Diffraction''' button to enter diffraction mode
#Insert objective aperture (OA). There should be a sharp image of the edge of the OA. If not, use the '''Focus''' knob to adjust the diffraction lens (the alignment of the system is in question however).
#Use the '''Intensity''' knob to adjust the illumination condition. For crystalline specimen, this would be to minimize the size of the diffraction spots. For multi-crystalline specimen (such as gold film), this would be to minimize the width of powder diffraction circle lines. In all cases, if the direct beam is visible, then minimize its size.
#Use the magnification knob to change the camera length so that the spacing of the diffraction spots are ideal. Usually 420 mm or 530 mm would work.
#Use the '''MF-x''' and '''MF-y''' knobs to move the direct beam to the center of FluCam. When this is done, the reflections or rings can be directly measured using the geometry tools or by reading the cursor position.
#One can change back to imaging mode and insert a SA aperture to limit the imaged area to the object of interest, then go back to diffraction mode to obtain the diffraction pattern of only this object. To move SA aperture, click '''adjust''' and use the MF knobs.

The FluCam and the Ceta camera are able to withstand the strength of the direct beam. However when possible, using the beam stop is still encouraged. The use of the beam stop can also help the computer to adjust the display levels so that the bright direct beam won't dominate the scaling.

===Stigmating the diffraction lens===
# Spread the illuminate as much as possible
# In diffraction mode, press '''Stigmator''' and use the '''MF-x''' and '''MF-y''' knobs to adjust. The goal is to get a 3-point "Mercedes-Benz" shape in the beam.
https://emtoronto.miraheze.org/wiki/File:Dstb.jpg
[[File:Dstb.jpg|thumb|none|Goal of diffraction lens stigamation (Image source: TEM UI online help)]]

==Obtaining Parallel Illumination==

Parallel Illumination helps reducing focal variation (can be corrected by per-particle CTF) and magnification errors in a image. Therefore it is very valuable for single particle cryo-EM. It is achieved by focusing the illumination beam at the front focal plane of the upper objective lens, generating a parallel beam passing through the specimen (which is situated at the very centre of the symmetrical twin-lens). Then the beam gets focused by the lower objective lens at its back focal plane (the objective aperture plane), which is coupled to the diffraction lens in the diffraction mode. Therefore, when it has been established that the diffraction lens is correctly focused at the objective aperture plane and that the objective lens is near the eucentric setting, by adjusting the C2 strength to get sharp diffraction images under diffraction mode, one can tune the illumination system so that parallel illumination is achieved. 

On a 2-condenser system (all non-Titan microscopes), under microProbe mode, the presence of the micro-condenser lens limits the minimal beam size achievable for parallel illumination, making it impractical to image cryo specimen in microProbe mode with parallel illumination. Under nanoProbe mode, only a particular C2 setting will allow parallel illumination. This happens when the C2 focuses exactly at the frontal focal plane of the upper objective lens. Because the micro-condenser is now optically off, this gives a very small parallel illumination circle that is suitable for cryoEM work. 

On a Titan, the 3-condenser system allows parallel illumination to be achieved in a range of C2 ('''Intensity''') settings. This allows obtaining small enough (down to hundreds nm diameter) parallel beam sizes. When in the parallel illumination range, the C2 and C3 strength will change simultaneously when the '''Intensity''' knob is turned - a convenient indicator of the state. 

Reference:
https://www.biorxiv.org/content/10.1101/141994v1      
SI Figure 1
===To achieve parallel illumination on a 2-condensor system for cryo-EM work===

For single-particle cryo-EM work, parallel illumination is needed to ensure uniform magnification over the whole image. In order to simultaneously obtain parallel illumination and a small enough illuminated area (&lt;4um in diameter to be compatible with Quantifoil and alike), working in nanoProbe (nP) mode becomes necessary. 

On the L120C a 3 μm diameter illuminated area can be obtained using a 100 μm C2 aperture in the nanoProbe mode. In μP mode the diameter of the illuminated area will be roughly 5 times as large when parallel illumination is achieved.

Direct alignment needs to be done carefully in nP mode before working in nP mode. Change illumination to nP and follow the normal procedure of direct alignment starting from gun shift.

To achieve parallel illumination:

#Enter nano Probe mode in the '''Beam''' box.
#Insert a carbon or gold film grid. Fill the view with a continuous area of the carbon or gold film. 
#Find eucentric height for the specimen using the alpha wobbler and Z-shift buttons.
#Press '''Eucentric focus''' on the RHP to reset the objective lens. The specimen should be already close to focus.
#Enter diffraction mode
#Insert objective aperture (100 µm)
#Obtain a sharply focused image of the objective aperture using the '''Focus''' knob (now controlling the diffraction lens)
#Use the '''Intensity''' knob to adjust the C2 lens until the width of the carbon or gold powder diffraction rings are minimised. Now the parallel illumination condition is achieved. Do not touch the '''Intensity''' knob again.
#Press '''Diffraction''' again to go back to imaging mode. Measure the size of the illumination circle. The Intensity knob should not be touched again. If different illumination size is wanted, change the C2 aperture instead. If the dose rate is too high or too low, change spot size. The parallel illumination condition should be checked again if spot size has been changed, as the condenser system may have not been ideally aligned.

{| class="wikitable"
|+Parallel illumination parameters, Feb 23 2019 
!mode!!Spot size!!Intensity!!C2 aperture!!diameter(μm)!!area(Å&lt;sup&gt;2&lt;/sup&gt;)!!FluCam current (nA)!!Total electrons/s!!Calculated dose rate(e/Å&lt;sup&gt;2&lt;/sup&gt;/s)!!Flucam (e/Å&lt;sup&gt;2&lt;/sup&gt;/s)!!Ceta (e/Å&lt;sup&gt;2&lt;/sup&gt;/s)
|-
|nP||3||38.90%||150 μm||5.1||2.04E+09||18.3||1.14E+11||55.9||50||
|-
|nP||4||38.05%||150 μm||5.1||2.04E+09||7.35||4.59E+10||22.5||20||38
|-
|nP||5||37.20%||150 μm||5.1||2.04E+09||3.16||1.97E+10||9.7||9.5||18
|-
|nP||5||37.20%||100 μm||3.3||8.55E+08||1.38||8.61E+09||10.1||9.2||
|-
|nP||5||37.20%||“70 μm”||3.55||9.90E+08||1.38||8.61E+09||8.7||9||
|-
|nP||5||37.20%||“50 μm”||5.05||2.00E+09||||||||||
|-
|μP||5||||150 μm||23.7||4.41E+10||||||||||
|-
|μP||5||||100 μm||16||2.01E+10||||||||||
|}

==Coma-free alignment==

Coma-free alignment is essentially same as rotation centre alignment. The goal is to make sure that the illumination beam is colinear with the optical axis of the objective lens. In other words, the illumination beam is not slightly tilted. When either of the two alignment is satisfactory, it is not necessary to go through the other one.


References:
https://www.sciencedirect.com/science/article/pii/S1047847710003825
Precise beam-tilt alignment and collimation are required to minimize the phase error associated with coma in high-resolution cryo-EM.
Glaeser	RM et al (2011)	 J Struct Biol 174(1):1-10

==Shutting down the microscope==

#Reset Compustage
#Close column valve 
#If cryobox had been inserted, retract cryobox.
#If cryo-holder had been used, make sure that it is removed from the microscope
#Filament off. Leave HT on

==Cryocycle (once a week)==

The purpose of the cryocycle is to warm up the anti-contiminator (anti-contaminator device, ACD or “Cold Trap”), so that accumulated contaminant can evaporate and be removed by the turbo molecular pump (TMP). During this process the ion-getter pump (IGP) in the column will be off, allowing the captured contaminants on them to be removed as well. The cryocycle will only pump the column and the projection chamber (L120C does not have a column valve separating the projection chamber from the column).  The gun chamber is isolated by the column valve; the IGP in the gun chamber will remain on to keep the ultra high vacuum inside it. 

The liquid nitrogen tank on the L120C is large and cannot be removed, therefore it needs to be emptied before the cryocycle starts. The liquid nitrogen tank has a rather large safety margin. So even when the level indicated on the TEM UI is as low as 2-3%, there is still considerable amount of liquid nitrogen inside.

#Check: column valve is closed, filament is off. Leave HT on.
#Disconnect the liquid nitrogen level sensor cable on the top of the white liquid nitrogen tank (right hand side of the microscope)
#Remove the depth sensor and store it on the metal ring next to the tank
#Empty the liquid nitrogen tank (using the provided heat gun and the copper pipe). This may take 30 min or more. At the end of the warming-up, the air coming from the tanks should become hot. The copper pipe will be very hot. Handel with care.
#On the TEM UI, set cryocycle to 45 min, start cryocycle. This should take an hour.

The vacuum may crash during the warming-up due to the released gas. If '''cryocycle''' button is grayed-out due to vacuum crash, after the "recover" has finished automatically, click '''to all vacuum''' to recover vacuum in the column.</text>
    </revision>
  </page>
  <page>
    <title>Linux system setup</title>
    <ns>0</ns>
    <id>5</id>
    <revision>
      <id>4635</id>
      <parentid>4634</parentid>
      <timestamp>2019-04-06T19:34:17Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <comment>/* Tools and commands for various tasks */</comment>
      <origin>4635</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="15480" sha1="nmv2nbm85vjjezoby2zlsx5zrp95whe" xml:space="preserve">This page describes considerations and procedures for setting up a Linux environment for EM image analysis.

== Storage and hardware requirements ==
=== Storage ===
The Linux operating system and the EM packages should normally use no more than 100 GB of space. A good way to prepare for larger and larger EM software packages (mainly caused by multiple installations of python environments, these days) is to dedicate a 50 GB partition for the OS, and move the /usr/local directory to a larger partition(see [[#Good practices]] below).

=== GPU ===
Most GPU computation software used for EM analysis depends on the Nvidia CUDA library. This mandates a Nvidia GPU with &lt;span class="plainlinks"&gt;[https://en.wikipedia.org/wiki/CUDA CUDA 3.0+]&lt;/span&gt; computation capability. Nvidia Geforce products after year 2012 (Kepler and newer architectures) should meet this requirement. On current market, the 1080TI and 2080TI cards are the best options below $2000. The 1050TI also offers very good performance for a low cost of $200.

=== Low cost system ===
A very minimalist system, for learning and testing, can also be set up on a low budget. This can be any desktop PC produced in the last 5 years, with &gt;=8 GB memory, &gt;=500 GB HDD, and an Nvidia 1050TI card. This system should not cost more than CAD 500 in total, including the peripherals. This setup should be able to process negative stain dataset of up to 100 images and generate 2D classes in less than a day.

If no GPU computation is needed, for example if only EMAN2 or cisTEM will be used, then the Nvidia 1050TI is not needed. However for learning purposes, it is best to have the GPU computation capability.

For a setup that is adequate for cryoEM single particle work, refer to [[Computer hardware setup]].

== Complications with CUDA versions==
'''Update: CryoSPARC v2.5.0 now supports cuda 9 and 10. '''


CUDA-8.0 is commonly used by most GPU computing programs. Therefore if possible, CUDA-8.0 should be used for maximum compatibility.

However in recent tests on a system with 2080TI cards, we failed to run cryoSPARC2 with CUDA-8.0 or CUDA-9.2 ("sm_75" architecture not found). Installing CUDA-10.0 seems to have solved the problem.

In case certain program requires CUDA8.0: a workaround is to install CUDA8.0 as system-wide cuda (/usr/local/cuda -&gt; /usr/local/cuda-8.0), while direct cryosparc directly to /usr/local/cuda-10.0 during installation.

== Good practices ==

* Install the OS on a dedicated partition of 50-80 GB. The /home directory stays on a separate partition.

* All scientific programs and packages are installed in /usr/local, per convention. 

* Install each version of programs in a folder with version numbers, then use a symbolic link to represent the program. Therefore no editing of bash.bashrc is needed after each upgrade:
:&lt;code&gt;sudo ln -s /usr/local/chimera-1.2 /usr/local/chimera&lt;/code&gt;

* The /usr/local folder can also be placed outside the '/' partition. Then place a symbolic link in /usr directed to it (assuming /home is located on a separate, large partition, see above):
:&lt;code&gt;sudo mv /usr/local /home/&lt;/code&gt;

:&lt;code&gt;sudo ln -s /home/local /usr/local&lt;/code&gt;

:Besides allowing /usr/local to continuously grow, this also allows quick recovery from system disasters or clean upgrades.

* All program-related environment variables should be placed in /etc/bash.bashrc file. This allows all users to share the computer's software.

* Backup some important files from the /etc directory when changes to system are made. These include bash.bashrc, fstab, hosts, hostname, passwd ...  or maybe the whole /etc directory.

* Backup important data frequently. Save very important files on a cloud storage.

== Setting up Linux system==

'''Recommended Linux distribution: Ubuntu MATE, Version: 16.04 LTS.''' 
:The "MATE" version of Ubuntu uses traditional GNOME 2 interface, which provides better working efficiency for non apple users.


'''Important notice:'''

:*Ubuntu 18 uses GCC 6.0, which is incompatible with CUDA 8.0 installation. Therefore installing on Ubuntu 18 necessitates using CUDA 9.2 or higher. '''We found that Ubuntu-16.04-MATE provides a good environment for all current software.'''
:*Some experiences suggests that unless the GPU is not supported by CUDA8.0, using CUDA8.0 will ensure best compatibility with most GPU dependent software.
:*Nvidia 2080TI (sm_75) can only work under CUDA10.00 



===Step 1. Install Ubuntu MATE 16.04 LTS===
:1. Download Ubuntu ISO:
::https://ubuntu-mate.org/blog/ubuntu-mate-xenial-final-release/
:2. Make a bootable USB installation disk
::In Windows: use RUFUS: https://rufus.ie/en_IE.html
::In Linux: use &lt;span&gt;[https://packages.debian.org/sid/gddrescue GNU ddrescue]&lt;/span&gt; or dd. Be very sure which block device is really the USB key.
:3. Install Ubuntu
::Use manual partitioning if possible. See the example partitioning below. 
::It is better to give a password to your first user instead of leaving an empty one. An empty password won't allow you to login by SSH (therefore no sFTP either), or change the root user's password.
::{| class="wikitable"
|-
|EFI
|
|500 MB 
|A partition reserved for EFI booting
|-
|/
|Ext4
|50 GB
|The root directory, storing the Linux OS
|-
|SWAP
|
|64 GB 
|A swap partition, not absolutely required. In absence of it, the system uses a file for caching.
|-
|/home
|Ext4
|All usable space
|All users' home
|}

===Step 2. Initial preparation===
After first boot of the new Ubuntu, install a better Vi editor:
::&lt;code&gt;sudo apt install vim&lt;/code&gt;

Install evince, the PDF reader:
::&lt;code&gt;sudo apt install evince&lt;/code&gt;

Give the system root user a password:
::&lt;code&gt;sudo passwd root&lt;/code&gt;

===Step 3. Download and install CUDA 8.0 ===

:This is the most crucial step. If this fails there is no need to waste time on others. The tricky part is to install the Nvidia graphics driver.

:'''1. Download Nvidia graphics driver and CUDA 8.0 library.'''
:Nvidia driver :https://www.nvidia.com/Download/index.aspx?lang=en-us

:CUDA 8.0: https://developer.nvidia.com/cuda-80-ga2-download-archive

::For an Intel CPU PC, download the x86_64 "runfile(local)". Do not use the Deb package. The Deb package will only leave some .deb packages in the /var directory, which won't function as a CUDA library unless you install some of them.

:'''2. Restart computer in textmode and install Nvidia driver and CUDA.'''

::If a Nvidia driver was not previously installed, it can be installed when installing the CUDA library.
::In order to install the Nvidia driver, we need to change the Linux to start in text mode first and restart:
::&lt;code&gt;sudo systemctl set-default multi-user.target&lt;/code&gt;
::&lt;code&gt;sudo init 6&lt;/code&gt;


::After restarting in textmode, login with your username and password.

::Then run the previously downloaded "cuda_8.0....run" file, hopefully the Nvidia driver will be installed too:
::&lt;code&gt;cd ~/Downloads&lt;/code&gt;
::&lt;code&gt;chmod 755 cuda_8.0.61_375.26_linux.run&lt;/code&gt;
::&lt;code&gt;./cuda_8.0.61_375.26_linux.run&lt;/code&gt;

::Answer questions and choose to also install the graphics driver. Leave the destination to the default /usr/local/cuda-8.0.


::If the graphics driver installation fails, try installing the driver separately by running the "Nvidia...run" file. 

::The success of Nvidia driver installation can be tested by going into the Graphical interface ("X window", "X11") and run glxgears:
:::&lt;code&gt;startx&lt;/code&gt;
::Open a terminal and run glxgears, rotating gears should appear.

::The difficulty for Nvidia driver installation comes from the presence of the open source "nouveau" driver. It needs to be "blacklisted" in order for the Nvidia driver to install. If it is already incorporated in the kernel, then a new kernel needs to be compiled to replace the current one and the system needs to be started with the new kernel. See this webpage:

===Possible way to disable nouveau===
Reference: 
https://askubuntu.com/questions/481414/install-nvidia-driver-instead-of-nouveau

1. Edit /etc/modprob.d/blacklist.conf, add this line:

&lt;syntaxhighlight lang="shell" style="border:1px "&gt;
blacklist nouveau
&lt;/syntaxhighlight&gt;

2. Remove installed nvidia-* packages

&lt;syntaxhighlight lang="shell" style="border:1px "&gt;
sudo apt remove --purge nvidia-*
&lt;/syntaxhighlight&gt;

3. Build a new kernel

&lt;syntaxhighlight lang="shell" style="border:1px "&gt;
sudo update-initramfs -u
&lt;/syntaxhighlight&gt;

===Step 4. Compiling RELION ===
Once CUDA installation is successful, it is best to install RELION the next by following the RELION 2.0 compilation instructions:
https://www2.mrc-lmb.cam.ac.uk/relion/index.php?title=Download_%26_install

A few development packages will be required for compiling RELION. Related information can be found at the bottom of this page. 

The reason to compile RELION first is that this would force the system to check the existence of a functional CUDA library and a few frequently needed packages, making the installation of other packages less troublesome.

====RELION compilation Procedure====
#Install necessary packages:
::&lt;syntaxhighlight lang="bash" style="border:1px "&gt;
sudo apt update 
sudo apt install build-essential
sudo apt install git cmake
sudo apt install libopenmpi openmpi-bin openmpi-common
sudo apt install libx11-dev
sudo apt install libfltk1.3-dev libfftw3-dev libfftw3-doc libtiff5-dev
&lt;/syntaxhighlight&gt;

#Download RELION-3.0 from GitHub:
::&lt;syntaxhighlight lang="bash" style="border:1px "&gt;
git clone https://github.com/3dem/relion
&lt;/syntaxhighlight&gt;

#Configure and compile:
::&lt;syntaxhighlight lang="bash" style="border:1px "&gt;
cd relion
mkdir build
cmake  --DCMAKE_INSTALL_PREFIX=/usr/local/relion --DCUDA_ARCH=61 ..  
#the ARCH number is the sm_xxx number of your GPU. 1050TI and 1080TI would be sm_61, 2080TI would be sm_75  
make -j 8 #number of CPU cores you would like to use for compliation
make install
&lt;/syntaxhighlight&gt;

==EM software installation with SBGrid==

An alternative to the manual installation and maintenance of all pieces of software needed for EM, is to join the SBGrid consortium (https://sbgrid.org/)
Once a laboratory becomes a member, it allows every lab member to deploy/install a collection of 270+ structural biology applications on Linux and OS X systems. Every user can deploy an SBGrid installer onto their computer and then select which pieces of software (and which versions of those) the user wants to have installed. SBGrid makes it easier to manage software installations, especially in situations when a single user is responsible for maintenance of multiple computers. SBGrid membership could also be used to fully setup computers for structural work other than EM due to the wide selection of applications available. &lt;br&gt;

Steps to install SBGRid software:&lt;br&gt;

1) Have the PI of your lab sign up for a membership with SBGrid&lt;br&gt;

2) Verify whether your system meets the requirements for SBGrid deployment:&lt;br&gt;

Linux: software is tested/built under Red Hat Enterprise Linux 6.x and 7.x (use Red Hat / CentOS / Scientific Linux / Fedora distributions)
&lt;br&gt;
Other versions of Linux could in principle be used, but more issues might arise for users when using those other distributions. &lt;br&gt;

Mac OSX: 10.11 - 10.13&lt;br&gt;

Make sure you have admin/sudo user privileges for the account on your computer from which you would like to perform the installation.&lt;br&gt;

3) To run the SBGrid installation client, set up an account by registering (https://sbgrid.org/registration/register/)&lt;br&gt;

4) Install the software and activate it, use instructions from SBGRid Wiki (Mac OSX has a graphical installer, Linux uses the command-line based one (https://sbgrid.org/wiki/client_CLI_install))&lt;br&gt;

Make sure you always launch the sbgrid installer from its correct location (where you donwloaded/unpacked it). You will do that every now and then to install/uninstall/update your software, so remember where you put it.&lt;br&gt;

5) Consider your disc space. Originally, sbgrid gets installed to /opt/sbgrid folder (with a symlink automatically set up to /programs). This location can be changed however (in situations with a very small system disc it is required to move the sbgrid installation directory somewhere else). Follow the instructions from SBGrid website to do that https://sbgrid.org/wiki/client_CLI_install (under: Installation on an external drive or USB key). Note that any location can be chosen - you don't have to move it to an external disc. It can be even a different partition on the same disc. Since during this operation a symlink is created from your newly chosen location to /opt/sbgrid, all should work fine.&lt;br&gt;

6) Install all the pieces of software you think you might need, following the Wiki instructions linked above.&lt;br&gt;

7) Set up an alias for SBGRid environment:&lt;br&gt;
- use the following command to open your bashrc file&lt;br&gt;
::&lt;code&gt;gedit .bashrc&lt;/code&gt;&lt;br&gt;
- add a line at the end of the file&lt;br&gt;
::&lt;code&gt;alias sbg='source /programs/sbgrid.shrc'&lt;/code&gt;&lt;br&gt;
- save the file, log in and log out for changes to take effect&lt;br&gt;

8) Using SBGrid:&lt;br&gt;
- to initialize SBGrid environment, simply type this in a new terminal window:&lt;br&gt;
::&lt;code&gt;sbg&lt;/code&gt;&lt;br&gt;

- launch the software you need from that very terminal window, using the name under which it is displayed in the applications list&lt;br&gt;

9) Other: cryoSPARC&lt;br&gt;
CryoSPARC is not part of the SBGrid library and needs to be installed separately. Follow the instructions here (https://cryosparc.com/docs/reference/install/) and for an installation on a single PC use Quick Install: Single workstation version of the manual. Pay attention to the PATH you specify during installation for CUDA drivers. Beginning with version 2.5, cryoSPARC can work with CUDA 9 and 10, but older version require CUDA 8. After the installation, simply navigate your web browser to http://localhost:39000, log into your account with cryoSPARC and enjoy. &lt;br&gt;

Potential issues:&lt;br&gt;
- Lack of access to cryoSPARC through the web browser: &lt;br&gt;
Run the following command (it is not location-specific):
::&lt;code&gt;cryosparcm restart&lt;/code&gt;&lt;br&gt;
- Needs to change the PATH to CUDA drivers directory post-installation:&lt;br&gt;
Navigate to your cryoSPARC installation directory, find the file */cryosparc/cryosparc2_worker/config.sh and edit it:&lt;br&gt;
::&lt;code&gt;gedit .bashrc&lt;/code&gt;&lt;br&gt;
Change the &lt;cuda_path&gt; to what you desire, e.g.:&lt;br&gt;
::&lt;code&gt;&lt;cuda_path&gt; = /usr/local/cuda&lt;/code&gt;&lt;br&gt;

== Tools and commands for various tasks==
===Linux and Nvidia===
* Test if OpenGL is working, i.e., if the Nvidia driver is functional
:&lt;code&gt;glxgears&lt;/code&gt;

* Monitor GPU activity
:&lt;code&gt;nvidia-smi -lms 1000&lt;/code&gt;

* Set Ubuntu to start in text mode, for installing the Nvidia driver
:&lt;code&gt;sudo systemctl set-default multi-user.target&lt;/code&gt;

* Set Ubuntu back to start in graphical mode
:&lt;code&gt;sudo systemctl set-default graphical.target&lt;/code&gt;

* Restart Linux
:&lt;code&gt;sudo init 6&lt;/code&gt;

::Installing DKMS may reduce the frequency of Nvidia driver problems.

===Compiling RELION===

*fix cmake "No CMAKE_CXX_COMPILER could be found." 
** RELION compilation 
** Also solves cryosparc2 pycuda installation error

::&lt;code&gt;sudo apt-get update &amp;&amp; sudo apt-get install build-essential&lt;/code&gt;

*fix cmake "No MPI_C lib" 
::&lt;code&gt;apt install libopenmpi openmpi-bin openmpi-common&lt;/code&gt;

*fix cmake "no lib-X11 "
::&lt;code&gt;sudo apt install libx11-dev&lt;/code&gt;

*other libraries required to compile RELIOIN
::&lt;code&gt;sudo apt-get install libfltk1.3-dev libfftw3-dev libfftw3-doc libtiff5-dev&lt;/code&gt;</text>
    </revision>
  </page>
  <page>
    <title>MRC format</title>
    <ns>0</ns>
    <id>17</id>
    <revision>
      <id>4429</id>
      <parentid>578</parentid>
      <timestamp>2019-02-07T13:47:39Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>/* Comparison between the CCP4 map header and the MRC-2014 header */</comment>
      <origin>4429</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="25091" sha1="ocvcjkuhxk69r6g9gj84esxvfre3dp0" xml:space="preserve">The CCP4/MRC format is a data format best for storing uniform sized matrices. Although limited by the lack of integrated meta data storage, its simplicity, clarity and compatibility with crystallographic maps had gained it great popularity in the EM world. 2D data (micrographs, gain references, etc.), 3D data (movies stacks, particle stacks, maps and masks) and 3+D data (for instance, volume stacks - many 3D maps of a same size) can all be stored in the MRC file format. This page will explain certain key elements of the MRC format and its relation with the CCP4 map format.

For programmers: the MRC files should follow the '''&lt;span&gt;[http://www.ccpem.ac.uk/mrc_format/mrc2014.php MRC2014]&lt;/span&gt;''' specification. Specifically, one should pay attention that the magic word for MRC/CCP4 files is the 4-byte string 'MAP ' ('MAP' and a space, 0x4D 0x41 0x50 0x20) instead of the 3 visible characters alone.

==Background: maps and masks used in crystallography==

Crystallographic maps are often saved with extensions such as .map, .ccp4, .ccp4map and so on. However the file extension is not important at any level for the map file to be successfully interpreted.  The important factors for a crystallographic map file to be correctly interpreted are that the file itself contains a proper 1024-byte header, a data block that is consistent with the header, and often, an proper extended header storing symmetry operators. '''A crystallographic map file is in an essentially identical file format, the MRC-CCP4 format, as an EM image file or an EM map file''', except that it contains crystallographic symmetry information in its header and 3D map data in the data matrix.

Crystallographic maps are used to represent the electron densities calculated from X-ray diffraction experiments. Each map covers a continuous '''parallelepiped''' 3D volume and the data matrix is composed of evenly spaced sampling points in this volume. Although one might imagine a 3D map as a 3D matrix of voxels (as those found in the game Minecraft), the data points in fact only have coordinates in space but not volumes or shapes, therefore are more properly described as sampling points. In addition, crystallographic maps always use the crystal coordinate system (with implied fractional coordinates), which have axes along the crystallographic axes - not necessarily 90 degrees between each pair! That means, these sampling points are not in a Cartesian coordinate system, but a skew coordinate system. Therefore, even if we are allowed to imagine them as voxels, these are not square voxels, not rectangular parallelepiped (cuboid, bricks) voxels, but '''parallelepiped''' voxels. Map display programs will usually use an extrapolation scheme to generate smooth maps from these sampling points. In most cases the sampling frequency upon saving a crystallographic map is determined by the resolution of the diffraction data (structure factors) it is calculated from. The maps are usually sampled at 1/2 - 1/4 spacing of the highest resolution found in the structure factor file to ensure that information can be reconstructed at the same resolutoin. In electron density map files each data point is usually saved as a 32-bit floating-point number, with the unit being electrons/(Å&lt;sup&gt;3&lt;/sup&gt;).

The data found in a electron density maps file, therefore, is simply a 3D matrix of numbers, which dimensions '''column''', '''row''' and '''section'''. Because of the existence of crystallographic symmetry, it is not necessary to store the whole unit cell. It is very common to store only the volume that covers one full asymmetric unit, sometimes with a little extra to ensure continuity. This is why when opened in UCSF Chimera, a crystallographic maps is often cut at an "arbitrary" plane. Because of this, for a crystallographic map file, we not only need to store the 6 parameters for the dimension and shape of the unit cell, but also the '''origin''' and '''extent''' of the map portion that have been saved in the data matrix. The infinitely continuous maps we see in the model building program COOT is the result of extending the saved portion of the map with these information found in the header and the extended header. The extended header usually saves a copy of the symmetry operations, each in a 80-byte block. However since the space group itself is sufficient to indicate the symmops, the symmops in the extended head are in fact redundant. 

It needs to be pointed out though, to store more than the extent of one assymmetric unit in a crystallographic map file is completely legit, as long the symmetry-related map points are consistent with each other. Thus one can generate a map that covers a whole molecule or a number of unit cells for analysis. See [[#Manipulating maps|Manipulating maps]].

Masks for maps are usually simply '1's and '0's saved in a map file, indicating selections. Because we only need 1 and 0 for the selected and discarded, or maybe sometimes a few other small integers for a few more categories, it is not necessary to dedicate a 4-byte floating-point number for each data point. More importantly, test of equality among floating-point numbers can become tricky and unpredictable if the programmer accidentally creates a special situation: floating-point number cannot exactly represent most non-integer numbers, and most large integers ( the smallest unrepresentable one is 2^127+1). Therefore a mask file saves the data in integers. The type of data saved in a map or mask file is indicated by the MODE number found in bytes 13-16 in the header. For crystallographic maps, only two modes are used: MODE '2' indicates 32-bit floating-point data; MODE '0' indicates 8-bit signed integer data.

===Grid(nubmer of intervals), origin, and extent ===
====Grid(nubmer of intervals)====
A crystallographic map saves sampling points inside the unit cell. According to the Nyquist-Shannon theorem, to make sure that map details won't be lost due to under-sampling, the electron density map needs to be sampled at intervals at least 1/2 of the highest resolution of the map. In practice, the sampling is normally done at ~1/3-~1/4 of the resolution, a little bit of over-sampling to be on the safe side. For example, if a unit cell measures 100 Å in its '''a''' edge and the map is at 1 Å resolution, then the map should be sampled 300 times along the X direction. Here 300 is the number of intervals or, '''grids''', in the X direction, and the sampling interval is 0.33 Å. In a map file, the '''number of intervals''' along the X, Y, Z directions are saved as three integers at words 8-10 in the map header (refer to the table in section [[#Comparison between the CCP4 map header and the MRC-2014 header]]). The same idea is also applicable in EM maps, except that the number of intervals (now called MX, MY, MZ) are simply number of voxels in each dimension of the volume.

====Extent====
The matrix saved in a crystallographic map file is often not the whole unit cell, but an asymmetric unit (ASU) only. This is because for a crystallographic unit cell with symmetry, only the data within an ASU are unique. One whole unit cell, or any arbitrary volume, can be easily constructed by duplicating from the saved ASU with symmetry operations. 

This is not to say that a map file always only saves an ASU though. There is nothing to prevent one from saving "redundant" columns, rows or sections in a map file. Then how much data is saved in a map file? This information is found in the first three int32 numbers of a map file: the '''column''', '''row''', and '''section'''. If the map densities are saved in float32 (usually they are, unless the file is a mask), then the data block should have a size of '''column''' x '''row''' x '''section''' x 4, because each float32 number uses 4 bytes.

====Origin====
Just like a map file does not need to save a whole unit cell, a map file also does not necessarily start from the coordinate (0,0,0). The coordinate of the origin of the saved map volume is indicated by three integers saved in the map header words 5-7. Upon loading, the volume matrix saved in the maps file will have its first column, row and section shifted by these three numbers. This allows the programs to correctly place the map volume in the unit cell.

====Example====
As an example, if one wants to have a map file that when loaded in UCSF Chimera will cover a whole protein PDB, one often needs to extend the crystallographic map coming from refinement programs. To do this, one can either run the CCP4 program &lt;span&gt;[http://www.ccp4.ac.uk/html/fft.html FFT]&lt;/span&gt; and tell it to generate a map file that covers the supplied PDB, or use the CCP4 program &lt;span&gt;[http://www.ccp4.ac.uk/html/extends.html EXTENDS]&lt;/span&gt; to extend an existing map to start from certain point and have specified extent. The EXTENDS mathod may require the person to manually measure the extremities of the PDB coordinates and use a little knowledge stated here to estimate the extents and the origins. Then what is going to happen is that data points from an ASU will be simply copied based on the Unit cell's symmetry to generate a large enough 3D data array, which is then saved in the new map file, with required origin and extent.


Reference: http://xray.bmc.uu.se/usf/mapman_man.html#H7

== EM map==

Similar to crystallographic maps, an EM map is often simply considered and used as a map representing probabilities of atoms in space. However, there are a few important differences that one should be aware about EM maps.

===Differences between crystallographic maps and EM maps===
*EM maps are electrostatic potential maps. (Recall how electrons move in the electrostatic field of a point charge - the polarity of the point charge matters.) In contrast, X-ray crystallographic maps are electron density maps (photon-electron interaction is dependent on the electron density alone, not the local electrostatic field). The consequence of this is that for negatively charged groups, one can expect to see weakened densities or even negative densities in EM maps (for example: https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5192980/). Therefore for simplicity, one might want to use the term "EM maps" when referring to the EM maps.

*EM maps do not need to deal with crystallographic symmetries and periodicity. In each map, there is only a single molecule or molecular complex of interest floating in a space of infinite size. This greatly simplifies manipulation of EM maps. For comparison, even for a crystallographic map in space group P1, which is the simplest case of crystallographic maps, one still only has the freedom of translating the coordinates, but not rotating them, to keep the higher order (packing) of the crystal intact. 

*Crystallographic maps are in skew coordinate systems. The 3 axes of a crystallographic map are along the edges of the unit cell, and are not necessarily orthogonal to each other. EM maps are each in a Cartesian system, and the unit cell angles found in the header should be 90.0 90.0 90.0 (Hex: 00 00 B4 42, 00 00 B4 42, 00 00 B4 42 ). The PDB files, regardless of the data source, are in Cartesian system with the X axis overlapping with the a axis and the XY plane overlapping with the ab plane of the unit cell.

*Not exactly map: the MRC files are not only used to save 3D volumes, but also 2D images and image stacks. In such cases the '''column''' and '''row''' numbers are the dimensions of one 2D image, and the '''section''' number indicates the number of 2D images saved in the file. The Unit cell '''c''' length is meaningless in such cases. However to maintain consistency, this number is usually '''(pixel size)''' x '''sections''' - essentially treating pixels as square voxels.

===Comparison between the CCP4 map header and the MRC-2014 header===

'''CCP4 map standard''':  http://www.ccp4.ac.uk/html/maplib.html

'''MRC2014 standard''':  http://www.ccpem.ac.uk/mrc_format/mrc2014.php

'''Detailed discussion on the MRC2014 standard''':  https://www.sciencedirect.com/science/article/pii/S104784771500074X

{|class="wikitable"
!Word!!CCP4 map!! CCP4 Description!!!!Word!!Byte   ||MRC2014||MRC2014 Description
|-
| 1          ||NC            || # of Columns    (fastest changing in map)                                                                        ||||     1	    ||1-4	       ||NX      ||	number of columns in 3D data array (fast axis)	            
|-
| 2          ||NR            || # of Rows                                                                                                        ||||     2	    ||5-8	       ||NY      ||	number of rows in 3D data array (medium axis)	              
|-
| 3          ||NS            || # of Sections   (slowest changing in map)                                                                        ||||     3	    ||9-12	     ||NZ      ||	number of sections in 3D data array (slow axis)	            
|-
| 4          ||MODE          || Data type                                                                                                        ||||     4	    ||13-16	     ||MODE    ||                                                             
|-
| 5          ||NCSTART       || Number of first COLUMN  in map                                                                                   ||||     5	    ||17-20	     ||NXSTART	||location of first column in unit cell	                      
|-
| 6          ||NRSTART       || Number of first ROW     in map                                                                                   ||||     6	    ||21-24	     ||NYSTART	||location of first row in unit cell	                        
|-
| 7          ||NSSTART       || Number of first SECTION in map                                                                                   ||||     7	    ||25-28	     ||NZSTART	||location of first section in unit cell	                    
|-
| 8          ||NX            || Number of intervals along X                                                                                      ||||     8	    ||29-32	     ||MX	     || sampling along X axis of unit cell	                        
|-
| 9          ||NY            || Number of intervals along Y                                                                                      ||||     9	    ||33-36	     ||MY	     || sampling along Y axis of unit cell	                        
|-
|10          ||NZ            || Number of intervals along Z                                                                                      ||||     10	    ||37-40	     ||MZ	     || sampling along Z axis of unit cell	                        
|-
|11-13     ||XYZ lengths   || Cell Dimensions (Angstroms)                                                                                      ||||     11-13	||41-52	     ||CELLA	 || cell dimensions in angstroms	                              
|-
|12-16     ||alpha beta gamma|| Cell Angles     (Degrees)                                                                                      ||||     14-16	||53-64	     ||CELLB	 || cell angles in degrees	                                    
|-
|17          ||MAPC          || Which axis corresponds to Cols.  (1,2,3 for X,Y,Z)                                                               ||||     17	    ||65-68	     ||MAPC	   || axis corresp to cols (1,2,3 for X,Y,Z)	                    
|-
|18          ||MAPR          || Which axis corresponds to Rows   (1,2,3 for X,Y,Z)                                                               ||||     18	    ||69-72	     ||MAPR	   || axis corresp to rows (1,2,3 for X,Y,Z)	                    
|-
|19          ||MAPS          || Which axis corresponds to Sects. (1,2,3 for X,Y,Z)                                                               ||||     19	    ||73-76	     ||MAPS	   || axis corresp to sections (1,2,3 for X,Y,Z)	                
|-
|20          ||AMIN          || Minimum density value                                                                                            ||||     20	    ||77-80	     ||DMIN	   || minimum density value	                                      
|-
|21          ||AMAX          || Maximum density value                                                                                            ||||     21	    ||81-84	     ||DMAX	   || maximum density value	                                      
|-
|22          ||AMEAN         || Mean    density value    (Average)                                                                               ||||     22	    ||85-88	     ||DMEAN	 || mean density value	                                        
|-
|23          ||ISPG          || Space group number                                                                                               ||||     23	    ||89-92	     ||ISPG	   || space group number	                                        
|-
|24          ||NSYMBT        || Number of bytes used for storing symmetry operators                                                              ||||     24	    ||93-96	     ||NSYMBT	 || size of extended header (which follows main header) in bytes
|-
|25          ||LSKFLG        || Flag for skew transformation, =0 none, =1 if foll                                                                ||||     25-49	||97-196	   ||EXTRA	 || extra space used for anything - 0 by default	              
|-
|26-34       ||SKWMAT        || Skew matrix S (in order S11, S12, S13, S21 etc) if LSKFLG .ne. 0.                                                ||||     27	    ||105	       ||EXTTYP	 || code for the type of extended header	                      
|-
|35-37       ||SKWTRN        || Skew translation                                                                                                 ||||     28	    ||109	       ||NVERSION||	version of the MRC format	                                  
|-
|38          ||future use    || (some of these are used by the MSUBSX routines in MAPBRICK, MAPCONT and FRODO)(all set to zero by default)       ||||     50-52	||197-208	   ||ORIGIN	 || phase origin (pixels) or origin of subvolume (A)	          
|-
|53	        ||MAP	          ||    Character string 'MAP ' to identify file type                                                                 ||||     53	    ||209-212	   ||MAP	   || character string 'MAP ' to identify file type	              
|-
|54	        ||MACHST	      ||	Machine stamp indicating the machine type which wrote file                                                      ||||     54	    ||213-216	   ||MACHST	 || machine stamp encoding byte ordering of data	              
|-
|55          ||    ARMS      || Rms deviation of map from mean density                                                                           ||||     55	    ||217-220	   ||RMS	   ||rms deviation of map from mean density	                      
|-
|56          ||    NLABL     || Number of labels being used                                                                                      ||||     56	    ||221-224	   ||NLABL	 ||number of labels being used	                                
|-
|57-256      ||LABEL(20,10)  || 10  80 character text labels (ie. A4 format)                                                                     ||||     57-256 ||225-1024   ||LABEL(20,10)||	10 80-character text labels	                            
|}

*The word 23, ISPG, is reused in MRC files with number &gt;400 (usually 401) to indicate a 3D+ volume stack.

*In CCP4 maps, words 8-10, NX NY NZ, are number of samplings along the unit cell edges. In MRC2014, these 3 words are renamed MX MY MZ, indicating samplings along the edges of a single 3D volume. Particularly, the word 10, MZ, is used to indicate number of sections along Z in '''each''' 3D volume, while the MRC word 3, NZ (not same as the word 10 NZ in CCP4 map, this is a confusing naming), indicates total sections saved in the MRC file. Therefore, '''NZ = MZ x (number of volumnes)''' in a volume stack file (saving multiple 3D volumes).  

*As said above, words 1-3 in MRC file are renamed NX, NY, NZ. This is a confusing renaming because NX, NY, NZ had been used to refer to words 8-10 in the CCP4 maps. If words 1-3 retained names NC, NR and NS in the MRC2014 standard it would have been a lot clearer.

*The voxel size in MRC files are unit cell lengths (words 11-13) devided by MX,MY,MZ (words 8-10)

*The Origin (words 50-52) is used by MRC format to indicate sub-image/sub-volume origins in the original larger image(2D) or volume(3D) it is taken from. See the MRC2014 reference linked above the table.

*The "A4 format" above is presumably a vestige of the typewriter era. Similarly we can say: "the PDB format is A4 format".

*Machine stamps: The machine stamps at word 54 are four half-bytes indicating the number formats/endianess for double (d), float (f), int (i) and unsigned char (c) type. For little endian hardware(PC) the stamp is 0x44, 0x41, 0x00, 0x00 ('DA  ') while the big endian stamp is 0x11, 0x11, 0x00, 0x00. The 0x44 0x41 machine stamps are actually assigned for the  IEEE754 floating-point format, which is common among all modern computers. Very old map file may use other floating-point formats such as VAX. There are machine stamps other than 0x44, 0x41 or 0x11 for indicating these floating-point number formats, which can be found in the CCP4 core library codes (listed below). But in reality no one had ever seen a single example of map file saved in non-IEEE formats. See this thread on CCP4BB: https://www.jiscmail.ac.uk/cgi-bin/webadmin?A2=ind1811&amp;L=ccp4bb&amp;F=&amp;S=&amp;P=76868



&lt;syntaxhighlight lang="C" style="border:1px "&gt;
#ccp4_sysdep.h
#define DFNTI_MBO       1       /**&lt; Motorola byte order 2's compl */
#define DFNTI_IBO       4       /**&lt; Intel byte order 2's compl */

#define DFNTF_BEIEEE    1       /**&lt; big endian IEEE (canonical) */
#define DFNTF_VAX       2       /**&lt; Vax format */
#define DFNTF_CONVEXNATIVE 5    /**&lt; Convex native floats */
#define DFNTF_LEIEEE    4       /**&lt; little-endian IEEE format */
&lt;/syntaxhighlight&gt;

====Data Modes====
{|class="wikitable"
!Mode!! MRC2014!! CCP4 map
|-
|0 ||8-bit signed integer (range -128 to 127)     ||   envelope stored as signed bytes            
|-
|1 ||16-bit signed integer                        ||   Image     stored as Integer*2              
|-
|2 ||32-bit signed real                           ||   Image     stored as Reals                  
|-
|3 ||transform : complex 16-bit integers          ||   Transform stored as Complex Integer*2      
|-
|4 ||transform : complex 32-bit reals             ||   Transform stored as Complex Reals          
|-
|5 ||                                             ||   0	                                         
|-
|6 ||16-bit unsigned integer                      ||
|}

Map modes 0-5 are inherited from the ccp4 maps. The MRC2014 standard only introduced map mode 6. The Thermo (former FEI) EPU uses mode 6 to save 16-bit integer data from the Falcon camera or the Ceta camera, for example. 
                                         
CCP4 map Note: Mode 2 is the normal mode used in the CCP4 programs. Other modes than 2 and 0 may NOT WORK

==Extended header==
The extended header is composed of 80-byte blocks placed after the 1024-byte main header. The size of the extended header is indicated in bytes at word 24 NSYMBT. By all standards, NSYMBT should be a multiple of 80. For MRC files, there is no rule for the content of the extended header. Therefore one could potentially use this part to save meta data. However because of the lack of standards and the ease in writing homebrew MRC-reading programs, there is no guarantee that MRC files with extended header will be handled properly by all programs. Some programs may simply assume that everything after the 1024-byte header belong to the data array, even though this treatment disobeys either the MRC2014 standard or the CCP4 map standard.

==Data block==
The data block is a homogeneous array of same data type. The size of the data block is determined by words 1-3 NC, NR, NS and word 4, MODE: ''' len(data block) = NC * NR * NS * sizeof(mode)'''. There is no beginning and ending markers for the data block. Normally the end of the data block should be end of the file, the beginning offset is NSYMBT+1024-1 (0-based counting).

==Manipulating maps==
Crystallographic maps usually can not be rotated freely without causing destruction of the crystallographic symmetry and periodicity. For visualization purposes, one can use a PDB file to define the extent and calculate a P1 map covering the molecule of interest using the program FFT.

Owing to the fact that maps are only 3D arrays of sampling points and its coordinate system is that of the unit cell, when a map is rotated, it is usually necessary to resample the new map in order to save the rotated map. Because maps are usually saved at only 2x - 4x spatial frequency of the highest resolution, one should expect to see some difference in numerical values when a map is resampled.</text>
    </revision>
  </page>
  <page>
    <title>Main Page</title>
    <ns>0</ns>
    <id>1</id>
    <revision>
      <id>4696</id>
      <parentid>4695</parentid>
      <timestamp>2020-01-23T18:19:15Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <comment>/* Educational resources */</comment>
      <origin>4696</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4282" sha1="6qzqgosyjiao07pjprn2lbpitqi8opr" xml:space="preserve">__NOTOC__
== Welcome to {{SITENAME}}! ==

This wiki site is for sharing knowledge on biological electron microscopy. Have fun editing!


'''New pages can be easily created by searching the term in the search box (look upper-right), then click on the link in red.'''

==Booking the L120C at MSB==
https://utorontomil.bookmylab.com/index.php

== All pages in this wiki ==

https://emtoronto.miraheze.org/wiki/Special:AllPages

== Links to frequently used software ==

Packages:
* &lt;span class="plainlinks"&gt;[https://blake.bcm.edu/emanwiki/EMAN2 EMAN2: only uses GPU for particle picking. Runs on any computer with 4 GB hard disk space. ]&lt;/span&gt;
* &lt;span class="plainlinks"&gt;[https://www2.mrc-lmb.cam.ac.uk/relion RELION: GPU accelerated, in almost all steps.]&lt;/span&gt;
* &lt;span class="plainlinks"&gt;[https://cryosparc.com/ cryoSPARC v2: GPU based computation, comprehensive, yet fast evolving. ]&lt;/span&gt;
* &lt;span class="plainlinks"&gt;[https://cistem.org/ cisTEM: EM analysis from movies to maps, with a very nicely designed GUI. No GPU required. ]&lt;/span&gt;
* &lt;span class="plainlinks"&gt;[http://grigoriefflab.janelia.org/frealign Frealign: high-resolution refinement of 3D reconstructions. GPU version available separately. ]&lt;/span&gt;
* &lt;span class="plainlinks"&gt;[https://spider.wadsworth.org/spider_doc/spider/docs/spider.html SPIDER: an image processing system for electron microscopy. ]&lt;/span&gt;
* &lt;span class="plainlinks"&gt;[http://www.ccpem.ac.uk/ CCPEM: Collaborative Computational Project for Electron cryo-Microscopy. ]&lt;/span&gt;



Task-specific:
* &lt;span class="plainlinks"&gt;[http://grigoriefflab.janelia.org/unblur Unblur ]&lt;/span&gt;
* &lt;span class="plainlinks"&gt;[http://msg.ucsf.edu/em/software/motioncor2.html Motioncor2 ]&lt;/span&gt;

* &lt;span class="plainlinks"&gt;[http://grigoriefflab.janelia.org/ctffind4 CTFFIND  ]&lt;/span&gt;
* &lt;span class="plainlinks"&gt;[https://www.mrc-lmb.cam.ac.uk/kzhang/ GCTF  ]&lt;/span&gt;

* &lt;span class="plainlinks"&gt;[https://www.mrc-lmb.cam.ac.uk/kzhang/ Gautomatch  ]&lt;/span&gt;

* &lt;span class="plainlinks"&gt;[http://dimaiolab.ipd.uw.edu/software/ Rossetta cryoEM tools by Dimaio lab, U of Washington]&lt;/span&gt;


Tools:
* &lt;span class="plainlinks"&gt;[https://imagej.nih.gov/ij/ IMAGEJ: tool for displaying and converting image files. ]&lt;/span&gt;
* &lt;span class="plainlinks"&gt;[https://github.com/asarnow/pyem pyEM: python tools by Eugene Palovcak and Daniel Asarnow at UCSF. ]&lt;/span&gt;


A more complete list of software at EMDB:
*http://www.emdatabank.org/emsoftware.html

==Forums==
* &lt;span class="plainlinks"&gt;[http://www.jiscmail.ac.uk/cgi-bin/webadmin?A0=CCPEM/ CCPEM: Mailing list. General EM discussions, job listings, seminar announcements. Use for Relion-specific questions. ]&lt;/span&gt;
* &lt;span class="plainlinks"&gt;[http://3dem.ucsd.edu/mailinglist.shtm/ 3D-EM: Mailing list. General EM discussions, job listings, seminar announcements. ]&lt;/span&gt;
* &lt;span class="plainlinks"&gt;[https://groups.google.com/forum/#!forum/eman2/ EMAN2 Google Group. Post EMAN2-specific questions here. ]&lt;/span&gt;
* &lt;span class="plainlinks"&gt;[https://discuss.cryosparc.com/ CryoSPARC forum. Post cryoSPARC-specific questions here. ]&lt;/span&gt;

== Educational resources==

* &lt;span&gt;[https://EM-learning.com EM-learning.com ]&lt;/span&gt;
* &lt;span&gt;[https://cryoemprinciples.yale.edu cryoem principles @yale]&lt;/span&gt;
* &lt;span&gt;[https://www2.mrc-lmb.cam.ac.uk/research/scientific-training/electron-microscopy/ MRC cryo-EM course ]&lt;/span&gt;
* &lt;span&gt;[http://www.maxsidorov.com/ctfexplorer/ CTF explorer: CTF curve simulations ]&lt;/span&gt;
* &lt;span&gt;[http://rodenburg.org John Rodenburg's EM tutorials]&lt;/span&gt;
* &lt;span&gt;[https://ricktu288.github.io/ray-optics/simulator A ray-trace simulator]&lt;/span&gt;
* &lt;span&gt;[http://3demmethods.i2pc.es/ 3D EM methods wiki]&lt;/span&gt;

== Manuals found on Internet==
* &lt;span&gt;[https://sciencehill-cryoem.yale.edu/sites/default/files/files/align_talos12.pdf Talos12 Alignments]&lt;/span&gt;

* &lt;span&gt;[https://sciencehill-cryoem.yale.edu/sites/default/files/files/userint_talos12.pdf Talos12 user interface]&lt;/span&gt;

* &lt;span&gt;[https://sciencehill-cryoem.yale.edu/sites/default/files/files/Options.pdf Talos12 Options]&lt;/span&gt;

* &lt;span&gt;[https://sciencehill-cryoem.yale.edu/sites/default/files/files/tia.pdf TIA]&lt;/span&gt;

* &lt;span&gt;[https://www.ifm.liu.se/materialphysics/thinfilm/Manualer/galadriel/FEI%20manuals/Modes_12to30.pdf Tecnai12-30 Modes]&lt;/span&gt;</text>
    </revision>
  </page>
  <page>
    <title>Manipulating 3D maps</title>
    <ns>0</ns>
    <id>127</id>
    <revision>
      <id>4632</id>
      <parentid>4631</parentid>
      <timestamp>2019-03-29T11:36:25Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <origin>4632</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4031" sha1="ghokdckyyxsbo16wwsnypulvsz6t8lv" xml:space="preserve">
==To run scripts without graphical interface of COOT (won't work in Windows)==

::&lt;syntaxhighlight lang="sh"&gt;
 coot --no-graphic -s scr.py
&lt;/syntaxhighlight&gt;

==To get transformation matrix from PDB alignment==

Using CCP4 program '''superpose''':
::&lt;syntaxhighlight lang=""&gt;
$CCP4\6.4\bin\superpose.exe PDB1.pdb PDB2.pdb &gt;out1.log
        Rx         Ry         Rz           T
     -0.234     -0.944      0.231       15.850
     -0.484     -0.093     -0.870       52.586
      0.843     -0.316     -0.435        8.455
&lt;/syntaxhighlight&gt;

COOT SSM superimposition would produce:
::&lt;syntaxhighlight lang=""&gt;
  -0.2342, -0.9443,  0.2314
  -0.4838, -0.09325,-0.8702
   0.8432, -0.3157, -0.435
 (15.8497, 52.5858,  8.45504)
&lt;/syntaxhighlight&gt;


==To transform map in P1 (COOT)==


https://www2.mrc-lmb.cam.ac.uk/Personal/pemsley/coot/web/docs/coot.html#Map-Transformation

::&lt;syntaxhighlight lang="python"&gt;
#guile (scheme): (transform-map imol mat trans about-pt radius space-group cell)
#the cell(1) means take the cell parameter of molecule 1 (mandatory). In recent COOT versions the spacegroup and cell arguments have been removed.

#transform a block of map with radius 10, at current view point
transform_map (4, (-0.2342,-0.9443,0.2314,-0.4838, -0.09325,-0.8702,0.8432,-0.3157, -0.435),(15.85,52.59,8.455), rotation_centre(),10,"P 1",cell(1))

#transform a block of map with radius 35, at center of molecule 2
transform_map (4, (-0.2342,-0.9443,0.2314,-0.4838, -0.09325,-0.8702,0.8432,-0.3157, -0.435),(15.85,52.59,8.455), center_of_mass(2),35,"P 1",cell(1))
&lt;/syntaxhighlight&gt;

==To transform PDB only==
https://www2.mrc-lmb.cam.ac.uk/Personal/pemsley/coot/web/docs/coot.html#transform_002dmolecule_002dby
::&lt;syntaxhighlight lang="python" &gt;
#transform 
transform_molecule_by(2, -0.2342,-0.9443,0.2314,-0.4838, -0.09325,-0.8702,0.8432,-0.3157, -0.435,15.85,52.59,8.455 )
&lt;/syntaxhighlight&gt;

==Masking and transforming portion of a map by matrix from PDB LSQ alignment (COOT)==
https://www.jiscmail.ac.uk/cgi-bin/webadmin?A2=ind1903&amp;L=ccp4bb&amp;F=&amp;S=&amp;P=172486

::&lt;syntaxhighlight lang="python"&gt;

handle_read_draw_molecule_with_recentre("a.pdb", 1) #the reference pdb, imol 0
handle_read_draw_molecule_with_recentre("H.pdb", 1) #the pdb used for masking and as the moving molecule, imol 1

handle_read_ccp4_map('1.map', 0) #input map, imol 2

#set_last_map_contour_level(0.15)
#set_last_map_sigma_step( 0.010)
#set_last_map_colour( 0.80,  0.00,  0.80)


set_map_mask_atom_radius(3)
mask_map_by_molecule(2,1,1) #mask imol2 around imol 1 to generate imol 3, the masked map around H.pdb

transform_map_using_lsq_matrix(0,'L',1,500,1,'H',1,500,3,rotation_center(),100)  

#lsq match imol 1 H chain to imol 0 L chain. Then rotate&amp;translate imol 3, generate a new map centered at the current rotation center 
#The current rotation center is set on line 2 when reading 'H.pdb'. The transformed map has a maximum radius of 100A around this point. However the saved map is also limited by the unit cell. 
#This generates map imol 4

#Alternatively one can set the center of the new map by specifying the coordinates for the center point:

#transform_map_using_lsq_matrix(0,'L',1,500,1,'H',1,500,3,[0,0,0],100)  #if the point of interest is at [0,0,0]

#improperly set center will cause the map to be cut inside protein


export_map(4,'transposed_masked.map') #save imol 4, the transformed, masked map.



#exit(0) 

#uncomment the above line to run without graphics as: coot --no-graphic -s scr.py
#otherwise one has to type (exit 0) to quit coot
&lt;/syntaxhighlight&gt;

==SFALL scripts==
===Computing an "atom map" from a PDB file===

::&lt;syntaxhighlight lang="sh"&gt;

sfall xyzin A.pdb mapout atmmap.mrc&lt;&lt;eof
mode atmmap 
resolution 2.5
sfsgroup 1
SYMMETRY 1
cell 250 250 250 90 90 90
end
&lt;/syntaxhighlight&gt;

===Computing crystallographic structure factors from a map===
::&lt;syntaxhighlight lang="sh"&gt;

sfall mapin A.mrc  hklout A.mtz&lt;&lt;eof
mode sfcalc MAPIN
resolution 2.5
sfsgroup 1
SYMMETRY 1
cell 254.4 254.4 254.4 90 90 90
end
&lt;/syntaxhighlight&gt;</text>
    </revision>
  </page>
  <page>
    <title>Negative stain EM</title>
    <ns>0</ns>
    <id>14</id>
    <revision>
      <id>399</id>
      <parentid>398</parentid>
      <timestamp>2019-01-24T00:14:25Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <comment>/* Preparing negative stains */</comment>
      <origin>399</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="6658" sha1="f9mgkd27r8l7ifea7sxcrqbn9eo8jpr" xml:space="preserve">== Supplies for negative stain EM ==
=== Grids: ===
EMS FCF-300-Cu (a popular choice of ready-to-go, carbon-coated copper grids) [71 USD for a box of 50; &lt;span class="plainlinks"&gt;[https://www.emsdiasum.com/microscopy/products/grids/formvar_carbon.aspx: Link]&lt;/span&gt;] &lt;br&gt;

EMS G300-Cu (copper support grids, for making custom carbon-coated grids) [25 USD for a vial of 100; &lt;span class="plainlinks"&gt;[https://www.emsdiasum.com/microscopy/products/grids/gilder.aspx: Link]&lt;/span&gt;]&lt;br&gt;
EMS 300-Cu-Rh (copper-rhodium support grids, allows for easier side identification as one surface is copper and one rhodium, for making custom grids) [25 USD for a vial of 100; &lt;span class="plainlinks"&gt;[https://www.emsdiasum.com/microscopy/products/grids/gilder.aspx: Link]&lt;/span&gt;]&lt;br&gt;

Note: To make custom grids, you need:&lt;br&gt;
a) access to a carbon evaporator machine,&lt;br&gt;
b) a compound for making a support layer for the carbon to rest on, such as EMS Collodion #12620 [16 USD for 30 ml; &lt;span class="plainlinks"&gt;[https://www.emsdiasum.com/microscopy/products/materials/replicating.aspx#12620: Link]&lt;/span&gt;]&lt;br&gt;

=== Tweezers: ===
EMS Tweezer 0103-N4-PO (convenient choice for making EM grids since the tweezer holds a grid in place and only opens when depressed) [35 USD for one; purchase 2 pairs at least; &lt;span class="plainlinks"&gt;[https://www.emsdiasum.com/microscopy/products/tweezers/dumont_negative_action.aspx#01-N4: Link]&lt;/span&gt;] &lt;br&gt;
Ted Pella Tweezer 525 (for manipulating grids) [58 USD for one; &lt;span class="plainlinks"&gt;[http://www.tedpella.com/Tweezers_html/tweezers.htm#525: Link]&lt;/span&gt;] &lt;br&gt;
Ted Pella Tweezer 527 (for manipulating grids) [62 USD for one; &lt;span class="plainlinks"&gt;[http://www.tedpella.com/Tweezers_html/tweezers.htm#527: Link]&lt;/span&gt;] &lt;br&gt;

=== Stains: ===
EMS Phosphotungstic Acid #19500 [62 USD for 100 g; &lt;span class="plainlinks"&gt;[https://www.emsdiasum.com/microscopy/products/histology/fixatives_histopathology.aspx#19500: Link]&lt;/span&gt;] &lt;br&gt;
EMS Uranyl Acetate #22400 [162 USD for 125 g; &lt;span class="plainlinks"&gt;[https://www.emsdiasum.com/microscopy/products/chemicals/tannic.aspx#22400: Link]&lt;/span&gt;] &lt;br&gt;
EMS Uranyl Formate #22450 [102 USD for 1 g; &lt;span class="plainlinks"&gt;[https://www.emsdiasum.com/microscopy/products/chemicals/tannic.aspx#22450: Link]&lt;/span&gt;] &lt;br&gt;

=== Other: ===
EMS grid boxes #71150&lt;br&gt;
Whatman filter paper no. 1, 90 mm circles, #1001090&lt;br&gt;
Parafilm&lt;br&gt;

== Preparing negative stains ==
=== Uranyl Acetate 2%===
Standard negative stain, good stability after preparation. pH of solution is 4 - 4.5.&lt;br&gt;

50ml:&lt;br&gt;
1. Weigh 1 g in 50 ml conical tube;&lt;br&gt;
2. Add 50 ml ddH&lt;sub&gt;2&lt;/sub&gt;O water;&lt;br&gt;
3. Put on tube cap and shake until dissolved;&lt;br&gt;
4. Filter through 0.22 μm filter into light-opaque brown glass bottle (or into opaque 50 ml conical tube);&lt;br&gt;
[alternatively, filter into regular 50 ml conical tube and wrap it in aluminum foil at the end];&lt;br&gt;
5. Store at 4&lt;sup&gt;o&lt;/sup&gt;C, shelf-life: months;&lt;br&gt;
6. If light stain precipitation is observed after a while, filter through 0.22 μm before use.&lt;br&gt;



=== Uranyl Formate 0.75% ===
Fine grain size negative stain, recommended for small proteins &lt; 100 kDa, poor stability after preparation. pH of solution is 4 - 4.5.&lt;br&gt;

5ml:&lt;br&gt;
1. Weigh out 37.5 mg of stain into a small beaker, add a stir bar;&lt;br&gt;
2. Add 5 ml of boiling/very hot ddH&lt;sub&gt;2&lt;/sub&gt;O water and stir vigorously for 15 minutes;&lt;br&gt;
3. Add 8 μl of 5 M NaOH, continue stirring for another 15 minutes;&lt;br&gt;
4. Filter through 0.22 μm filter into a 15 ml tube covered with aluminum foil (or 15 ml opaque tube);&lt;br&gt;
5. Store at RT, shelf-life: up to a week (precipitation progresses quickly);&lt;br&gt;
6. If traces of precipitation are visible, filter needed volume through 0.22 μm filter before use.&lt;br&gt;


=== Phosphotungstic Acid 2%===
Provides less contrast than uranyl acetate and formate, images tend to have a 'fuzzy' look to them, useful for work with specimen sensitive to low pH, pH of solution can be adjusted between 5 - 8.&lt;br&gt;

20ml:&lt;br&gt;
1. Weigh out 0.4 g of stain into a small beaker, add a stir bar;&lt;br&gt;
2. Add 20 ml of ddH&lt;sub&gt;2&lt;/sub&gt;O water and stir vigorously until dissolved;&lt;br&gt;
3. Adjust the pH to anywhere between 5 - 8, with NaOH or KOH;&lt;br&gt;
4. Filter through 0.22 μm filter into a 50 ml tube;&lt;br&gt;
5. Aliquot 0.5 ml portions into 1. 5ml tubes and freeze at -20&lt;sup&gt;o&lt;/sup&gt;C;&lt;br&gt;
6. Break a fresh aliquot from freezer for staining of your samples.&lt;br&gt;

== Making sample grids ==
=== Side blotting method ===
1. Glow-discharge grid at 25 mAmp for 45 sec. Do this directly before making grids as the applied charge dissipates over time;&lt;br&gt;
[This procedure modifies the carbon surface to more hydrophilic (negatively charged); alternatively it can be modified to a hydrophobic surface (positively charged) by the presence of amylamine during the process (put 2 drops of amylamine in a clean small cup, and place the cup in the glow-dicharger chamber).
Glow-discharge also removes any residual hydrocarbons thus cleaning the carbon surface.]&lt;br&gt;
2. On a piece of parafilm, place 3 x 8 ul drops of protein buffer and 3 x 8 ul drops of stain (2 for wash and 1 for stain);&lt;br&gt;
[The number of buffer washes and stain washes should be optimized for individual samples.]&lt;br&gt;
3. Grip the edge of the grid with a pair of tweezers;&lt;br&gt;
4. Apply 3.5 µL of sample to the carbon surface of the grid with a pipette;&lt;br&gt;
5. Absorb the sample to the grid for 45 s;&lt;br&gt;
[This time should be optimized for individual samples, general range is 10-60 s.]&lt;br&gt;
6. Blot away excess liquid by touching the edge of the grid to a piece of filter paper;&lt;br&gt;
7. Wash grid with buffer: briefly touch the carbon surface of the grid to a buffer drop sitting on the parafilm and lift the grid, blot away excess liquid. Repeat the process 2 more times;&lt;br&gt;
8. Wash with stain: perform 2 washes as described above;&lt;br&gt; 
9. Stain the sample: briefly touch the carbon surface of the grid to the last stain drop, lift it, stain for 45 s then blot away excess stain;&lt;br&gt;
[This time should be optimized for individual samples, typical times are 30 - 60 s.]&lt;br&gt;
10. Air dry the grid for 3-5 min, then place in a storage box.&lt;br&gt;
[Ideally, storage boxes should be stored in a desiccator.]

=== Useful resources ===
1. &lt;span class="plainlinks"&gt;[https://www.jove.com/video/57199/variations-on-negative-stain-electron-microscopy-methods-tools-for: Instructional video&lt;/span&gt;] from the publication:&lt;br&gt;
Scarff, C. A., Fuller, M. J., Thompson, R. F., Iadaza, M. G. Variations on Negative Stain Electron Microscopy Methods: Tools for Tackling Challenging Systems. J. Vis. Exp. (132), e57199, doi:10.3791/57199 (2018).</text>
    </revision>
  </page>
  <page>
    <title>Negative stain EM</title>
    <ns>0</ns>
    <id>14</id>
    <revision>
      <id>399</id>
      <parentid>398</parentid>
      <timestamp>2019-01-24T00:14:25Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <comment>/* Preparing negative stains */</comment>
      <origin>399</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="6658" sha1="f9mgkd27r8l7ifea7sxcrqbn9eo8jpr" xml:space="preserve">== Supplies for negative stain EM ==
=== Grids: ===
EMS FCF-300-Cu (a popular choice of ready-to-go, carbon-coated copper grids) [71 USD for a box of 50; &lt;span class="plainlinks"&gt;[https://www.emsdiasum.com/microscopy/products/grids/formvar_carbon.aspx: Link]&lt;/span&gt;] &lt;br&gt;

EMS G300-Cu (copper support grids, for making custom carbon-coated grids) [25 USD for a vial of 100; &lt;span class="plainlinks"&gt;[https://www.emsdiasum.com/microscopy/products/grids/gilder.aspx: Link]&lt;/span&gt;]&lt;br&gt;
EMS 300-Cu-Rh (copper-rhodium support grids, allows for easier side identification as one surface is copper and one rhodium, for making custom grids) [25 USD for a vial of 100; &lt;span class="plainlinks"&gt;[https://www.emsdiasum.com/microscopy/products/grids/gilder.aspx: Link]&lt;/span&gt;]&lt;br&gt;

Note: To make custom grids, you need:&lt;br&gt;
a) access to a carbon evaporator machine,&lt;br&gt;
b) a compound for making a support layer for the carbon to rest on, such as EMS Collodion #12620 [16 USD for 30 ml; &lt;span class="plainlinks"&gt;[https://www.emsdiasum.com/microscopy/products/materials/replicating.aspx#12620: Link]&lt;/span&gt;]&lt;br&gt;

=== Tweezers: ===
EMS Tweezer 0103-N4-PO (convenient choice for making EM grids since the tweezer holds a grid in place and only opens when depressed) [35 USD for one; purchase 2 pairs at least; &lt;span class="plainlinks"&gt;[https://www.emsdiasum.com/microscopy/products/tweezers/dumont_negative_action.aspx#01-N4: Link]&lt;/span&gt;] &lt;br&gt;
Ted Pella Tweezer 525 (for manipulating grids) [58 USD for one; &lt;span class="plainlinks"&gt;[http://www.tedpella.com/Tweezers_html/tweezers.htm#525: Link]&lt;/span&gt;] &lt;br&gt;
Ted Pella Tweezer 527 (for manipulating grids) [62 USD for one; &lt;span class="plainlinks"&gt;[http://www.tedpella.com/Tweezers_html/tweezers.htm#527: Link]&lt;/span&gt;] &lt;br&gt;

=== Stains: ===
EMS Phosphotungstic Acid #19500 [62 USD for 100 g; &lt;span class="plainlinks"&gt;[https://www.emsdiasum.com/microscopy/products/histology/fixatives_histopathology.aspx#19500: Link]&lt;/span&gt;] &lt;br&gt;
EMS Uranyl Acetate #22400 [162 USD for 125 g; &lt;span class="plainlinks"&gt;[https://www.emsdiasum.com/microscopy/products/chemicals/tannic.aspx#22400: Link]&lt;/span&gt;] &lt;br&gt;
EMS Uranyl Formate #22450 [102 USD for 1 g; &lt;span class="plainlinks"&gt;[https://www.emsdiasum.com/microscopy/products/chemicals/tannic.aspx#22450: Link]&lt;/span&gt;] &lt;br&gt;

=== Other: ===
EMS grid boxes #71150&lt;br&gt;
Whatman filter paper no. 1, 90 mm circles, #1001090&lt;br&gt;
Parafilm&lt;br&gt;

== Preparing negative stains ==
=== Uranyl Acetate 2%===
Standard negative stain, good stability after preparation. pH of solution is 4 - 4.5.&lt;br&gt;

50ml:&lt;br&gt;
1. Weigh 1 g in 50 ml conical tube;&lt;br&gt;
2. Add 50 ml ddH&lt;sub&gt;2&lt;/sub&gt;O water;&lt;br&gt;
3. Put on tube cap and shake until dissolved;&lt;br&gt;
4. Filter through 0.22 μm filter into light-opaque brown glass bottle (or into opaque 50 ml conical tube);&lt;br&gt;
[alternatively, filter into regular 50 ml conical tube and wrap it in aluminum foil at the end];&lt;br&gt;
5. Store at 4&lt;sup&gt;o&lt;/sup&gt;C, shelf-life: months;&lt;br&gt;
6. If light stain precipitation is observed after a while, filter through 0.22 μm before use.&lt;br&gt;



=== Uranyl Formate 0.75% ===
Fine grain size negative stain, recommended for small proteins &lt; 100 kDa, poor stability after preparation. pH of solution is 4 - 4.5.&lt;br&gt;

5ml:&lt;br&gt;
1. Weigh out 37.5 mg of stain into a small beaker, add a stir bar;&lt;br&gt;
2. Add 5 ml of boiling/very hot ddH&lt;sub&gt;2&lt;/sub&gt;O water and stir vigorously for 15 minutes;&lt;br&gt;
3. Add 8 μl of 5 M NaOH, continue stirring for another 15 minutes;&lt;br&gt;
4. Filter through 0.22 μm filter into a 15 ml tube covered with aluminum foil (or 15 ml opaque tube);&lt;br&gt;
5. Store at RT, shelf-life: up to a week (precipitation progresses quickly);&lt;br&gt;
6. If traces of precipitation are visible, filter needed volume through 0.22 μm filter before use.&lt;br&gt;


=== Phosphotungstic Acid 2%===
Provides less contrast than uranyl acetate and formate, images tend to have a 'fuzzy' look to them, useful for work with specimen sensitive to low pH, pH of solution can be adjusted between 5 - 8.&lt;br&gt;

20ml:&lt;br&gt;
1. Weigh out 0.4 g of stain into a small beaker, add a stir bar;&lt;br&gt;
2. Add 20 ml of ddH&lt;sub&gt;2&lt;/sub&gt;O water and stir vigorously until dissolved;&lt;br&gt;
3. Adjust the pH to anywhere between 5 - 8, with NaOH or KOH;&lt;br&gt;
4. Filter through 0.22 μm filter into a 50 ml tube;&lt;br&gt;
5. Aliquot 0.5 ml portions into 1. 5ml tubes and freeze at -20&lt;sup&gt;o&lt;/sup&gt;C;&lt;br&gt;
6. Break a fresh aliquot from freezer for staining of your samples.&lt;br&gt;

== Making sample grids ==
=== Side blotting method ===
1. Glow-discharge grid at 25 mAmp for 45 sec. Do this directly before making grids as the applied charge dissipates over time;&lt;br&gt;
[This procedure modifies the carbon surface to more hydrophilic (negatively charged); alternatively it can be modified to a hydrophobic surface (positively charged) by the presence of amylamine during the process (put 2 drops of amylamine in a clean small cup, and place the cup in the glow-dicharger chamber).
Glow-discharge also removes any residual hydrocarbons thus cleaning the carbon surface.]&lt;br&gt;
2. On a piece of parafilm, place 3 x 8 ul drops of protein buffer and 3 x 8 ul drops of stain (2 for wash and 1 for stain);&lt;br&gt;
[The number of buffer washes and stain washes should be optimized for individual samples.]&lt;br&gt;
3. Grip the edge of the grid with a pair of tweezers;&lt;br&gt;
4. Apply 3.5 µL of sample to the carbon surface of the grid with a pipette;&lt;br&gt;
5. Absorb the sample to the grid for 45 s;&lt;br&gt;
[This time should be optimized for individual samples, general range is 10-60 s.]&lt;br&gt;
6. Blot away excess liquid by touching the edge of the grid to a piece of filter paper;&lt;br&gt;
7. Wash grid with buffer: briefly touch the carbon surface of the grid to a buffer drop sitting on the parafilm and lift the grid, blot away excess liquid. Repeat the process 2 more times;&lt;br&gt;
8. Wash with stain: perform 2 washes as described above;&lt;br&gt; 
9. Stain the sample: briefly touch the carbon surface of the grid to the last stain drop, lift it, stain for 45 s then blot away excess stain;&lt;br&gt;
[This time should be optimized for individual samples, typical times are 30 - 60 s.]&lt;br&gt;
10. Air dry the grid for 3-5 min, then place in a storage box.&lt;br&gt;
[Ideally, storage boxes should be stored in a desiccator.]

=== Useful resources ===
1. &lt;span class="plainlinks"&gt;[https://www.jove.com/video/57199/variations-on-negative-stain-electron-microscopy-methods-tools-for: Instructional video&lt;/span&gt;] from the publication:&lt;br&gt;
Scarff, C. A., Fuller, M. J., Thompson, R. F., Iadaza, M. G. Variations on Negative Stain Electron Microscopy Methods: Tools for Tackling Challenging Systems. J. Vis. Exp. (132), e57199, doi:10.3791/57199 (2018).</text>
    </revision>
  </page>
  <page>
    <title>Negative stain protocol (Rini lab)</title>
    <ns>0</ns>
    <id>19</id>
    <revision>
      <id>4700</id>
      <parentid>4699</parentid>
      <timestamp>2020-06-08T18:14:04Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <comment>/* Gridbox */</comment>
      <origin>4700</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="6559" sha1="7fy90mlxqfdbrilh0u3c5ser9vgagld" xml:space="preserve">
'''If frozen as 20 uL aliquots at -80C, the Uranyl stain can last forever. If you see crystals on the grid, you didn't wick the stain well enough. It is not the stain. '''


==Supplies==
===Copper-Rhodium grids===

*M300-CR 
*M400-CR (most frequently used grid size)

===Gridbox===
*71155

===Tweezers===
*Dumont style 5, fine tip(0.06x0.1 mm will be OK), non-coated. Example: 0303-5-PS-1 (electron microscopy sciences @ Amazon.com)
::Quantity: 2
*Reverse action, anti-capillary tweezers 0.10x0.15 mm. Example: 5378-NM '''Do not get the gold plated ones or the super-thin ones!'''
::Quantity: 2

===Chemicals===

*Acetone (For cleaning the grids if desired. Can also be used to dissolve the nitrocellulose membrane to recover grids from failed attempts of making continuous-carbon grids.)

*Uranyl formate (With our protocol, only tiny quantities will be used for each grid. One bottle shared among labs should last years.)
::'''Uranyl is a toxic heavy metal in a easily digestible salt form. So use proper caution and try minimising waste.'''

::*2% Uranyl formate can be made with 0.2 g Uranyl formate and 10mL H2O in a 15mL tube. The water only needs to be clean. No heating, No NaOH, just shake in a tightly closed 15mL tube for the stain to dissolve and a quick and gentle spin to bring down the drops from the cap.  After filtering through a .22 um or .45 um syringe-filter (hydrophilic, the same ones for proteins), '''the 2% stain can be saved forever at -80C''' as 20 uL or larger aliquots. 

::*Upon use, adding 1V water to the stain to make 1% stain can further reduce both the consumption of stain and chance of getting crystals on the grid. Adhere to a concentration (0.75%, 1%, 2%) based on your personal preference though. 

::*Uranyl formate is not as light-sensitive as legends tell. Working under room lighting or staying on open bench for 1 hour will both be fine. The frozen aliquots will be stable at -80C for at least 1.5 year with no observable change. If black crystals are observed on the negative stain specimen, it is most likely due to insufficient wicking (therefore very high local concentration at end of drying), not the stain being "old".

===Glassware===
A round, glass lunch box, with a diameter of 8-15 cm and a smooth rim.

==Making amorphous carbon grid==
1. Fill a round glass container with clean water. Ideally slightly overfill the container so that the water top surface is convex in shape.

2. Use a 200uL pipetman, drop a 5-10 ul drop of collodion on the top of the water. Wait for 5 min till the amyl acetate solvent evaporates and a solid film can be detected by gently poking and dragging. This film is formed from the nitrocellulose dissolved in collodion.

3. Lay M400-CR grids with the silver(shinnier) side facing the nitrocellulose film. If you let the "wrong" (less smooth) side facing down, there is going to be ... no problem. When one has 20-100 grids on the film it is enough. Beginners should only lay 20 grids or so each time.

4. Take a piece of the backing paper of parafilm, or similar "waxy" paper. First lightly wet one side of the paper by touching a water surface, then tap this side on a dry filter paper to remove the excess water. 

5. Lay the semi-wet paper over the grid-on-nitrocellulose film floating on water. Wait for the paper to attach to the NC film. If deemed necessary, cut the extra film outside the paper with pipetman tip so that the film won't fold back onto the grids. Then lift the paper carefully from one side. The film and grids should adhere to the paper and be lifted.

6. Lay the paper with grids on bench (grids facing up ofc). Put some 1x3 inch glass slides (or anything with some weight) on its edges to help holding it immobile. Let it dry (a lamp over it can help, but do not put the bulb too close - the vicinity of a incandescent bulb is at a few hundred °C). Now we have an assembly of NC film-grids-on-paper, from top to bottom.

7. Go to a carbon evaporator, evaporate as much carbon as you like to the top of the NC film. The grids are now ready to use. Very thick carbon is not a problem for negative stain. Too thin carbon may have problems adsorbing the protein (or surviving glow discharge).

* If unsure, the presence of the carbon film can be checked under light microscope, especially when some squares have broken films. The carbon film is actually quite strong. If a grid is sonicated under water, many squares will have broken carbon films but they will still cling to the grid.
* One may also put some water on the grid surface and observe under light microscope to see the water drying - at the end of drying, in each square one can see water retracting from the centre along the film surface, instead of suddenly burst.

==Negative stain Procedure==
Before start: clean the work area, put one or two pieces of large (10-20 cm diameter) filter paper on the intended work area to catch, if any, spillage. Tear a few stripes of filter papers for wicking the grids later. Fold each of these small pieces once so that they can stand on the large filter paper.

1. Glow discharge the grids for 15-60s according to your preference. As long as the solution spreads on the grid with no help it is enough. It is advised to use the glow discharged grids within an hour. However, using them after 3 hours didn't seem to be a big problem.

2. Grip one grid with an anti-capillary tweezer. Lay the tweezer on top of a large piece of filter paper. The carbon side of the grid faces up.

3. Put 2-5 uL of protein (5-15 ug/mL concentration, needs to be tested for new proteins) on the grid, wait for 10-60s. No need to be very exact. Most binding reactions follow a roughly parabola-shaped curve. Most binding occurs in the first few seconds, everything later accounts for the rest 10%. 

4. Blot away the protein solution on the edge of one of the filter paper stripes prepared earlier. 

5. Wash the grid with 3-5 uL of liquid. This liquid could be any of the following (they all work!):

*Water
*Saline(150 mM NaCl)
*TBS
*The uranyl stain

6. Blot away the wash solution. No need to be too thorough here. 

7. Put 2-3 uL of 2% Uranyl stain on the grid. Leave for 15-60s. Blot off the stain as much as possible (with a good filter paper) but do not scratch the carbon surface (lightly touching the surface with some furry edge of the paper is fine). Tip: The thick Whatman filter paper works best; Whatman papers have their wicking rates stated on the box. 

8. Leave the grid to dry either on the tweezer or in the grid box. Do not worry about the light.</text>
    </revision>
  </page>
  <page>
    <title>Optics</title>
    <ns>0</ns>
    <id>125</id>
    <revision>
      <id>4550</id>
      <parentid>4506</parentid>
      <timestamp>2019-02-26T19:09:14Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <origin>4550</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1508" sha1="mi215ep64qwes3tpdf5mk2tx0jtc3sy" xml:space="preserve">==Geometrical Optics==

For a spherical plano convex lens, if the radius of the spherical surface is R, the thickness of the lens is h, the diameter of the lens is r:

'''R^2-r^2=(R-h)^2'''

'''R=(r^2+h^2)/2h=r^2/2h+h/2'''


If the refractive index of the lens material is n, then the focal length of the the lens is:

'''f=R/(n-1)'''

This is true only for the central part of the lens. The further away from the centre, the refracted rays would be more bent and intersect with the lens axis closer to the lens (spherical aberration).

If two thin lens (f1 and f2) are placed together with a distance d between them, the resulting focal length is

'''1/f=1/f1+1/f2-d/(f1*f2)'''

If d=0, then '''1/f=1/f1+1/f2'''

===Interception of a ray parallel with lens axis after passing a spherical plano convex lens=== 
R: radius of the the spherical surface

h: distance between the ray and the axis of the lens

n: refractive index of the lens


'''f= [sqrt(R^2+h^2) + n*sqrt(R^2-n^2*h^2)]/(n^2-1)'''

Apparently, in order for the second sqrt to be real, R &gt; n*h. In a real lens, this means that when the distance of the ray is farther than R/n, total inflexion will disallow the ray from entering or exiting the lens.

When h-&gt;0: '''f=(R+nR)/(n^2-1)=R/(n-1)'''.   This is the thin lens approximation.


==Interesting links==

http://www.physicsinsights.org/simple_optics_spherical_lenses-1.html

http://www.feynmanlectures.caltech.edu/II_29.html

https://link.springer.com/content/pdf/10.1007%2F0-387-26016-1_2.pdf</text>
    </revision>
  </page>
  <page>
    <title>Talos L120C cryo-EM operation</title>
    <ns>0</ns>
    <id>122</id>
    <redirect title="L120C cryo-EM operation" />
    <revision>
      <id>4396</id>
      <timestamp>2019-02-05T10:46:38Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <comment>Lizhijie moved page [[Talos L120C cryo-EM operation]] to [[L120C cryo-EM operation]]</comment>
      <origin>4396</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="37" sha1="ipoh1xvphg2tpdxvf4rdxvck9z88pot" xml:space="preserve">#REDIRECT [[L120C cryo-EM operation]]</text>
    </revision>
  </page>
  <page>
    <title>Talos L120C operation</title>
    <ns>0</ns>
    <id>123</id>
    <redirect title="L120C operation" />
    <revision>
      <id>4398</id>
      <timestamp>2019-02-05T10:47:52Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <comment>Lizhijie moved page [[Talos L120C operation]] to [[L120C operation]]</comment>
      <origin>4398</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="29" sha1="hlu1mb3iao2th2aju9ycfzx48lrqhcw" xml:space="preserve">#REDIRECT [[L120C operation]]</text>
    </revision>
  </page>
  <page>
    <title>Useful bits</title>
    <ns>0</ns>
    <id>131</id>
    <revision>
      <id>4698</id>
      <parentid>4697</parentid>
      <timestamp>2020-03-28T18:13:53Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <comment>/* Rift S VR goggle */</comment>
      <origin>4698</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1462" sha1="09ls4ytogqyjj7gp16m02z036dlirn9" xml:space="preserve">==Rift S VR goggle==

Connection problem solution:

1 Uninstall both "rift usb hub" in Device manager, with remove software selected

2 Unplug the Display cable, unplug the usb cable.

3 Plug in the usb cable, let the driver installation to finish.

==Molecular Graphics==

===COOT functions===
https://github.com/pemsley/coot/blob/master/src/coot.py#L999

===Making video from frame images===

ffmpeg -framerate 1 -pattern_type glob -i '*.jpg' -c:v libx264 out.mp4

===Making GIF from frame images (Imagemagick)===

http://www.imagemagick.org/Usage/anim_mods/

==Bash==
===bash cheatsheet===

https://devhints.io/bash

===Bash Commands and scripts===


====Find and delete empty directorys====
&lt;syntaxhighlight lang="shell" style="border:1px "&gt;
find -type d -empty -delete
&lt;/syntaxhighlight&gt;

====Reboot Ubuntu in text mode or graphical mode====

Essentially lazy way of running
&lt;syntaxhighlight lang="shell" style="border:1px "&gt;
sudo systemctl set-default multi-user.target
&lt;/syntaxhighlight&gt;

Replace "'superuser_password'" with your sudo password (with all the peril of course):
&lt;syntaxhighlight lang="shell" style="border:1px "&gt;
#!/bin/bash

case $1 in 
	text)
		C='systemctl set-default multi-user.target'
	;;
	gra*)
		C='systemctl set-default graphical.target'
	;;
	*)
		echo 'need options: text|gra(phic)'
		exit
	;;
esac

echo $C

if [ "$(id -u)" != "0" ]; then

	exec echo 'superuser_password'|sudo -S $C 
else 	exec $C

fi

#echo $C
&lt;/syntaxhighlight&gt;</text>
    </revision>
  </page>
  <page>
    <title>Useful linux shell scripts</title>
    <ns>0</ns>
    <id>124</id>
    <revision>
      <id>4438</id>
      <parentid>4435</parentid>
      <timestamp>2019-02-11T22:01:22Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <comment>/* Find and delete empty directorys */</comment>
      <origin>4438</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1009" sha1="c74c3mrskhfvb2hdgcxrhpi2egj3ski" xml:space="preserve">
==Display Relion results==
Must be run under the main project directory:

&lt;syntaxhighlight lang="shell" style="border:1px "&gt;
relion_display --gui --i Class2D/job056/run_it007_model.star 
&lt;/syntaxhighlight&gt;


==Find and delete empty directorys==
&lt;syntaxhighlight lang="shell" style="border:1px "&gt;
find -type d -empty -delete
&lt;/syntaxhighlight&gt;

==Reboot Ubuntu in text mode or graphical mode==

Essentially lazy way of running
&lt;syntaxhighlight lang="shell" style="border:1px "&gt;
sudo systemctl set-default multi-user.target
&lt;/syntaxhighlight&gt;

Replace "'superuser_password'" with your sudo password (with all the peril of course):
&lt;syntaxhighlight lang="shell" style="border:1px "&gt;
#!/bin/bash

case $1 in 
	text)
		C='systemctl set-default multi-user.target'
	;;
	gra*)
		C='systemctl set-default graphical.target'
	;;
	*)
		echo 'need options: text|gra(phic)'
		exit
	;;
esac

echo $C

if [ "$(id -u)" != "0" ]; then

	exec echo 'superuser_password'|sudo -S $C 
else 	exec $C

fi

#echo $C
&lt;/syntaxhighlight&gt;</text>
    </revision>
  </page>
  <page>
    <title>Useful numbers</title>
    <ns>0</ns>
    <id>6</id>
    <revision>
      <id>4694</id>
      <parentid>4693</parentid>
      <timestamp>2019-12-23T00:23:46Z</timestamp>
      <contributor>
        <ip>142.1.243.41</ip>
      </contributor>
      <comment>/* L120C Electron flux with LaB6 filament */</comment>
      <origin>4694</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="15469" sha1="tvw0n32mn67n6yresl5shtu6q9qjs3i" xml:space="preserve">== Electron Charge ==
'''1 &lt;span class="plainlinks"&gt;[https://en.wikipedia.org/wiki/Coulomb coulomb(C)]&lt;/span&gt; = 1 A·s = 6.242e+18 electrons'''

'''1 μA = 6.242e+12 electrons/s'''

'''1 nA = 6.242e+9 electrons/s'''

'''1 pA = 6.242e+6 electrons/s'''

'''1 fA = 6.242e+3 electrons/s'''


'''1 e= 1.602176634e−19 C''' (&lt;span class="plainlinks"&gt;[https://en.wikipedia.org/wiki/2019_redefinition_of_SI_base_units SI definition 2019]&lt;/span&gt;, exact)

1 mole = 6.02214076e+23  (&lt;span class="plainlinks"&gt;[https://en.wikipedia.org/wiki/2019_redefinition_of_SI_base_units SI definition 2019]&lt;/span&gt;, exact)

Therefore:

'''1 mole electron =''' 1.602176634e−19 × 6.02214076e+23 ≈ '''96485.3 C'''

== Electron energy and speed==
Speed of light '''c = 299792458 m/s '''

Planck's constant '''h = 6.62607004e-34 m&lt;sup&gt;2&lt;/sup&gt;·kg/s'''

Electron rest(invariant) mass '''m&lt;sub&gt;0&lt;/sub&gt; = 9.10938356(11)e−31 kg ≈ 5.49e−4 dalton'''

Electron '''m&lt;sub&gt;0&lt;/sub&gt;c&lt;sup&gt;2&lt;/sup&gt; = 8.18711e-14 J'''

E = eV + m&lt;sub&gt;0&lt;/sub&gt;c&lt;sup&gt;2&lt;/sup&gt; = mc&lt;sup&gt;2&lt;/sup&gt;

v = sqrt (1 - (m&lt;sub&gt;0&lt;/sub&gt;c&lt;sup&gt;2&lt;/sup&gt;/mc&lt;sup&gt;2&lt;/sup&gt;)&lt;sup&gt;2&lt;/sup&gt;) = sqrt (1 - (m&lt;sub&gt;0&lt;/sub&gt;/m)&lt;sup&gt;2&lt;/sup&gt;) )
 
p = mv

λ = p/h 

{|class="wikitable"
!energy in eV !! energy in J !! E=mc&lt;sup&gt;2&lt;/sup&gt; (J)!!m (kg)!!m/m&lt;sub&gt;0&lt;/sub&gt;!!speed in c!!speed in m/s !!time(s) to travel 1m||momentum||wavelengh (Å)||MFP in ice (Å)
|-
|1    ||    1.60e-19    ||    8.19e-14    ||    9.1094e-31    ||    1.00    ||    0.0020    ||    5.93e+05    ||    1.69e-06    ||    5.40e-25    ||    1.23e+01    ||    
|-
|80k    ||    1.28e-15    ||    8.32e-14    ||    9.252e-31    ||    1.02    ||    0.1749    ||    5.24e+07    ||    1.91e-08    ||    4.85e-23    ||    4.16e-02    ||    
|-
|100k    ||    1.60e-14    ||    9.79e-14    ||    1.0892e-30    ||    1.20    ||    0.5482    ||    1.64e+08    ||    6.08e-09    ||    1.79e-22    ||    3.70e-02    ||    1240&lt;sup&gt;1&lt;/sup&gt;
|-
|120k    ||    1.92e-14    ||    1.01e-13    ||    1.12486e-30    ||    1.23    ||    0.5867    ||    1.76e+08    ||    5.69e-09    ||    1.98e-22    ||    3.35e-02    ||    
|-
|200k    ||    3.20e-14    ||    1.14e-13    ||    1.26747e-30    ||    1.39    ||    0.6953    ||    2.08e+08    ||    4.80e-09    ||    2.64e-22    ||    2.51e-02    ||    2420&lt;sup&gt;1&lt;/sup&gt;
|-
|300k    ||    4.81e-14    ||    1.30e-13    ||    1.44574e-30    ||    1.59    ||    0.7765    ||    2.33e+08    ||    4.30e-09    ||    3.37e-22    ||    1.97e-02    ||    3360&lt;sup&gt;1&lt;/sup&gt;
|-
|1M    ||    1.60e-13    ||    2.42e-13    ||    2.6936e-30    ||    2.96    ||    0.9411    ||    2.82e+08    ||    3.54e-09    ||    7.60e-22    ||    8.72e-03    ||    
|-
|10M    ||    1.60e-12    ||    1.68e-12    ||    1.87376e-29    ||    20.57    ||    0.9988    ||    2.99e+08    ||    3.34e-09    ||    5.61e-21    ||    1.18e-03    ||    
|-
|100M    ||    1.60e-11    ||    1.61e-11    ||    1.79177e-28    ||    196.70    ||    1.0000    ||    3.00e+08    ||    3.34e-09    ||    5.37e-20    ||    1.23e-04    ||    
|}

MFP: mean free path

&lt;sup&gt;1&lt;/sup&gt;&lt;span&gt;[https://www.sciencedirect.com/science/article/pii/S0959440X15001931 Russo &amp; Passmore 2016] &lt;/span&gt;

&lt;span&gt;[http://hyperphysics.phy-astr.gsu.edu/hbase/quantum/debrog2.html online calculator]&lt;/span&gt;

==&lt;span class="plainlinks"&gt;[https://en.wikipedia.org/wiki/Permeability_(electromagnetism) Permeability of vaccuum ]&lt;/span&gt;==
'''μ&lt;sub&gt;0&lt;/sub&gt; = 4π × 1e−7 H/m ≈ 12.57e−7 H/m''' (&lt;span class="plainlinks"&gt;[https://en.wikipedia.org/wiki/2019_redefinition_of_SI_base_units SI definition 2019]&lt;/span&gt;, exact)

==&lt;span class="plainlinks"&gt;[https://en.wikipedia.org/wiki/Permittivity Permittivity of vaccuum ]&lt;/span&gt;==
'''ε&lt;sub&gt;0&lt;/sub&gt; = 8.85e−12 F/s''' (derived from μ&lt;sub&gt;0&lt;/sub&gt; and speed of light '''ε&lt;sub&gt;0&lt;/sub&gt; = 1/sqrt(μ&lt;sub&gt;0&lt;/sub&gt; * ε&lt;sub&gt;0&lt;/sub&gt;)''')


==Conductivity of relevant materials==
Source: https://en.wikipedia.org/wiki/Electrical_resistivity_and_conductivity
{| class="wikitable"
|-
! Material
! data-sort-type"number" | Resistivity&lt;br&gt;ρ (Ω·m) at 20°C
! data-sort-type"number" | Conductivity&lt;br&gt;σ (S/m) at 20°C
! data-sort-type"number" | Temperature coefficient (K&lt;sup&gt;-1&lt;/sup&gt;)
|-
|Silver||1.59e-8||6.30e+7||0.0038
|-
|Copper||1.68e-8||5.96e+7||0.00404
|-
|Gold||2.44e-8||4.11e+7||0.0034
|-
|Platinum||1.06e-7||9.43e+6||0.00392
|-
|Aluminium||2.65e−8||3.77e+7||0.0039	
|-
|Iron||9.7e-8||1e+7||0.005
|-
|Carbon steel (1010)||1.43e-7||6.99e+6||
|-
|Amorphous carbon||5e-4 to 8e-4||1.25e+3 to 2e+3|| −0.0005
|-
|Graphite, parallel to basal plane||2.5e-6 to 5e-6 ||2e+5 to 3e+5|| 
|-
|Graphite, perpendicular to basal plane||3.0e-3||3.3e+2|| 
|-
|Sea water||2.00e-1||4.8|| 
|-
|Swimming pool water||3.3e-1 to 4.00e-1||0.25 to 0.30||
|-
|Drinking water||2e+1 to 2e+3||5e-4 to 5e-2|| 
|-
|Deionized water ||1.80e+5||5.50e-6|| 
|-
|Silicon||6.4e+2||1.56e-3||-0.075
|-
|Glass||1e+11 to 1e+15||1e-15 to 1e-11 ||
|-
|Diamond||1e+12||1e-13|| 
|}

==Pressure==
1 '''Pa''' = 1 N/(m&lt;sup&gt;2&lt;/sup&gt;) ≈ 1e-5 atm

1 '''bar''' = 10e5 Pa ≈ 0.977 atm  

1 '''mbar''' = 100 Pa ≈ 0.001 atm  

1 '''mbar''' ≈ 0.75006 Torr

1 '''bar''' ≈ 14.50377 psi



1 '''atm''' = 101325 Pa (1.01325 bar) = 0.101325 MPa = 760 Torr (All exact, by definition)

1 '''atm''' ≈ 14.69595 psi


1 '''Torr''' = 1mm Hg = 1/760 ATM ≈ 133.32 Pa

1 '''psi''' ≈ 6895 Pa

==Properties of cryogens==

{| class="wikitable"
|-
! Material
! molecular weight
! density (g/ml)
! boiling point (°C)
! freezing point (°C)
! isobaric specific heat capacity (J/(g·k))
! latent heat of evaporation (J/g)
! thermal Conductivity (W/(m°C))
|-
||liquid nitrogen||  28 || 0.807  ||−195.79 || −210 || 1.04  || 199||0.026
|-
||liquid methane||  16 || 0.423  ||-161.6 || -182.6 || 2.232  || 511|| 0.034
|-
||liquid ethane||  30 || 0.546  ||-88.3 || -182.8 || 1.715  || 488|| 0.017
|-
||liquid propane||  44 || 0.552  ||−42.2 || -187.7 || 1.63 || 428 ||  0.017
|}

Sources:

https://www.engineeringtoolbox.com/nitrogen-d_1421.html

https://www.engineeringtoolbox.com/methane-d_1420.html

https://www.engineeringtoolbox.com/ethane-d_1417.html

https://www.engineeringtoolbox.com/propane-d_1423.html

https://en.wikipedia.org/wiki/Liquid_nitrogen

https://en.wikipedia.org/wiki/Ethane

https://en.wikipedia.org/wiki/Propane

==Magnification and pixel size on L120C with Ceta camera (14 μm pixel)==
{| class="wikitable"
!kx!!Apix!!length of 4096 pixels(um)!!pixels for 10nm 
|-
|2.6||53.85||22.055||1.9
|-
|3.4||41.18||16.866||2.4
|-
|4.3||32.56||13.336||3.1
|-
|5.3||26.42||10.820||3.8
|-
|6.7||20.90||8.559||4.8
|-
|8.5||16.47||6.746||6.1
|-
|11||12.73||5.213||7.9
|-
|13.5||10.37||4.248||9.6
|-
|17.5||8.00||3.277||12.5
|-
|22||6.36||2.607||15.7
|-
|28||5.00||2.048||20.0
|-
|36||3.89||1.593||25.7
|-
|45||3.11||1.274||32.1
|-
|'''57'''||2.46||1.006||40.7
|-
|'''73'''||1.92||0.786||52.1
|-
|'''92'''||1.52||0.623||65.7
|-
|120||1.17||0.478||85.7
|-
|150||0.93||0.382||107.1
|-
|190||0.74||0.302||135.7
|-
|240||0.58||0.239||171.4
|-
|310||0.45||0.185||221.4
|-
|390||0.36||0.147||278.6
|-
|400||0.35||0.143||285.7
|-
|510||0.27||0.112||364.3
|-
|650||0.22||0.088||464.3
|}

==L120C Electron flux with LaB6 filament==
nP, Parallel illumination (37.4% for spot 5) 

70 um C2 aperture: illuminated area = 10 um&lt;sup&gt;2&lt;/sup&gt; (3.6 um diameter)

{| class="wikitable"
!Intensity!!Spot!!C2 Aperture!!nA!!e/s!!area!!e/Å&lt;sup&gt;2&lt;/sup&gt;/s!!colspan="4"|counts/pixel/s
|-
! !! !! !! !! !! !! !!43kx!!57kx!!73kx!!92kx
|-                    
|39.05%||nP3||70um||2.4||1.50E+10||1.02E+09||14.7||1328||828||505||318
|-
|36.00%||nP4||70um||1.2||7.49E+09||1.02E+09||7.4||664||414||252||159
|-
|37.40%||nP5||70um||0.6||3.75E+09||1.02E+09||3.7||332||'''207'''||126||79
|-
|36.85%||nP6||70um||0.3||1.87E+09||1.02E+09||1.8||166||103||63||40
|-
|36.68%||nP7||70um||0.15||9.36E+08||1.02E+09||0.9||83||52||32||20
|}

{| class="wikitable"
! 
! 
! 
! 
! colspan="3" style="text-align: center;" | 70 um C2
! colspan="3" style="text-align: center;" | 150 um C2
|-
| 
| style="font-weight:bold;" | focus
| style="font-weight:bold;" | parallel
| 
| style="font-weight:bold;" | C2int
| style="font-weight:bold;" | nA
| style="font-weight:bold;" | e/Å2/s
| style="font-weight:bold;" | C2int
| style="font-weight:bold;" | nA
| style="font-weight:bold;" | e/Å2/s
|-
| style="font-weight:bold;" | uP1
| 44.6
| 49.1
| 
| 
| 
| 
| 44.6
| 64
| 1700
|-
| style="font-weight:bold;" | uP2
| 43.2
| 48
| 
| 
| 
| 
| 43.24
| 36.6
| 700
|-
| style="font-weight:bold;" | uP3
| 42.2
| 46.9
| 
| 
| 
| 
| 42.2
| 18.1
| 360
|-
| style="font-weight:bold;" | uP4
| 41.2
| 45.9
| 
| 
| 
| 
| 41.21
| 8.17
| 167
|-
| style="font-weight:bold;" | uP5
| 40.6
| 45.7
| 
| 41.34
| 1.66
| 29
| 41.04
| 3.97
| 80
|-
| style="font-weight:bold;" | uP6
| 40.2
| 45.1
| 
| 40.96
| 0.82
| 15
| 40.7
| 2
| 35
|-
| style="font-weight:bold;" | uP7
| 39.9
| 44.8
| 
| 40.67
| 0.47
| 9
| 40.408
| 1.07
| 21
|-
| style="font-weight:bold;" | uP8
| 39.6
| 44.5
| 
| 40.42
| 0.23
| 4.5
| 40.145
| 0.52
| 11
|-
| style="font-weight:bold;" | uP9
| 39.5
| 
| 
| 40.25
| 0.127
| 2.4
| 39.95
| 0.29
| 6.2
|-
| style="font-weight:bold;" | uP10
| 39.3
| 
| 
| 
| 
| 
| 39.8
| 0.145
| 3
|-
| style="font-weight:bold;" | uP11
| 39
| 
| 
| 
| 
| 
| 39.53
| 0.055
| 
|}

==Magnification Indices for L120C==
{| class="wikitable"
!SubMode!!Mag!!Index
|-


|-
|rowspan="16" |LM||25     ||      1 
|-
|34     ||      2 
|-
|46     ||      3 
|-
|62     ||      4 
|-
|84     ||      5 
|-
|115    ||      6 
|-
|155    ||      7 
|-
|210    ||      8 
|-
|280    ||      9 
|-
|380    ||      10
|-
|510    ||      11
|-
|700    ||      12
|-
|940    ||      13
|-
|1300   ||      14
|-
|1700   ||      15
|-
|2300   ||      16
|-
|rowspan="3" |Mi||1250   ||      17
|-
|1600   ||      18
|-
|2000   ||      19
|-
|rowspan="22" |SA||2600   ||      20
|-
|3400   ||      21
|-
|4300   ||      22
|-
|5300   ||      23
|-
|6700   ||      24
|-
|8500   ||      25
|-
|11000  ||      26
|-
|13500  ||      27
|-
|17500  ||      28
|-
|22000  ||      29
|-
|28000  ||      30
|-
|36000  ||      31
|-
|45000  ||      32
|-
|57000  ||      33
|-
|73000  ||      34
|-
|92000  ||      35
|-
|120000 ||      36
|-
|150000 ||      37
|-
|190000 ||      38
|-
|240000 ||      39
|-
|310000 ||      40
|-
|390000 ||      41
|-
|rowspan="3" |Mh||400000 ||      42
|-
|510000 ||      43
|-
|650000 ||      44
|}

==Ceta 16M camera==
4096 x 4096 pixel CMOS, 16 bit, fiber optic-coupled scintillator

14 um pixel, 6cm x 6cm frame

===Frame rate===
4k × 4k 1 fps

2k × 2k 8 fps

1k × 1k 18fps

512 × 512 25fps

===Imaging performance in 2k ×2k mode===
DQE @ 0.5 Nyquist   &gt;8% @300 kV &gt;12%@200 kV

MTF @ 0.5 Nyquist   &gt;25%@300 kV &gt;35%@200 kV

===Duty cycle in movie mode===
99% in rolling shutter mode

===Movie mode shuttering===
Electronic (rolling shutter) or TEM shutter (camera controlled)

===Conversion efficiency=== 
9 counts/primary electron (typical) @200 kV

6 counts/primary electron (typical) @300 kV

===Readout speed===
320 Megapixel/s (32 port readout at 10 Megapixel/port)

===Datasheet===
https://static.miraheze.org/emtorontowiki/b/bb/Ceta_16M_Datasheet.pdf

==Diffraction parameters of gold and carbon films==

{| class="wikitable"
|+Gold powder diffraction rings (Face-centered cubic, a=4.07 Å)
!||80 kV!!100 kV!!120 kV!!200 kV!!300 kV!!400 kV!!!!d (Å)!!HKL
|-
|Wavelength ||4.16 pm||3.7 pm||3.35 pm||2.51 pm||1.97 pm||1.64 pm||||||
|-
|rowspan="9" |Angle(mRad) ||10.2||9.1||8.2||6.2||4.8||4.0||||4.07||100
|-
|17.7||15.7||14.3||10.7||8.4||7.0||||2.35||111
|-
|20.4||18.1||16.4||12.3||9.7||8.0||||2.04||200
|-
|28.9||25.7||23.3||17.4||13.7||11.4||||1.44||220
|-
|33.8||30.1||27.2||20.4||16.0||13.3||||1.23||113
|-
|35.3||31.4||28.4||21.3||16.7||13.9||||1.18||222
|-
|40.8||36.3||32.8||24.6||19.3||16.1||||1.02||400
|-
|44.7||39.8||36.0||27.0||21.2||17.6||||0.93||133
|-
|48.4||43.0||39.0||29.2||22.9||19.1||||0.86||332
|}

{| class="wikitable"
|+Graphene d-spacing (2D-hexgonal, a=2.456 Å)
!||80 kV!!100 kV!!120 kV!!200 kV!!300 kV!!400 kV!!!!d (Å)!!HKL
|-
|Wavelength ||4.16 pm||3.7 pm||3.35 pm||2.51 pm||1.97 pm||1.64 pm||||||
|-
|rowspan="7" |Angle(mRad)|| 16.9||15.1||13.6||10.2||8.0||6.7||||2.46||10
|-
|19.6||17.4||15.8||11.8||9.3||7.7||||2.13||11
|-
|33.9||30.1||27.3||20.4||16.0||13.4||||1.23||20,21
|-
|39.1||34.8||31.5||23.6||18.5||15.4||||1.06||22
|-
|50.8||45.2||40.9||30.7||24.1||20.0||||0.82||30
|-
|51.7||46.0||41.7||31.2||24.5||20.4||||0.80||31,32
|-
|58.7||52.2||47.3||35.4||27.8||23.1||||0.71||33
|}

==Diffraction parameters of hexagonal and cubic ice of water==

===Hexagonal ice===

Space group P63/mmc, Unit cell: a = 4.501 Å, c = 7.348 Å
{| class="wikitable"
|+Water ice Ih
!||80 kV!!100 kV!!120 kV!!200 kV!!300 kV!!400 kV!!!!d (Å)!!HKL!!I/I&lt;sub&gt;0&lt;/sub&gt;
|-
|Wavelength ||4.16 pm||3.7 pm||3.35 pm||2.51 pm||1.97 pm||1.64 pm||||||||
|-
|rowspan="10" |Angle(mRad) ||10.7||9.5||8.6||6.4||5.1||4.2||||3.897||100||100
|-
|11.3||10.1||9.1||6.8||5.4||4.5||||3.669||002||75
|-
|12.1||10.8||9.7||7.3||5.7||4.8||||3.441||101||53
|-
|15.6||13.9||12.5||9.4||7.4||6.1||||2.671||102||17
|-
|18.5||16.5||14.9||11.2||8.8||7.3||||2.249||110||39
|-
|20.1||17.9||16.2||12.1||9.5||7.9||||2.072||103||30
|-
|21.4||19.0||17.2||12.9||10.1||8.4||||1.948||200||4
|-
|21.7||19.3||17.5||13.1||10.3||8.6||||1.918||112||18
|-
|22.1||19.6||17.8||13.3||10.5||8.7||||1.883||201||3
|-
|24.2||21.5||19.5||14.6||11.4||9.5||||1.721||202||2
|}

References:
https://www.nature.com/articles/1881144a0.pdf
http://www1.lsbu.ac.uk/water/hexagonal_ice.html
https://www.cambridge.org/core/services/aop-cambridge-core/content/view/7F1501FEC2F114A74D3E51252DD261AE/9780511897504c1_p1-66_CBO.pdf/structure_of_iceih.pdf
https://www.cambridge.org/core/journals/journal-of-glaciology/article/hexagonal-and-cubic-ice-at-low-temperatures/B4D0A2CE9AAA95FF2441D498D33DC2C8/core-reader

===cubic ice===
Face-centered cubic, Space group 227, F d -3 m, a = 6.355 Å

{| class="wikitable"
|+Water ice Ic 
!||80 kV!!100 kV!!120 kV!!200 kV!!300 kV!!400 kV!!!!d (Å)!!HKL!!I/I&lt;sub&gt;0&lt;/sub&gt;
|-
|Wavelength ||4.16 pm||3.7 pm||3.35 pm||2.51 pm||1.97 pm||1.64 pm||||||||
|-
|rowspan="3" |Angle(mRad) ||11.3||10.1||9.1||6.8||5.4||4.5||||3.670||111||100
|-
|18.5||16.5||14.9||11.2||8.8||7.3||||2.248||220||40
|-
|21.7||19.3||17.5||13.1||10.3||8.6||||1.917||311||15
|}


References:
https://www.nature.com/articles/1881144a0.pdf
http://www1.lsbu.ac.uk/water/cubic_ice.html
https://www.cambridge.org/core/journals/journal-of-glaciology/article/hexagonal-and-cubic-ice-at-low-temperatures/B4D0A2CE9AAA95FF2441D498D33DC2C8/core-reader


==C2 settings and dose rates==
{| class="wikitable"
!spot!!focus!!parallel!!!!colspan="3"|1.8 um cicle (4cm@22kx), 150um aperture !!!!colspan="3"|1.8 um cicle (4cm@22kx), 150um aperture !!spot
|-
!!!C2int(%)!!C2int(%)!!!!C2int(%)!!nA!!e/Å&lt;sup&gt;2&lt;/sup&gt;/s!!!!C2int(%)!!nA!!e/Å&lt;sup&gt;2&lt;/sup&gt;/s!!
|-
|1||44.6||49.09||||44.6||64||1700||||||||||1
|-
|2||43.21||47.96||||43.24||36.6||700||||||||||2
|-
|3||42.19||46.89||||42.2||18.1||360||||||||||3
|-
|4||41.17||45.92||||41.21||8.17||167||||||||||4
|-
|5||40.55||45.74||||41.04||3.97||80||||41.335||1.66||29||5
|-
|6||40.18||45.12||||40.7||2.00||35||||40.96||0.82||15||6
|-
|7||39.9||44.76||||40.408||1.07||21||||40.67||0.47||9||7
|-
|8||39.6||44.54||||40.145||0.52||11||||40.42||0.23||4.5||8
|-
|9||39.47||||||39.95||0.29||6.2||||40.25||0.127||2.4||9
|-
|10||39.3||||||39.8||0.145||3||||||||||10
|-
|11||39||||||39.53||0.055||||||||||||11
|}</text>
    </revision>
  </page>
  <page>
    <title>Vitrobot SOP</title>
    <ns>0</ns>
    <id>2</id>
    <revision>
      <id>4356</id>
      <parentid>4352</parentid>
      <timestamp>2019-01-31T00:20:17Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <comment>/* Preparation of the cryogen */</comment>
      <origin>4356</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4198" sha1="f3x1d0q4k09qxpug2h3h2vha110am47" xml:space="preserve">==Preparation of the Vitrobot==
# Turn on the Vitrobot, wait the booting sequence to finish.
# If desired, mount the humidifer and fill it through the tubing at its bottom with 15-20 mL of pure water. This is enough for a few hours of operation. It is recommended to not over fill it.
# Setup the parameters on the touch screen. 
:*Typical settings: 5°C, 100% humidity, 1-3s of blotting, 10s waiting (time between adding the drop to grid and the blotting action).

==Preparation of the cryogen==
'''Warnings: '''

Although liquid nitrogen is unlikely to cause serious frostbite owing to Leidenfrost effect, liquid ethane's boiling point is -89°C and liquid propane's boilding point is -42°C. It is possible for them to cause serious injuries to human body, especially to the eyes. '''Safety goggles should be worn when working with these cryogens.'''

Ethane and Propane are highly '''flammable''' in gaseous state. Their evaporation at cryogenic temperature is negligible.


# Assemble the Styrofoam container, place the aluminium spider.
# Pour some liquid nitrogen into both the copper cup and the Styrofoam container. Then keep filling the Styrofoam container but not the copper cup. In the end the copper cup should become empty and the Styrofoam container is filled with liquid nitrogen.
# Open the main valve of the ethane tank and the small value on the regulator. Slowly turn the regulator knob to let the ethane start flowing. One can check the flow by directing the nozzle towards skin. Once ethane starts to flow, push the nozzle against the bottom of the copper cup and slowly fill the cup with liquid ethane. A strong flash light could be very helpful to see the ethane level.
# When the ethane reaches the bottom of the spider, turn the regulator knob to reduce the flow and lift the nozzle. Then turn the regulator completely off. If the flow is completely off before lifting the nozzle there is a chance that the ethane in the tubing will be cooled generating low pressure and suck the liquid ethane into the tubing.
# Put a 5 cent coin on top of the spider to melt the frozen ethane between the spider and the copper cup. Remove the spider with a large tweezer. Do not put the cryogen container on the Vitrobot yet (need to leave room for mounting the tweezer).

==Plunge freezing==
'''Keep the working area orderly to minimize chance of accidents. The $1000-tweezer tip is extremely delicate.'''
# Some checks:
##Check the settings on the touch screen. 
##Check that the ethane is not completely frozen. If it does, warm it with a clean tweezer or a metal rod. 
##Put a cryo grid box in the liquid nitrogen
##'''Check that the aluminum spider has been removed.'''
##New users can uncheck "Skip grid transfer". This will allow the Vitrobot to lift the grid from the ethane cup and move it over the liquid nitrogen.
# Pick a glow-discharged grid with the tweezer with dovetail groove. Mount the tweezer on the end of the rod on Vitrobot. Remember to let the holey carbon film side face the side you will load protein from.
# Lift the tweezer from the touch screen.
# '''Check that the aluminum spider has been removed.''' Put the cryogen container on the holder.
# When both the tweezer and the container are at right position, load a drop of protein to the grid from the small opening on the side of the vitrobot. One might want to check "humidifier off during blotting".
# Click the touch screen to let Vitrobot proceed through the plunge freezing.
# As stated above, one can let the Vitrobot to lift the grid from the copper cup at the end. The grid will stop in the cold nitrogen gas layer.
# Carefully remove the tweezer and store the grid in the cryo grid box.

==Cleaning up==
# Check both valves on the ethane tank and regulator are closed. The knob is turned to the maximum height (least opening).
# Remove humidifier and empty the water. Leave it to dry.
# Move the cryogen container to a hood. Pour out the liquid nitrogen and leave the ethane to warm up and evaporate in the hood. '''Never let the ethane to evaporate in a non-ventilated room'''
# Turn the Vitrobot off (from touch screen and then switch at back).
# Clean up the work area. Safely store the tweezer.</text>
    </revision>
  </page>
  <page>
    <title>EMToronto:Talos L120C operation</title>
    <ns>4</ns>
    <id>15</id>
    <redirect title="Talos L120C operation" />
    <revision>
      <id>326</id>
      <timestamp>2019-01-15T16:57:47Z</timestamp>
      <contributor>
        <username>Maciej</username>
        <id>4</id>
      </contributor>
      <comment>Maciej moved page [[EMToronto:Talos L120C operation]] to [[Talos L120C operation]] over redirect</comment>
      <origin>326</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="35" sha1="iw1n55xvbeh1k7ijy1t64thtsshx67g" xml:space="preserve">#REDIRECT [[Talos L120C operation]]</text>
    </revision>
  </page>
  <page>
    <title>File:Ceta 16M Datasheet.pdf</title>
    <ns>6</ns>
    <id>20</id>
    <revision>
      <id>492</id>
      <timestamp>2019-01-28T21:27:51Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <comment>Datasheet of Ceta 16M CMOS camera</comment>
      <origin>492</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="47" sha1="1ehaut1ey8n1asami1la27o1nq974dm" xml:space="preserve">== Summary ==
Datasheet of Ceta 16M CMOS camera</text>
    </revision>
  </page>
  <page>
    <title>File:Dstb.jpg</title>
    <ns>6</ns>
    <id>126</id>
    <revision>
      <id>4542</id>
      <timestamp>2019-02-26T15:13:19Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <comment>Goal of diffraction lens alignment</comment>
      <origin>4542</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="48" sha1="6lr2e02fmhvjcvosthrdgi8hd23r3gv" xml:space="preserve">== Summary ==
Goal of diffraction lens alignment</text>
    </revision>
  </page>
  <page>
    <title>File:P1 J51 2d classes for iteration 20.png</title>
    <ns>6</ns>
    <id>21</id>
    <revision>
      <id>495</id>
      <timestamp>2019-01-28T21:36:16Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <comment>2D class of apoferritin. ~@27000 particles from 8 images taken with Ceta 16M. Tungsten source. 57kx.</comment>
      <origin>495</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="114" sha1="as2d4e5xx9nhsuos398gr58lg1f73t0" xml:space="preserve">== Summary ==
2D class of apoferritin. ~@27000 particles from 8 images taken with Ceta 16M. Tungsten source. 57kx.</text>
    </revision>
  </page>
  <page>
    <title>MediaWiki:Sidebar</title>
    <ns>8</ns>
    <id>8</id>
    <revision>
      <id>4606</id>
      <parentid>4465</parentid>
      <timestamp>2019-03-20T00:10:03Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <origin>4606</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="582" sha1="d5k9xl1jc0x1suhoxi596mmpe9p8tjd" xml:space="preserve">* navigation
**mainpage|mainpage-description
**recentchanges-url|recentchanges
* Available pages
**Glossary|Glossary
**L120C example images|L120C example images
**Vitrobot SOP|Vitrobot SOP
**L120C operation|L120C operation
**L120C cryo-EM operation|L120C cryo-EM operation
**Negative stain EM|Negative stain EM
**Negative stain protocol (Rini lab)|Negative stain protocol (Rini lab)
**Computer hardware setup|Computer hardware setup
**Linux system setup|Linux system setup
**CryoSPARC tips|CryoSPARC tips
**MRC format|MRC format
**Useful numbers|Useful numbers



* SEARCH
* TOOLBOX</text>
    </revision>
  </page>
  <page>
    <title>Template:!!</title>
    <ns>10</ns>
    <id>26</id>
    <revision>
      <id>711</id>
      <parentid>701</parentid>
      <timestamp>2019-01-30T06:27:40Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>15 revisions imported from [[:templatewiki:Template:!!]]</comment>
      <origin>701</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="85" sha1="3kkvcut84zthga4vh0dsmnjjaon10xd" xml:space="preserve">||&lt;noinclude&gt;
{{documentation}}
{{En-WP attribution notice|Template:!!}}
&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:!((</title>
    <ns>10</ns>
    <id>27</id>
    <revision>
      <id>723</id>
      <parentid>716</parentid>
      <timestamp>2019-01-30T06:27:41Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>11 revisions imported from [[:templatewiki:Template:!((]]</comment>
      <origin>716</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="83" sha1="r9jpjivdujucqutrif3eredq02qfayo" xml:space="preserve">[[&lt;noinclude&gt;{{documentation}}{{En-WP attribution notice|Template:!((}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:!))</title>
    <ns>10</ns>
    <id>28</id>
    <redirect title="Template:))!" />
    <revision>
      <id>732</id>
      <parentid>725</parentid>
      <timestamp>2019-01-30T06:27:41Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>8 revisions imported from [[:templatewiki:Template:!))]]</comment>
      <origin>725</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="26" sha1="5g9ex418xvscsnyrsae4dnxgyapzbmq" xml:space="preserve">#REDIRECT [[Template:))!]]</text>
    </revision>
  </page>
  <page>
    <title>Template:!-</title>
    <ns>10</ns>
    <id>29</id>
    <revision>
      <id>736</id>
      <parentid>735</parentid>
      <timestamp>2019-01-30T06:27:41Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>3 revisions imported from [[:templatewiki:Template:!-]]</comment>
      <origin>735</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="85" sha1="cyt9u4emvbtlg3psyouidz81lrjyzc5" xml:space="preserve">|-&lt;noinclude&gt;
{{documentation}}
{{En-WP attribution notice|Template:!-}}
&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:))!</title>
    <ns>10</ns>
    <id>30</id>
    <revision>
      <id>746</id>
      <parentid>741</parentid>
      <timestamp>2019-01-30T06:27:41Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>9 revisions imported from [[:templatewiki:Template:))!]]</comment>
      <origin>741</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="83" sha1="cql609pzffabzg4emybktyasgm94l6o" xml:space="preserve">]]&lt;noinclude&gt;{{documentation}}{{En-WP attribution notice|Template:))!}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:=</title>
    <ns>10</ns>
    <id>31</id>
    <revision>
      <id>767</id>
      <parentid>751</parentid>
      <timestamp>2019-01-30T06:27:42Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>20 revisions imported from [[:templatewiki:Template:=]]</comment>
      <origin>751</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="83" sha1="63kw71ji8hhjtei5lizg47aex9cwu22" xml:space="preserve">=&lt;noinclude&gt;
{{documentation}}
{{En-WP attribution notice|Template:=}}
&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Aligned table</title>
    <ns>10</ns>
    <id>32</id>
    <revision>
      <id>775</id>
      <parentid>774</parentid>
      <timestamp>2019-01-30T06:27:42Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>7 revisions imported from [[:templatewiki:Template:Aligned_table]]</comment>
      <origin>774</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="162" sha1="gw3ktoqkob7y1p9gc5u3g4o0mjhfwov" xml:space="preserve">{{&lt;includeonly&gt;safesubst:&lt;/includeonly&gt;#invoke:aligned table|table}}&lt;noinclude&gt;
{{documentation}}
{{En-WP attribution notice|Template:Aligned table}}
&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Anchor</title>
    <ns>10</ns>
    <id>33</id>
    <revision>
      <id>821</id>
      <parentid>779</parentid>
      <timestamp>2019-01-30T06:27:43Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>45 revisions imported from [[:templatewiki:Template:Anchor]]</comment>
      <origin>779</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="202" sha1="cs6hw8c7h9giiwpe66v21hy5qm09p47" xml:space="preserve">{{{{{|safesubst:}}}#invoke:anchor|main}}&lt;noinclude&gt;
{{Documentation}}
&lt;!-- Categories go on the /doc subpage, and interwikis go on Wikidata. --&gt;
{{En-WP attribution notice|Template:Anchor}}
&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:As of</title>
    <ns>10</ns>
    <id>34</id>
    <revision>
      <id>879</id>
      <parentid>878</parentid>
      <timestamp>2019-01-30T06:27:45Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>57 revisions imported from [[:templatewiki:Template:As_of]]</comment>
      <origin>878</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2358" sha1="q8h96aicxrx9lxfwan66x3zce4896hv" xml:space="preserve">&lt;!--{{As of}} begin--&gt;&lt;includeonly&gt;&lt;!--

## param 1 is the year
## optional param 2 is the month
## optional param 3 is the day of the month
## optional named parameter alt=[text] is alternative display text (may include wiki markup)
## optional named parameter df=US produces American date format in displayed text
## optional named parameter lc=on gives lower-case-first output
## optional named parameter url=[URL] gives statement reference

## displayed text ([A/a]s of [Start date] by default)
--&gt;{{#if: {{{alt|}}} | {{{alt}}} | {{#if:{{{since|}}}|{{#ifeq: {{{lc}}} | {{{lc|}}} | s | S }}ince | {{#ifeq: {{{lc}}} | {{{lc|}}} | a | A }}s of}} {{#if:{{{pre|}}}|{{{pre|}}}}} {{#if: {{{3|}}} | {{#ifeq:{{lc:{{{df|}}}}}|us|{{MONTHNAME|{{{2}}}}}&amp;nbsp;{{#expr:{{{3}}}}},&amp;#32;|{{#expr:{{{3}}}}}&amp;nbsp;{{MONTHNAME|{{{2}}}}}&amp;nbsp;}}{{{1}}}|{{#if: {{{2|}}} |{{MONTHNAME|{{{2}}}}}&amp;nbsp;}}{{{1}}}}}}}{{#if:{{{post|}}}|&lt;nowiki /&gt;{{{post}}}}}&lt;!--
#### That nowiki is required or, various characters (:, ;, #, and *} will be parsed as wikisyntax for list items.
## ref/update inline banner (hidden by default)
--&gt;&lt;sup class="plainlinks noexcerpt noprint asof-tag {{#if:{{{url|}}}|ref|update}}" style="display:none;"&gt;[{{#if:{{{url|}}}|{{{url}}} &amp;#91;ref&amp;#93;|{{fullurl:{{PAGENAME}}|action=edit}} &amp;#91;update&amp;#93;}}]&lt;/sup&gt;&lt;!--

## categorisation disabled outside main namespace
--&gt;{{DMCA|Articles containing potentially dated statements|from|&lt;!--

## temporal category for template (word method)
--&gt;{{#if: {{#ifexpr: {{{1}}} = 1 }} | {{#ifexpr: {{#time:Y|{{{1}}}}} &gt; 2004 | {{{1}}} | {{#ifexpr: {{#time:Y|{{{1}}}}} &gt; 1989 | {{#time:Y|{{{1}}}}} | before 1990 }}}} | &lt;!--

## temporal category for template (parameter method)
--&gt;{{#ifexpr: {{{1}}} &gt; 2004 | {{#if:{{{2|}}} | {{MONTHNAME|{{{2}}}}} }} {{{1}}} | {{#ifexpr:{{{1}}} &gt; 1989 | {{{1}}} | before 1990 }}}}}}|&lt;!--

## global category for template
--&gt;All articles containing potentially dated statements}}&lt;/includeonly&gt;&lt;!--{{As of}} end--&gt;&lt;noinclude&gt;&lt;!-- 

## dynamic example (as of today, self ref)

--&gt;As of {{Start date|{{CURRENTYEAR}}|{{CURRENTMONTH}}|{{CURRENTDAY}}|df=yes}}&lt;sup class="plainlinks"&gt;[https://en.wikipedia.org/wiki/Template:As_of &amp;#91;ref&amp;#93;]&lt;/sup&gt;

{{documentation}}

&lt;!-- Add categories and inter-wikis to the /doc subpage, not here! --&gt; 

{{En-WP attribution notice|Template:As of}}
&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Block bug documentation</title>
    <ns>10</ns>
    <id>35</id>
    <revision>
      <id>885</id>
      <parentid>884</parentid>
      <timestamp>2019-01-30T06:27:45Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>5 revisions imported from [[:templatewiki:Template:Block_bug_documentation]]</comment>
      <origin>884</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2447" sha1="tb562oo161o9of8zvl4v3qzgyzu4vn4" xml:space="preserve">&lt;noinclude&gt;{{notice|Ignore any errors showing below; they do not appear when this snippet is transcluded (nor does this message box). This doc snippet's output only works when it's transcluded into the context of a specific template, e.g. at [[Template:Block indent/doc]]}}

&lt;/noinclude&gt;If the block-formatted content begins with a list (or any other wikimarkup that is dependent upon a specific markup character being at the beginning of a line) then due to a bug in [[MediaWiki]], a &lt;code&gt;&amp;lt;nowiki /&amp;gt;&lt;/code&gt; must exist before the list (or whatever) starts. Compare:
{| class="wikitable"
|-
! &amp;nbsp;
! scope="col" | code
! scope="col" | result
|-
! scope="row" | FAIL
|
  {{{{BASEPAGENAME}}&lt;nowiki&gt;|&lt;/nowiki&gt;{{{1|1}}}&lt;nowiki&gt;=
 *Firstly, ...
 *Secondly, ...
 *Thirdly, ...
 }}&lt;/nowiki&gt;
| &lt;includeonly&gt;{{{{BASEPAGENAME}}|{{{1|1}}}=
*Firstly, ...
*Secondly, ...
*Thirdly, ...
}}&lt;/includeonly&gt;&lt;noinclude&gt;{{error|This output only works when this doc snippet is transcluded.}}&lt;/noinclude&gt;
|-
! scope="row" | Works as intended
|
  {{{{BASEPAGENAME}}&lt;nowiki&gt;|&lt;/nowiki&gt;{{{1|1}}}&lt;nowiki&gt;=&lt;/nowiki&gt;'''&amp;lt;nowiki /&amp;gt;'''&lt;nowiki&gt;
 *Firstly, ...
 *Secondly, ...
 *Thirdly, ...
 }}&lt;/nowiki&gt;
| &lt;includeonly&gt;{{{{BASEPAGENAME}}|{{{1|1}}}=&lt;nowiki /&gt;
*Firstly, ...
*Secondly, ...
*Thirdly, ...
}}&lt;/includeonly&gt;&lt;noinclude&gt;{{error|This output only works when this doc snippet is transcluded.}}&lt;/noinclude&gt;
|}
To embed a template in block markup like this, the block template's content parameter must be named or numbered and include the self-closing noinclude – as in &lt;code&gt;&lt;nowiki&gt;|1=&amp;lt;nowiki /&amp;gt;&lt;/nowiki&gt;&lt;/code&gt; – then every &lt;code&gt;&lt;nowiki&gt;|&lt;/nowiki&gt;&lt;/code&gt; character in the template markup must be escaped with {{tlx|!}}. An alternative is to use explicit HTML {{tag|table|o}}, {{tag|tr|o}}, {{tag|th|o}}, and {{tag|td|o}} markup.&lt;noinclude&gt;
{{Documentation|content=This is transcluded documentation, which can be transcluded in the /doc pages of various templates like {{tlx|Block indent}} and {{tlx|Quote}}, e.g. under a "Technical issue with block templates" heading or the like.  Right now it takes no parameter other than {{para|1|{{var|foo}}}}, to change the &lt;code&gt;&lt;nowiki&gt;{{{1}}}&lt;/nowiki&gt;&lt;/code&gt; to something else, thus changing the display (and operation) to use something other than {{para|1}} in the shown template operations.

[[Category:Template documentation]]
}}
{{En-WP attribution notice|Template:Block bug documentation}}
&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Blockquote paragraphs</title>
    <ns>10</ns>
    <id>36</id>
    <revision>
      <id>932</id>
      <parentid>931</parentid>
      <timestamp>2019-01-30T06:27:48Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>46 revisions imported from [[:templatewiki:Template:Blockquote_paragraphs]]</comment>
      <origin>931</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1090" sha1="1guteoyoia8hd4267u66qrf5y9ptexk" xml:space="preserve">&lt;div style="float: right; padding: 0 1em;"&gt;{{navbar|Blockquote paragraphs|plain=y}}&lt;/div&gt;
The {{tag|blockquote|o}} element and any templates that use it do not honor newlines:
{{markup
|&lt;nowiki&gt;&lt;blockquote&gt;
Line 1
Line 2
Line 3
Line 4
&lt;/blockquote&gt;&lt;/nowiki&gt;
|&lt;blockquote&gt;
Line 1
Line 2
Line 3
Line 4
&lt;/blockquote&gt;
}}

The simplest workaround for this is to use the {{xtag|poem}} tag inside {{tag|blockquote|o}}, which will convert line breaks to {{tag|br|s}} tags:
{{markup
|&lt;nowiki&gt;&lt;blockquote&gt;&lt;poem&gt;
Line 1
Line 2
Line 3
Line 4
&lt;/poem&gt;&lt;/blockquote&gt;&lt;/nowiki&gt;
|&lt;blockquote&gt;&lt;poem&gt;
Line 1
Line 2
Line 3
Line 4
&lt;/poem&gt;&lt;/blockquote&gt;
}}&lt;noinclude&gt;

To markup actual paragraphs within block quotations, entire blank lines can be used between them, which will convert to {{tag|p}} tags:

{{markup
|&lt;nowiki&gt;&lt;blockquote&gt;
Paragraph 1

Paragraph 2

Paragraph 3
&lt;/blockquote&gt;&lt;/nowiki&gt;
|&lt;blockquote&gt;
Paragraph 1

Paragraph 2

Paragraph 3
&lt;/blockquote&gt;
}}&lt;noinclude&gt;

{{Documentation}}

&lt;!-- Categories go on the /doc subpage. --&gt;

{{En-WP attribution notice|Template:Blockquote paragraphs}}
&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:C</title>
    <ns>10</ns>
    <id>37</id>
    <revision>
      <id>962</id>
      <parentid>961</parentid>
      <timestamp>2019-01-30T06:27:48Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>29 revisions imported from [[:templatewiki:Template:C]]</comment>
      <origin>961</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="145" sha1="8fwd31rzip0ecub1er4o5vfl4tddkcu" xml:space="preserve">[[:Category:{{PAGENAME:{{{1}}}}}|{{{2|{{PAGENAME:{{{1}}}}}}}}]]&lt;noinclude&gt;
{{Documentation}}
{{En-WP attribution notice|Template:C}}
&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Code</title>
    <ns>10</ns>
    <id>38</id>
    <revision>
      <id>1009</id>
      <parentid>965</parentid>
      <timestamp>2019-01-30T06:27:49Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>46 revisions imported from [[:templatewiki:Template:Code]]</comment>
      <origin>965</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="217" sha1="jctvydjv4nfvg0vobw2v35axxi01snk" xml:space="preserve">{{#tag:syntaxhighlight|{{{code|{{{1}}}}}}|lang={{{lang|{{{2|text}}}}}}|class={{{class|}}}|id={{{id|}}}|style={{{style|}}}|inline=1}}&lt;noinclude&gt;
{{documentation}}
{{En-WP attribution notice|Template:Code}}
&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Colon</title>
    <ns>10</ns>
    <id>39</id>
    <revision>
      <id>1023</id>
      <parentid>1022</parentid>
      <timestamp>2019-01-30T06:27:50Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>13 revisions imported from [[:templatewiki:Template:Colon]]</comment>
      <origin>1022</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="88" sha1="67vzouvf2d51cbq1ydpfb9oqsxamv8a" xml:space="preserve">&amp;#58;&lt;noinclude&gt;{{Documentation}}{{En-WP attribution notice|Template:Colon}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Comma separated entries</title>
    <ns>10</ns>
    <id>25</id>
    <revision>
      <id>1034</id>
      <parentid>585</parentid>
      <timestamp>2019-01-30T06:27:50Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>10 revisions imported from [[:templatewiki:Template:Comma_separated_entries]]</comment>
      <origin>584</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="251" sha1="he0485vkfqs9y9yuz1x614fq7mve7ej" xml:space="preserve">{{&lt;includeonly&gt;safesubst:&lt;/includeonly&gt;#invoke:Separated entries|comma}}&lt;noinclude&gt;
{{documentation}}
&lt;!-- Categories go on the /doc subpage, and interwikis go on Wikidata. --&gt;
{{En-WP attribution notice|Template:Comma separated entries}}
&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Crossref</title>
    <ns>10</ns>
    <id>40</id>
    <redirect title="Template:Crossreference" />
    <revision>
      <id>1040</id>
      <parentid>1036</parentid>
      <timestamp>2019-01-30T06:27:50Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>5 revisions imported from [[:templatewiki:Template:Crossref]]</comment>
      <origin>1036</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="84" sha1="pq7z0nmw7a74xqvemqbunajs03rcg15" xml:space="preserve">#REDIRECT [[Template:Crossreference]]

{{Rcat shell|
{{R from template shortcut}}
}}</text>
    </revision>
  </page>
  <page>
    <title>Template:Crossreference</title>
    <ns>10</ns>
    <id>41</id>
    <revision>
      <id>1058</id>
      <parentid>1045</parentid>
      <timestamp>2019-01-30T06:27:50Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>17 revisions imported from [[:templatewiki:Template:Crossreference]]</comment>
      <origin>1045</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="380" sha1="9mnstdn7m9p8txvw3v0ydd8s4zuo4so" xml:space="preserve">{{Hatnote inline|1={{{1|{{{text|{{{content|&lt;noinclude&gt;sample content&lt;/noinclude&gt;}}}}}}}}}|extraclasses={{{class|{{{extraclasses|}}}}}}|selfref={{#if:{{{selfref|{{{printworthy|{{{unprintworthy|}}}}}}}}}||yes}}}}&lt;noinclude&gt;
{{documentation}}
&lt;!-- Categories go on the /doc subpage, and interwikis go on Wikidata. --&gt;
{{En-WP attribution notice|Template:Crossreference}}
&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:DMCA</title>
    <ns>10</ns>
    <id>42</id>
    <revision>
      <id>1064</id>
      <parentid>1063</parentid>
      <timestamp>2019-01-30T06:27:50Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>5 revisions imported from [[:templatewiki:Template:DMCA]]</comment>
      <origin>1063</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="240" sha1="bc2pwe6pfkwdztwoiyxy7v8qu6cq914" xml:space="preserve">{{Dated maintenance category
 |onlyarticles=yes
 |1={{{1|}}}
 |2={{{2|}}}
 |3={{{3|}}}
 |4={{{4|}}}
 |5={{{5|}}}
}}&lt;noinclude&gt;
{{documentation|Template:Dated maintenance category/doc}}
{{En-WP attribution notice|Template:DMCA}}
&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Dated maintenance category</title>
    <ns>10</ns>
    <id>43</id>
    <revision>
      <id>1089</id>
      <parentid>1067</parentid>
      <timestamp>2019-01-30T06:27:51Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>24 revisions imported from [[:templatewiki:Template:Dated_maintenance_category]]</comment>
      <origin>1067</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="725" sha1="edsa15tfh3txp9cmm33daccq13dmi24" xml:space="preserve">&lt;nowiki/&gt;&lt;!--This nowiki helps to prevent whitespace at the top of articles--&gt;{{#ifeq:{{FULLROOTPAGENAME}}|Wikipedia:Template messages|&lt;!--Do not categorize--&gt;|&lt;!--
--&gt;{{#ifexpr:{{#if:{{NAMESPACE}}|0|1}}+{{#ifeq:{{{onlyarticles|no}}}|yes|0|1}}
 |{{#if:{{{3|}}}
  |[[Category:{{{1}}} {{{2}}} {{{3}}}]]&lt;!--
--&gt;{{#ifexist:Category:{{{1}}} {{{2}}} {{{3}}}
    |&lt;!--
 --&gt;|[[Category:Articles with invalid date parameter in template]]&lt;!--
--&gt;}}
  |[[Category:{{#if:{{{5|}}}
               |{{{5}}}&lt;!--
            --&gt;|{{{1}}}&lt;!--
           --&gt;}}]]&lt;!--
--&gt;}}{{#if:{{{4|}}}
      |[[Category:{{{4}}}]]}}&lt;!--
  --&gt;}}&lt;!--
--&gt;}}&lt;noinclude&gt;
{{documentation}}
{{En-WP attribution notice|Template:Dated maintenance category}}
&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Documentation</title>
    <ns>10</ns>
    <id>44</id>
    <revision>
      <id>1311</id>
      <parentid>1310</parentid>
      <timestamp>2019-01-30T06:27:54Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>221 revisions imported from [[:templatewiki:Template:Documentation]]</comment>
      <origin>1310</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="182" sha1="o4ddn701tao1ufdnkxe1wdgz5b5ga84" xml:space="preserve">{{#invoke:documentation|main|_content={{ {{#invoke:documentation|contentTitle}}}}}}&lt;noinclude&gt;
&lt;!-- Categories go on the /doc subpage, and interwikis go on Wikidata. --&gt;
&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Documentation subpage</title>
    <ns>10</ns>
    <id>45</id>
    <revision>
      <id>1450</id>
      <parentid>1449</parentid>
      <timestamp>2019-01-30T06:27:57Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>138 revisions imported from [[:templatewiki:Template:Documentation_subpage]]</comment>
      <origin>1449</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1667" sha1="iwoex9r4jjje2jlwm8eygcyef0s6hzx" xml:space="preserve">&lt;includeonly&gt;&lt;!--
 --&gt;{{#ifeq:{{lc:{{SUBPAGENAME}}}} |{{{override|doc}}}
     | &lt;!--(this template has been transcluded on a /doc or /{{{override}}} page)--&gt;
&lt;/includeonly&gt;&lt;!--

      --&gt;{{#ifeq:{{{doc-notice|show}}} |show
          | {{Mbox
             | type = notice
             | style = margin-bottom:1.0em;
             | image = [[File:Edit-copy green.svg|40px|alt=|link=]]
             | text =
'''This is a [[Wikipedia:Template documentation|documentation]] [[Wikipedia:Subpages|subpage]] for {{{1|[[:{{SUBJECTSPACE}}:{{BASEPAGENAME}}]]}}}'''.&lt;br /&gt;It contains usage information, [[Wikipedia:Categorization|categories]] and other content that is not part of the original {{#if:{{{text2|}}} |{{{text2}}} |{{#if:{{{text1|}}} |{{{text1}}} |{{#ifeq:{{SUBJECTSPACE}} |{{ns:User}} |{{lc:{{SUBJECTSPACE}}}} template page |{{#if:{{SUBJECTSPACE}} |{{lc:{{SUBJECTSPACE}}}} page|article}}}}}}}}. 
            }}
         }}&lt;!--

      --&gt;{{DEFAULTSORT:{{{defaultsort|{{PAGENAME}}}}}}}&lt;!--

      --&gt;{{#if:{{{inhibit|}}} |&lt;!--(don't categorize)--&gt;
          |   &lt;includeonly&gt;&lt;!--
               --&gt;{{#ifexist:{{NAMESPACE}}:{{BASEPAGENAME}}
                   | [[Category:{{#switch:{{SUBJECTSPACE}} |Template=Template |Module=Module |User=User |#default=Wikipedia}} documentation pages]]
                   | [[Category:Documentation subpages without corresponding pages]]
                  }}&lt;!--
           --&gt;&lt;/includeonly&gt;
         }}&lt;!--

(completing initial #ifeq: at start of template:)
--&gt;&lt;includeonly&gt;
     | &lt;!--(this template has not been transcluded on a /doc or /{{{override}}} page)--&gt;
    }}&lt;!--
--&gt;&lt;/includeonly&gt;&lt;noinclude&gt;{{Documentation}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Dummy reference</title>
    <ns>10</ns>
    <id>46</id>
    <revision>
      <id>1469</id>
      <parentid>1453</parentid>
      <timestamp>2019-01-30T06:27:57Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>18 revisions imported from [[:templatewiki:Template:Dummy_reference]]</comment>
      <origin>1453</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="374" sha1="phcy0uwjemp0sw9kce2rsg282crqf75" xml:space="preserve">&lt;sup class="reference nowrap ltr" style="color:#002bb8;"&gt;[{{#ifeq:{{yes/no|{{{txtital|}}}}}|yes|&lt;span style="font-style:italic"&gt;}}{{#if:{{{txtcol|}}}|&lt;span style="color:{{{txtcol|}}}"&gt;}}{{{1|1}}}{{#if:{{{txtcol|}}}|&lt;/span&gt;}}{{#ifeq:{{yes/no|{{{txtital|}}}}}|yes|&lt;/span&gt;}}]&lt;/sup&gt;&lt;noinclude&gt;
{{documentation}}
{{En-WP attribution notice|Template:Dummy reference}}
&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Em</title>
    <ns>10</ns>
    <id>47</id>
    <revision>
      <id>1485</id>
      <parentid>1472</parentid>
      <timestamp>2019-01-30T06:27:58Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>15 revisions imported from [[:templatewiki:Template:Em]]</comment>
      <origin>1472</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="347" sha1="onleh13v35xm454w0o959whxv63zt2e" xml:space="preserve">&lt;em {{#if:{{{role|}}}|role="{{{role}}}"}} {{#if:{{{class|}}}|class="{{{class}}}"}} {{#if:{{{id|}}}|id="{{{id}}}"}} {{#if:{{{style|}}}|style="{{{style}}}"}} {{#if:{{{title|}}}|title="{{{title}}}"}}&gt;{{{1}}}&lt;/em&gt;&lt;noinclude&gt;
{{documentation}}
&lt;!-- Add categories to the /doc subpage, not here! --&gt;
{{En-WP attribution notice|Template:Em}}
&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:FULLROOTPAGENAME</title>
    <ns>10</ns>
    <id>48</id>
    <revision>
      <id>1495</id>
      <parentid>1489</parentid>
      <timestamp>2019-01-30T06:27:58Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>9 revisions imported from [[:templatewiki:Template:FULLROOTPAGENAME]]</comment>
      <origin>1489</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="474" sha1="bn7eb0srjj7r0ddp81qg3061zxs9z7z" xml:space="preserve">{{ {{{|safesubst:}}}#if: {{ {{{|safesubst:}}}Ns has subpages | {{ {{{|safesubst:}}}#if:{{{1|}}}|{{ {{{|safesubst:}}}NAMESPACE:{{{1}}}}}|{{ {{{|safesubst:}}}NAMESPACE}}}} }} 
  | {{ {{{|safesubst:}}}#titleparts:{{ {{{|safesubst:}}}#if:{{{1|}}}|{{{1}}}|{{ {{{|safesubst:}}}FULLPAGENAME}}}}|1}}
  | {{ {{{|safesubst:}}}#if:{{{1|}}}|{{{1}}}|{{ {{{|safesubst:}}}FULLPAGENAME}}}}
}}&lt;noinclude&gt;

{{documentation}}
{{En-WP attribution notice|Template:FULLROOTPAGENAME}}
&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Fake ref</title>
    <ns>10</ns>
    <id>49</id>
    <redirect title="Template:Dummy reference" />
    <revision>
      <id>1500</id>
      <parentid>1499</parentid>
      <timestamp>2019-01-30T06:27:58Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>4 revisions imported from [[:templatewiki:Template:Fake_ref]]</comment>
      <origin>1499</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="38" sha1="nejzklbot5w5zbwkhq4xp8rugmo8bte" xml:space="preserve">#REDIRECT [[Template:Dummy reference]]</text>
    </revision>
  </page>
  <page>
    <title>Template:For</title>
    <ns>10</ns>
    <id>50</id>
    <revision>
      <id>1585</id>
      <parentid>1584</parentid>
      <timestamp>2019-01-30T06:28:00Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>84 revisions imported from [[:templatewiki:Template:For]]</comment>
      <origin>1584</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="88" sha1="7es2p1mk6qse8zlwn5qqya2ysrq1rcr" xml:space="preserve">&lt;includeonly&gt;{{#invoke:For|For}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{Documentation}}
&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:For loop</title>
    <ns>10</ns>
    <id>51</id>
    <revision>
      <id>1588</id>
      <parentid>1587</parentid>
      <timestamp>2019-01-30T06:28:00Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>2 revisions imported from [[:templatewiki:Template:For_loop]]</comment>
      <origin>1587</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="179" sha1="26pm0milru0ru69zbzxe1y37xwy9bg7" xml:space="preserve">{{&lt;includeonly&gt;safesubst:&lt;/includeonly&gt;#invoke:For loop|main}}&lt;noinclude&gt;
{{documentation}}
&lt;!-- Categories go on the /doc subpage, and interwikis go on Wikidata. --&gt;
&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Format item</title>
    <ns>10</ns>
    <id>52</id>
    <revision>
      <id>1591</id>
      <parentid>1590</parentid>
      <timestamp>2019-01-30T06:28:00Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>2 revisions imported from [[:templatewiki:Template:Format_item]]</comment>
      <origin>1590</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="82" sha1="1megg2u367ueqv830p62lg0r5u64yqk" xml:space="preserve">&lt;includeonly&gt;{{#invoke:Item|format}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{doc}}
&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Hatnote inline</title>
    <ns>10</ns>
    <id>53</id>
    <revision>
      <id>1616</id>
      <parentid>1596</parentid>
      <timestamp>2019-01-30T06:28:01Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>24 revisions imported from [[:templatewiki:Template:Hatnote_inline]]</comment>
      <origin>1596</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="366" sha1="iyoawqyq6gi9m6yv33ab83ec5psrjks" xml:space="preserve">{{Hatnote inline/invoke|1={{{1|{{{text|{{{content}}}}}}}}}|extraclasses={{{class|{{{extraclasses|}}}}}}|selfref={{#if:{{{printworthy|{{{selfref|}}}}}}||yes}}|category={{{category|}}}|inline=true}}&lt;noinclude&gt;
{{documentation}}
&lt;!-- Categories go on the /doc subpage, and interwikis go on Wikidata. --&gt;
{{En-WP attribution notice|Template:Hatnote inline}}
&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Hatnote inline/invoke</title>
    <ns>10</ns>
    <id>54</id>
    <revision>
      <id>1632</id>
      <parentid>1621</parentid>
      <timestamp>2019-01-30T06:28:01Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>15 revisions imported from [[:templatewiki:Template:Hatnote_inline/invoke]]</comment>
      <origin>1621</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="231" sha1="8bro5j1dltmmzlry876knihsr0vu7a2" xml:space="preserve">&lt;includeonly&gt;{{#invoke:Hatnote inline|hatnote}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{Documentation|content=This is an includeonly part of [[Template:Hatnote inline]].}}
{{En-WP attribution notice|Template:Hatnote inline/invoke}}
&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:If empty</title>
    <ns>10</ns>
    <id>55</id>
    <revision>
      <id>1647</id>
      <parentid>1646</parentid>
      <timestamp>2019-01-30T06:28:02Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>14 revisions imported from [[:templatewiki:Template:If_empty]]</comment>
      <origin>1646</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="148" sha1="kp9aj3kg007t49n6nodphksk7x0f5z4" xml:space="preserve">{{&lt;includeonly&gt;safesubst:&lt;/includeonly&gt;#invoke:If empty|main}}&lt;noinclude&gt;{{Documentation}}{{En-WP attribution notice|Template:If empty}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:In5</title>
    <ns>10</ns>
    <id>56</id>
    <revision>
      <id>1668</id>
      <parentid>1650</parentid>
      <timestamp>2019-01-30T06:28:03Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>20 revisions imported from [[:templatewiki:Template:In5]]</comment>
      <origin>1650</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="211" sha1="aspxne1a4ram2bbuv64zngdzfrhb1rf" xml:space="preserve">&lt;includeonly&gt;{{{{{|safesubst:}}}#invoke:in5|in5|1={{{1|}}}}}&lt;/includeonly&gt;&lt;noinclude&gt;

{{Documentation}}

&lt;!--[[Category:Smart formatting templates|In5]]--&gt;
{{En-WP attribution notice|Template:In5}}
&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Item</title>
    <ns>10</ns>
    <id>57</id>
    <revision>
      <id>1671</id>
      <parentid>1670</parentid>
      <timestamp>2019-01-30T06:28:03Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>2 revisions imported from [[:templatewiki:Template:Item]]</comment>
      <origin>1670</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="80" sha1="4yxtdqre2hvr0k40m6udmgyrmmjsq51" xml:space="preserve">&lt;includeonly&gt;{{#invoke:Item|pack}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{doc}}
&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Lorem ipsum</title>
    <ns>10</ns>
    <id>58</id>
    <revision>
      <id>1713</id>
      <parentid>1674</parentid>
      <timestamp>2019-01-30T06:28:03Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>41 revisions imported from [[:templatewiki:Template:Lorem_ipsum]]</comment>
      <origin>1674</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="8874" sha1="o8y4hwavmqf74d5orkjubjom3l5gf9c" xml:space="preserve">{{{{{|safesubst:}}}#ifexpr:{{{1|1}}}&gt;0|{{{2|}}}{{{{{|safesubst:}}}#ifeq:{{{link|{{{4}}}}}}|yes|[[Lorem ipsum]]|Lorem ipsum}} dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.{{{3|}}}{{{{{|safesubst:}}}#ifexpr:{{{1|1}}}&gt;1|{{{{{|safesubst:}}}#ifeq:x{{{3|}}}x|x x||{{{{{|safesubst:}}}#if:{{{2|}}}||&lt;nowiki&gt;&lt;/nowiki&gt;}}}}

{{{2|}}}Curabitur pretium tincidunt lacus. Nulla gravida orci a odio. Nullam varius, turpis et commodo pharetra, est eros bibendum elit, nec luctus magna felis sollicitudin mauris. Integer in mauris eu nibh euismod gravida. Duis ac tellus et risus vulputate vehicula. Donec lobortis risus a elit. Etiam tempor. Ut ullamcorper, ligula eu tempor congue, eros est euismod turpis, id tincidunt sapien risus a quam. Maecenas fermentum consequat mi. Donec fermentum. Pellentesque malesuada nulla a mi. Duis sapien sem, aliquet nec, commodo eget, consequat quis, neque. Aliquam faucibus, elit ut dictum aliquet, felis nisl adipiscing sapien, sed malesuada diam lacus eget erat. Cras mollis scelerisque nunc. Nullam arcu. Aliquam consequat. Curabitur augue lorem, dapibus quis, laoreet et, pretium ac, nisi. Aenean magna nisl, mollis quis, molestie eu, feugiat in, orci. In hac habitasse platea dictumst.{{{3|}}}{{{{{|safesubst:}}}#ifexpr:{{{1|1}}}&gt;2|{{{{{|safesubst:}}}#ifeq:x{{{3|}}}x|x x||{{{{{|safesubst:}}}#if:{{{2|}}}||&lt;nowiki&gt;&lt;/nowiki&gt;}}}}

{{{2|}}}Fusce convallis, mauris imperdiet gravida bibendum, nisl turpis suscipit mauris, sed placerat ipsum urna sed risus. In convallis tellus a mauris. Curabitur non elit ut libero tristique sodales. Mauris a lacus. Donec mattis semper leo. In hac habitasse platea dictumst. Vivamus facilisis diam at odio. Mauris dictum, nisi eget consequat elementum, lacus ligula molestie metus, non feugiat orci magna ac sem. Donec turpis. Donec vitae metus. Morbi tristique neque eu mauris. Quisque gravida ipsum non sapien. Proin turpis lacus, scelerisque vitae, elementum at, lobortis ac, quam. Aliquam dictum eleifend risus. In hac habitasse platea dictumst. Etiam sit amet diam. Suspendisse odio. Suspendisse nunc. In semper bibendum libero.{{{3|}}}{{{{{|safesubst:}}}#ifexpr:{{{1|1}}}&gt;3|{{{{{|safesubst:}}}#ifeq:x{{{3|}}}x|x x||{{{{{|safesubst:}}}#if:{{{2|}}}||&lt;nowiki&gt;&lt;/nowiki&gt;}}}}

{{{2|}}}Proin nonummy, lacus eget pulvinar lacinia, pede felis dignissim leo, vitae tristique magna lacus sit amet eros. Nullam ornare. Praesent odio ligula, dapibus sed, tincidunt eget, dictum ac, nibh. Nam quis lacus. Nunc eleifend molestie velit. Morbi lobortis quam eu velit. Donec euismod vestibulum massa. Donec non lectus. Aliquam commodo lacus sit amet nulla. Cras dignissim elit et augue. Nullam non diam. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. In hac habitasse platea dictumst. Aenean vestibulum. Sed lobortis elit quis lectus. Nunc sed lacus at augue bibendum dapibus.{{{3|}}}{{{{{|safesubst:}}}#ifexpr:{{{1|1}}}&gt;4|{{{{{|safesubst:}}}#ifeq:x{{{3|}}}x|x x||{{{{{|safesubst:}}}#if:{{{2|}}}||&lt;nowiki&gt;&lt;/nowiki&gt;}}}}

{{{2|}}}Aliquam vehicula sem ut pede. Cras purus lectus, egestas eu, vehicula at, imperdiet sed, nibh. Morbi consectetuer luctus felis. Donec vitae nisi. Aliquam tincidunt feugiat elit. Duis sed elit ut turpis ullamcorper feugiat. Praesent pretium, mauris sed fermentum hendrerit, nulla lorem iaculis magna, pulvinar scelerisque urna tellus a justo. Suspendisse pulvinar massa in metus. Duis quis quam. Proin justo. Curabitur ac sapien. Nam erat. Praesent ut quam.{{{3|}}}{{{{{|safesubst:}}}#ifexpr:{{{1|1}}}&gt;5|{{{{{|safesubst:}}}#ifeq:x{{{3|}}}x|x x||{{{{{|safesubst:}}}#if:{{{2|}}}||&lt;nowiki&gt;&lt;/nowiki&gt;}}}}

{{{2|}}}Vivamus commodo, augue et laoreet euismod, sem sapien tempor dolor, ac egestas sem ligula quis lacus. Donec vestibulum tortor ac lacus. Sed posuere vestibulum nisl. Curabitur eleifend fermentum justo. Nullam imperdiet. Integer sit amet mauris imperdiet risus sollicitudin rutrum. Ut vitae turpis. Nulla facilisi. Quisque tortor velit, scelerisque et, facilisis vel, tempor sed, urna. Vivamus nulla elit, vestibulum eget, semper et, scelerisque eget, lacus. Pellentesque viverra purus. Quisque elit. Donec ut dolor.{{{3|}}}{{{{{|safesubst:}}}#ifexpr:{{{1|1}}}&gt;6|{{{{{|safesubst:}}}#ifeq:x{{{3|}}}x|x x||{{{{{|safesubst:}}}#if:{{{2|}}}||&lt;nowiki&gt;&lt;/nowiki&gt;}}}}

{{{2|}}}Duis volutpat elit et erat. In at nulla at nisl condimentum aliquet. Quisque elementum pharetra lacus. Nunc gravida arcu eget nunc. Nulla iaculis egestas magna. Aliquam erat volutpat. Sed pellentesque orci. Etiam lacus lorem, iaculis sit amet, pharetra quis, imperdiet sit amet, lectus. Integer quis elit ac mi aliquam pretium. Nullam mauris orci, porttitor eget, sollicitudin non, vulputate id, risus. Donec varius enim nec sem. Nam aliquam lacinia enim. Quisque eget lorem eu purus dignissim ultricies. Fusce porttitor hendrerit ante. Mauris urna diam, cursus id, mattis eget, tempus sit amet, risus. Curabitur eu felis. Sed eu mi. Nullam lectus mauris, luctus a, mattis ac, tempus non, leo. Cras mi nulla, rhoncus id, laoreet ut, ultricies id, odio.{{{3|}}}{{{{{|safesubst:}}}#ifexpr:{{{1|1}}}&gt;7|{{{{{|safesubst:}}}#ifeq:x{{{3|}}}x|x x||{{{{{|safesubst:}}}#if:{{{2|}}}||&lt;nowiki&gt;&lt;/nowiki&gt;}}}}

{{{2|}}}Donec imperdiet. Vestibulum auctor tortor at orci. Integer semper, nisi eget suscipit eleifend, erat nisl hendrerit justo, eget vestibulum lorem justo ac leo. Integer sem velit, pharetra in, fringilla eu, fermentum id, felis. Vestibulum sed felis. In elit. Praesent et pede vel ante dapibus condimentum. Donec magna. Quisque id risus. Mauris vulputate pellentesque leo. Duis vulputate, ligula at venenatis tincidunt, orci nunc interdum leo, ac egestas elit sem ut lacus. Etiam non diam quis arcu egestas commodo. Curabitur nec massa ac massa gravida condimentum. Aenean id libero. Pellentesque vitae tellus. Fusce lectus est, accumsan ac, bibendum sed, porta eget, augue. Etiam faucibus. Quisque tempus purus eu ante.{{{3|}}}{{{{{|safesubst:}}}#ifexpr:{{{1|1}}}&gt;8|{{{{{|safesubst:}}}#ifeq:x{{{3|}}}x|x x||{{{{{|safesubst:}}}#if:{{{2|}}}||&lt;nowiki&gt;&lt;/nowiki&gt;}}}}

{{{2|}}}Vestibulum sapien nisl, ornare auctor, consectetuer quis, posuere tristique, odio. Fusce ultrices ullamcorper odio. Ut augue nulla, interdum at, adipiscing non, tristique eget, neque. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Ut pede est, condimentum id, scelerisque ac, malesuada non, quam. Proin eu ligula ac sapien suscipit blandit. Suspendisse euismod. Ut accumsan, neque id gravida luctus, arcu pede sodales felis, vel blandit massa arcu eget ligula. Aenean sed turpis. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Donec sem eros, ornare ut, commodo eu, tempor nec, risus. Donec laoreet dapibus ligula. Praesent orci leo, bibendum nec, ornare et, nonummy in, elit. Donec interdum feugiat leo. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Pellentesque feugiat ullamcorper ipsum. Donec convallis tincidunt urna.{{{3|}}}{{{{{|safesubst:}}}#ifexpr:{{{1|1}}}&gt;9|{{{{{|safesubst:}}}#ifeq:x{{{3|}}}x|x x||{{{{{|safesubst:}}}#if:{{{2|}}}||&lt;nowiki&gt;&lt;/nowiki&gt;}}}}

{{{2|}}}Suspendisse et orci et arcu porttitor pellentesque. Sed lacus nunc, fermentum vel, vehicula in, imperdiet eget, urna. Nam consectetuer euismod nunc. Nulla dignissim posuere nulla. Integer iaculis lacinia massa. Nullam sapien augue, condimentum vel, venenatis id, rhoncus pellentesque, sapien. Donec sed ipsum ultrices turpis consectetuer imperdiet. Duis et ipsum ac nisl laoreet commodo. Mauris eu est. Suspendisse id turpis quis orci euismod consequat. Donec tellus mi, luctus sit amet, ultrices a, convallis eu, lorem. Proin faucibus convallis elit. Maecenas rhoncus arcu at arcu. Proin libero. Proin adipiscing. In quis lorem vitae elit consectetuer pretium. Nullam ligula urna, adipiscing nec, iaculis ut, elementum non, turpis. Fusce pulvinar.{{{3|}}}}}}}}}}}}}}}}}}}}}{{{{{|safesubst:}}}#ifexpr:{{{1|1}}}&gt;10|{{{{{|safesubst:}}}#ifeq:x{{{3|}}}x|x x||{{{{{|safesubst:}}}#if:{{{2|}}}||&lt;nowiki&gt;&lt;/nowiki&gt;}}}}

{{{{{|safesubst:}}}Lorem ipsum/more|{{{{{|safesubst:}}}#expr:{{{1|1}}}-10}}|{{{2|}}}|{{{3|}}}}}}}{{{{{|safesubst:}}}#ifeq:{{{cat|}}}|no||{{Template:Main other|[[Category:Wikipedia articles containing placeholders]]}}}}}}&lt;noinclude&gt;
{{Documentation}}
&lt;!-- PLEASE ADD CATEGORIES TO THE /doc SUBPAGE, AND INTERWIKIS TO WIKIDATA, THANKS --&gt;
{{En-WP attribution notice|Template:Lorem ipsum}}
&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:MONTHNAME</title>
    <ns>10</ns>
    <id>59</id>
    <revision>
      <id>1771</id>
      <parentid>1716</parentid>
      <timestamp>2019-01-30T06:28:04Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>57 revisions imported from [[:templatewiki:Template:MONTHNAME]]</comment>
      <origin>1716</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="435" sha1="duo6o4n2t7oy9rrueot1o0slzx8n4jb" xml:space="preserve">&lt;includeonly&gt;{{#if:{{{1|}}}|{{#switch:{{MONTHNUMBER|{{{1}}}}}|1=January|2=February|3=March|4=April|5=May|6=June|7=July|8=August|9=September|10=October|11=November|12=December|Incorrect required parameter 1=''month''!}}|Missing required parameter 1=''month''!}}&lt;/includeonly&gt;&lt;noinclude&gt;

{{Documentation}}
&lt;!-- Add categories and interwikis to the /doc subpage, not here! --&gt;
{{En-WP attribution notice|Template:MONTHNAME}}
&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:MONTHNUMBER</title>
    <ns>10</ns>
    <id>60</id>
    <revision>
      <id>1795</id>
      <parentid>1774</parentid>
      <timestamp>2019-01-30T06:28:05Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>23 revisions imported from [[:templatewiki:Template:MONTHNUMBER]]</comment>
      <origin>1774</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="705" sha1="9gk2yrxaulabt3w1kcplv0ct8k1viyb" xml:space="preserve">&lt;includeonly&gt;{{#if:{{{1|}}}
 |{{#switch:{{lc:{{{1}}}}}
  |january|jan=1
  |february|feb=2
  |march|mar=3
  |apr|april=4
  |may=5
  |june|jun=6
  |july|jul=7
  |august|aug=8
  |september|sep|sept=9
  |october|oct=10
  |november|nov=11
  |december|dec=12
  |{{#ifexpr:{{{1}}}&lt;0
   |{{#ifexpr:(({{{1}}})round 0)!=({{{1}}})
    |{{#expr:12-(((0.5-({{{1}}}))round 0)mod 12)}}
    |{{#expr:12-(((11.5-({{{1}}}))round 0)mod 12)}}
   }}
  |{{#expr:(((10.5+{{{1}}})round 0)mod 12)+1}}
  }}
 }}
 |Missing required parameter 1=''month''!
}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{Documentation}}
&lt;!-- Add categories and interwikis to the /doc subpage, not here! --&gt;
{{En-WP attribution notice|Template:MONTHNUMBER}}
&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Main other</title>
    <ns>10</ns>
    <id>61</id>
    <revision>
      <id>1808</id>
      <parentid>1807</parentid>
      <timestamp>2019-01-30T06:28:05Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>12 revisions imported from [[:templatewiki:Template:Main_other]]</comment>
      <origin>1807</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="409" sha1="ngt28vb1n5t4bh1su57btnqyofkd1d5" xml:space="preserve">{{#switch:
  &lt;!--If no or empty "demospace" parameter then detect namespace--&gt;
  {{#if:{{{demospace|}}} 
  | {{lc: {{{demospace}}} }}    &lt;!--Use lower case "demospace"--&gt;
  | {{#ifeq:{{NAMESPACE}}|{{ns:0}}
    | main
    | other
    }} 
  }}
| main     = {{{1|}}}
| other
| #default = {{{2|}}}
}}&lt;noinclude&gt;

{{documentation}}
&lt;!-- Add categories and interwikis to the /doc subpage, not here! --&gt;
&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Markup</title>
    <ns>10</ns>
    <id>62</id>
    <revision>
      <id>1861</id>
      <parentid>1860</parentid>
      <timestamp>2019-01-30T06:28:06Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>52 revisions imported from [[:templatewiki:Template:Markup]]</comment>
      <origin>1860</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1700" sha1="f9p8alwm9o5u83s0f7p3yfjifzdlb5p" xml:space="preserve">&lt;includeonly&gt;{| style="table-layout:fixed; width:{{{width|100%}}}; margin-top:0;margin-left:{{{margin-left|{{{margin|0}}}}}}; border-width:medium; padding:0; {{{style|}}}"
{{#if:{{{title|}}} |{{!}}+ '''{{{title}}}'''}}
{{#if:{{{noheaders|}}}{{{notitle|}}} |
 |!   scope="col" style="width:50%;{{{colheaderstyle|}}}{{{col1headerstyle|}}}"{{!}} {{{col1|{{{t1|Markup}}}}}} {{!!}}&lt;!--
   --&gt;scope="col" style="width:50%;{{{colheaderstyle|}}}{{{col2headerstyle|}}}"{{!}} {{{col2|{{{t2|Renders as}}}}}}
}}&lt;!--
--&gt;{{for loop||call=format item|pc1n=template|pc1v=Markup/row|pc2n=c1style|pc2v={{{col1style|{{{codestyle|{{{markupstyle|}}}}}}}}}|pc3n=c2style|pc3v={{{col2style|{{{outputstyle|}}}}}}|pv=item|{{item|c1={{{1|}}}|c2={{{2|}}}}}|{{item|c1={{{3|}}}|c2={{{4|}}}}}|{{item|c1={{{5|}}}|c2={{{6|}}}}}|{{item|c1={{{7|}}}|c2={{{8|}}}}}|{{item|c1={{{9|}}}|c2={{{10|}}}}}|{{item|c1={{{11|}}}|c2={{{12|}}}}}|{{item|c1={{{13|}}}|c2={{{14|}}}}}|{{item|c1={{{15|}}}|c2={{{16|}}}}}|{{item|c1={{{17|}}}|c2={{{18|}}}}}|{{item|c1={{{19|}}}|c2={{{20|}}}}}|{{item|c1={{{21|}}}|c2={{{22|}}}}}|{{item|c1={{{23|}}}|c2={{{24|}}}}}|{{item|c1={{{25|}}}|c2={{{26|}}}}}|{{item|c1={{{27|}}}|c2={{{28|}}}}}|{{item|c1={{{29|}}}|c2={{{30|}}}}}|{{item|c1={{{31|}}}|c2={{{32|}}}}}|{{item|c1={{{33|}}}|c2={{{34|}}}}}|{{item|c1={{{35|}}}|c2={{{36|}}}}}|{{item|c1={{{37|}}}|c2={{{38|}}}}}|{{item|c1={{{39|}}}|c2={{{40|}}}}}}}
|-
|style="width:50%; border-width:1px;border-style:solid none none none;border-color:#ddd; padding:5px; vertical-align:top;"| 
|style="width:50%; border-width:1px;border-style:solid none none none;border-color:#ddd; padding:5px; vertical-align:top;"| 
|}&lt;/includeonly&gt;&lt;noinclude&gt;
{{Documentation}}
&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Markup/row</title>
    <ns>10</ns>
    <id>63</id>
    <revision>
      <id>1912</id>
      <parentid>1911</parentid>
      <timestamp>2019-01-30T06:28:08Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>50 revisions imported from [[:templatewiki:Template:Markup/row]]</comment>
      <origin>1911</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1005" sha1="90w6t2w328xd4dlpvfogqogznj7vqyt" xml:space="preserve">&lt;noinclude&gt;{| style="width:90%;border-width:medium;"&lt;/noinclude&gt;{{#if:{{{c1|value}}}|&amp;#32;
{{!-}}
{{!}}style{{=}}"width:50%; background:#f9f9f9; border-width:1px;border-style:solid none none solid;border-color:#ddd; padding:9px 5px 5px; vertical-align:top;"{{!}} &lt;!--
 --&gt;{{#tag:pre |{{{c1|[markup]}}}|style="margin:0;border:none;padding:0; word-wrap:break-word; white-space:-moz-pre-wrap;white-space:-o-pre-wrap;white-space:-pre-wrap;white-space:pre-wrap; {{{c1style|}}}"}}
{{!}}style{{=}}"width:50%; background:#f9f9f9; border-width:1px;border-style:solid solid none solid;border-color:#ddd; padding:5px; vertical-align:top;"{{!}} &lt;!--
 --&gt;&lt;div style="{{{c2style|}}}"&gt;
{{{c2|[''rendering'']}}}
&lt;/div&gt;
}}&lt;!--

--&gt;&lt;noinclude&gt;
|-
|style="width:50%;border-width:1px;border-style:solid none none none;border-color:#ddd; padding:5px; vertical-align:text-top;"| 
|style="width:50%; border-width:1px;border-style:solid none none none;border-color:#ddd; padding:5px; vertical-align:text-top;"| 
|-
|}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Markupv</title>
    <ns>10</ns>
    <id>64</id>
    <revision>
      <id>1925</id>
      <parentid>1924</parentid>
      <timestamp>2019-01-30T06:28:08Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>12 revisions imported from [[:templatewiki:Template:Markupv]]</comment>
      <origin>1924</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1079" sha1="jyoz59e9atyjyzj3yjmyqd10ic0sa1n" xml:space="preserve">&lt;includeonly&gt;{| style="table-layout: fixed; {{{width|width: 90%}}}; border-width: medium; margin-left: {{{margin|0em}}};{{{style|}}}"
{{#if: {{{title|{{{t|}}}}}} | {{!}}+ '''{{{title|{{{t|}}}}}}'''}}
|-
| style="width:10%; border-width: 1px; padding: 5px; border-style: solid solid none solid; border-color: #ddd; vertical-align:text-top;" | Markup
| style="border-width: 1px; padding: 5px; border-style: solid solid none none; border-color: #ddd; vertical-align:text-top;" | {{#tag:pre|{{{markup|{{{m|Markup}}}}}}|style="border: none; margin:0; padding: 0; word-wrap: break-word; white-space: -moz-pre-wrap; white-space: -o-pre-wrap; white-space: -pre-wrap; white-space: pre-wrap"}}
|-
| style="width:10%; border-width: 1px; padding: 5px; border-style: solid; border-color: #ddd; vertical-align:text-top;" | Renders as
| style="border-width: 1px; padding: 5px; border-style: solid solid solid none; border-color: #ddd; vertical-align:text-top;" | {{{renders|{{{r|Renders}}}}}}
|}&lt;/includeonly&gt;&lt;noinclude&gt;{{documentation}}{{En-WP attribution notice|Template:Markupv}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Mbox</title>
    <ns>10</ns>
    <id>65</id>
    <revision>
      <id>1960</id>
      <parentid>1959</parentid>
      <timestamp>2019-01-30T06:28:09Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>34 revisions imported from [[:templatewiki:Template:Mbox]]</comment>
      <origin>1959</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="145" sha1="mpflpb6s8l8gaoxaeypyuqyu2w7vc7i" xml:space="preserve">{{#invoke:Message box|mbox}}&lt;noinclude&gt;
{{documentation}}
&lt;!-- Categories go on the /doc subpage, and interwikis go on Wikidata. --&gt;
&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Navbar</title>
    <ns>10</ns>
    <id>66</id>
    <revision>
      <id>2208</id>
      <parentid>1965</parentid>
      <timestamp>2019-01-30T06:28:13Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>247 revisions imported from [[:templatewiki:Template:Navbar]]</comment>
      <origin>1965</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="139" sha1="bcvthuriwg6f1v583duoghjlyw7bzxv" xml:space="preserve">&lt;includeonly&gt;{{#invoke:Navbar|navbar}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
{{En-WP attribution notice|Template:Navbar}}
&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Navbox</title>
    <ns>10</ns>
    <id>67</id>
    <revision>
      <id>2297</id>
      <parentid>2213</parentid>
      <timestamp>2019-01-30T06:28:15Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>88 revisions imported from [[:templatewiki:Template:Navbox]]</comment>
      <origin>2213</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="139" sha1="1gnmiz72pt98kp3hervoceeu04thzso" xml:space="preserve">&lt;includeonly&gt;{{#invoke:Navbox|navbox}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{Documentation}}
{{En-WP attribution notice|Template:Navbox}}
&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Ns has subpages</title>
    <ns>10</ns>
    <id>68</id>
    <revision>
      <id>2315</id>
      <parentid>2301</parentid>
      <timestamp>2019-01-30T06:28:15Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>17 revisions imported from [[:templatewiki:Template:Ns_has_subpages]]</comment>
      <origin>2301</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="239" sha1="mvb9jefcr9ez4qi90cpy4zzdj6jewra" xml:space="preserve">{{&lt;includeonly&gt;safesubst:&lt;/includeonly&gt;#invoke:Ns has subpages|main}}&lt;noinclude&gt;
{{documentation}}
&lt;!-- Categories go on the /doc subpage and interwikis go on Wikidata. --&gt;
{{En-WP attribution notice|Template:Ns has subpages}}
&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Para</title>
    <ns>10</ns>
    <id>69</id>
    <revision>
      <id>2340</id>
      <parentid>2339</parentid>
      <timestamp>2019-01-30T06:28:16Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>24 revisions imported from [[:templatewiki:Template:Para]]</comment>
      <origin>2339</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="313" sha1="fzhirwlsi2n3ak3qun5tviym3yisuda" xml:space="preserve">&lt;code class="nowrap" {{SAFESUBST:&lt;noinclude /&gt;#if:{{{plain|}}}|style="border:none;background-color:inherit;color:inherit;"}}&gt;&amp;#124;{{SAFESUBST:&lt;noinclude /&gt;#if:{{{1|}}}|{{{1}}}&amp;#61;}}{{{2|}}}&lt;/code&gt;&lt;noinclude&gt;
{{Documentation}}
&lt;!--Categories and interwikis go near the bottom of the /doc subpage.--&gt;
&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Quotation templates</title>
    <ns>10</ns>
    <id>70</id>
    <revision>
      <id>2412</id>
      <parentid>2411</parentid>
      <timestamp>2019-01-30T06:28:20Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>71 revisions imported from [[:templatewiki:Template:Quotation_templates]]</comment>
      <origin>2411</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2492" sha1="15kze4pqibam7aqglxb2zflv654t04u" xml:space="preserve">{{Navbox
| name = Quotation templates
| state = {{{state|{{{1|}}}}}}
| title = {{c|Quotation templates}}
| liststyle = font-size:110%;
| tracking = no &lt;!-- keep the documented templates out of the hlist tracking category --&gt;

| list1 =
  {{Aligned table
   |class=sortable |style=margin:0 auto 0.4em;line-height:1.35em;text-align:left;
   |colstyle=&lt;!--vertical-align:middle;--&gt;padding-right:1.0em;
   |row1style=line-height:1.6em;font-weight:bold;border-bottom:1px solid #aaa;
   | '''Template&amp;nbsp;'''     | '''Use{{\}}description&amp;nbsp;'''
   | ↓ ''Block quotations''   | ''General purpose''
   | {{tlb|Quote}}      | Our standard block quotation template: unbordered page-wide quotation with optional smaller-sized attribution
   | {{tlb|Poem}} | {{tl|Quote}} variant for use with poems, song lyrics, and other things that would otherwise require the use of {{tag|poem}} tags or frequent formatting elements (such as {{tag|br|o}}) - requires substitution
   | {{tlb|Poemquote}} | {{tl|Quote}} variant for use with poems, song lyrics, and other things that would otherwise require the use of {{tag|poem}} tags or frequent formatting elements (such as {{tag|br|o}}) - does not require substitution
   | {{tlb|Verse translation}} | Displays ''original language verse'' (defaults to italics) and translated verse (roman) side-by-side
   | {{tlb|Gbq}}        | {{tl|Quote}} variant for use inside [[Wikipedia:Manual of Style/Glossaries|glossaries]]
   | {{tlb|Cquote}} | Page-wide quote, between large quotation marks
   | {{tlb|Rquote}} | Quote between large quotation marks in a reduced [[Cascading Style Sheets#Float and clear|float]]ing area
   | {{tlb|Quote frame}} | Page-wide bordered quote
   | {{tlb|Quote box}}  | Quote floated in a reduced bordered box
   | {{tlb|Tweet}}  | For quoting directly from tweets. Automatically generates {{tlx|Cite tweet}} citation, or a custom reference can be provided.
   | &amp;nbsp;|&amp;nbsp;
   | ↓ ''Talk page quoting''  | ''Not for use in articles at all''
   | {{tlb|Talk quote inline}}, {{tlb|Talk quotation}}, {{tlb|tq}}, or {{tlb|tqi}}   | Inline quotation for use on talk pages
   | {{tlb|Talk quote block}}, {{tlb|Talkquote}}, {{tlb|talk quote}}, or {{tlb|tq2}}  | Block-style quotation for use on talk pages
   | &amp;nbsp;|&amp;nbsp;
   | ↓ ''Alternative''  | ''For indenting non-quotations''
   | {{tlb|Block indent}}     | To indent an entire block of content (uses {{tag|div|o}} and CSS margins)
   }}
}}&lt;noinclude&gt;{{Documentation}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Quote</title>
    <ns>10</ns>
    <id>24</id>
    <revision>
      <id>695</id>
      <parentid>582</parentid>
      <timestamp>2019-01-30T06:27:40Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>109 revisions imported from [[:templatewiki:Template:Quote]]</comment>
      <origin>581</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1201" sha1="s8dwj2x5obwnzhkskmviq1h3sww7hto" xml:space="preserve">&lt;blockquote class="templatequote" {{#if:{{{style|}}}|style="{{{style}}}"}}&gt;{{{text|{{{content|{{{quotetext|{{{quote|{{{1|&lt;includeonly&gt;{{error|Error: No text given for quotation (or equals sign used in the actual argument to an unnamed parameter)}}[[Category:Pages incorrectly using the quote template]]&lt;/includeonly&gt;&lt;noinclude&gt;{{lorem ipsum}}&lt;/noinclude&gt;}}}}}}}}}}}}}}}{{#if:{{{sign|}}}{{{cite|}}}{{{author|}}}{{{by|}}}{{{personquoted|}}}{{{source|}}}{{{ts|}}}{{{title|}}}{{{publication|}}}{{{quotesource|}}}{{{2|}}}{{{3|}}}{{{4|}}}{{{char|}}}{{{character|}}}|{{#if:{{{multiline|}}}|&lt;nowiki /&gt;}}
&lt;div class="templatequotecite"&gt;—&amp;thinsp;&lt;cite&gt;{{#if:{{{char|{{{character|}}}}}}|{{{char|{{{character|}}}}}}, in&amp;#32;}}{{Comma separated entries
 | {{if empty|{{{sign|}}}|{{{cite|}}}|{{{author|}}}|{{{by|}}}|{{{personquoted|}}}|{{{2|}}}}}
 | {{if empty|{{{title|}}}|{{{publication|}}}|{{{ts|}}}|{{{quotesource|}}}|{{{3|}}}}}
 | {{if empty|{{{source|}}}|{{{4|}}}}}
 }}&lt;/cite&gt;&lt;/div&gt;
}}
&lt;/blockquote&gt;{{#if:{{{class|}}}{{{id|}}}{{{diff|}}}{{{4|}}}{{{5|}}}|[[Category:Pages incorrectly using the quote template]]}}&lt;noinclude&gt;
{{documentation}}&lt;!-- Add categories to the /doc subpage, not here! --&gt;
&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Quote/doc</title>
    <ns>10</ns>
    <id>71</id>
    <revision>
      <id>2568</id>
      <parentid>2567</parentid>
      <timestamp>2019-01-30T06:28:47Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>155 revisions imported from [[:templatewiki:Template:Quote/doc]]</comment>
      <origin>2567</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="13614" sha1="tabt1csnztodqthcwqb9cqehv8euu3w" xml:space="preserve">{{Documentation subpage}}

{{For|linking a subject to a collection of quotes on [[Wikiquote]]|Template:Wikiquote}}

== Usage ==
{{tlx|Quote}} adds a [[block quotation]] to an article page.

This is easier to type and is more wiki-like than the equivalent [[HTML]] {{tag|blockquote}} tags, and has additional pre-formatted attribution parameters for author and source (though these are not usually used in articles; {{crossref|see {{section link||Reference citations}}, below}}).

'''Note:''' Block quotes do {{em|not}} normally contain quotation marks {{crossref|(see [[MOS:BLOCKQUOTE]])}}.

{{warning|heading=This template is for actual quotations only.|text=Do not use it for block indentation of other material; see {{tlx|Block indent}} for that purpose.}}

=== Examples ===

;Basic use{{colon}}:
&lt;pre&gt;{{Quote
|text=Quoted material.
}}&lt;/pre&gt;

;With attribution displayed{{colon}}: 
&lt;pre&gt;{{Quote
|text=Quoted material.
|author=First M. Last
}}&lt;/pre&gt;

;With more attribution{{colon}}:
&lt;pre&gt;{{Quote
|text=Quoted material.
|author=First M. Last |title="Article Title"  |source=''Book Title'' (date)
}}&lt;/pre&gt;

== Parameters ==

{{para|text}} a.k.a. {{para|1}}—The material being quoted, without quotation marks around it. It is always safest to name this parameter (rather than use an unnamed positional parameter), because, otherwise, any inclusion of a [[Template:=|non-escaped "=" character]] (e.g., in a URL in a source citation) will break the template.

=== Displayed attribution ===
These parameters for for {{em|displaying}} attribution information below the quote; this should not be confused with a citing a source {{crossref|(see {{section link||Reference citations}}, below)}}. These parameters are entirely optional, and are usually used with famous quotations, not routine block quotations, which are usually sourced at the end of the introductory line immediately before the quotation, with a normal {{tag|ref}} tag.

{{para|author}} a.k.a. {{para|2}}—Optional Author/speaker attribution information that will appear below the quotation, and preceded with an attribution dash. 

{{para|title}} a.k.a. {{para|3}}—Optional title of the work the quote appears in, to display below the quotation. This parameter immediately follows the output of {{para|author}} (and an auto-generated comma), if one is provided. It does not auto-italicize. Major works (books, plays, albums, feature films, etc.) should be italicized; minor works (articles, chapters, poems, songs, TV episodes, etc.) go in quotation marks {{crossref|(see [[MOS:TITLES]])}}. Additional citation information can be provided in a fourth parameter, {{para|source}}, below, which will appear after the title.

{{para|source}} a.k.a. {{para|4}}—Optionally used for additional source information to display, after {{para|title}}, like so: {{para|title|"The Aerodynamics of Shaved Weasels"}}{{para|source|{{code|2=moin|''Perspectives on Mammal Barbering'', 2016}}}}; a comma will be auto-generated between the two parameters.  If {{para|source}} is used without {{para|title}}, it simply acts as {{para|title}}. &lt;small&gt;(This parameter was added primarily to ease conversion from misuse of the [[pull quote]] template {{tlx|Quote frame}} for block quotation, but it may aid in cleaner meta-data implementation later.)&lt;/small&gt;

{{para|character}} a.k.a. {{para|char}}—to attribute fictional speech to a fictional character, {{em|with}} other citation information. Can also be used to attribute real speech to a specific speaker among many, e.g. in a roundtable/panel transcript, a band interview, etc.  This parameter outputs "[{{Var|Character's name}}], in" after the attribution dash and before the output of the parameters above, thus one or more of those parameters must also be supplied. If you need to cite a fictional speaker in an article about a single work of fiction, where repeating the author and title information would be redundant, you can just use the {{para|author}} parameter instead of {{para|character}}.

Technically, all citation information can be given in a single parameter, as in:
:{{para|source|Anonymous interview subject, in Jane G. Arthur, "The Aerodynamics of Shaved Weasels", ''Perspectives on Mammal Barbering''(2016), Bram Xander Yojimbo (ed.)}}
But this is a bit messy, and will impede later efforts to generate metadata from quotation attribution the way we are already doing with source citations. This is much more usable:
:{{para|character|Anonymous interview subject}}
:{{para|author|Jane G. Arthur}}
:{{para|title|"The Aerodynamics of Shaved Weasels"}}
:{{para|source|{{code|2=moin|''Perspectives on Mammal Barbering'' (2016), Bram Xander Yojimbo (ed.)}}}}
Later development can assign a CSS &lt;code&gt;class&lt;/code&gt; and so forth to these separate parameters, upon which scripts would be able to operate (e.g. to look up things in WikiQuote).

===Rarely used technical parameters===
{{para|multiline}}—some of the issues with the formatting of quotes with line breaks can be fixed by using {{para|multiline|y}} (see [[#Line breaks|the line breaks section]] for other options).

{{para|style}}—allows specifying additional [[Help:Cascading Style Sheets|CSS]] styles (''not'' classes) to apply to the {{tag|blockquote}} element. {{Crossref|(See [[#Nested quotations]], below, for the most common use case.)}}

===Parameter list===
&lt;pre&gt;
{{Quote
| quote     =
| author    =
| title     =
| source    =
| character =
| multiline =
| style     =
}}
&lt;/pre&gt;

==Reference citations==
{{anchor|Attribution|reason=Old section name}}
A [[WP:Citing sources|reference citation]] can be placed before the quote, after the quote, or in the &lt;code&gt;source&lt;/code&gt; parameter:
&lt;ul&gt;
&lt;li&gt;'''Typical use''': In the regular-prose introduction to the quotation, when a quotation is given without the displayed &lt;code&gt;author&lt;/code&gt;, &lt;code&gt;title&lt;/code&gt;, or &lt;code&gt;source&lt;/code&gt; parameters:&lt;source lang="xml" inline&gt;According to Pat Doe, in "Underwater Basketweaving Tips" (2015):&lt;ref&gt;...&lt;/ref&gt; {{quote |text=Quoted material.}}&lt;/source&gt;&lt;/li&gt;
&lt;li&gt;At the end of the quotation, when a quotation is given without the displayed &lt;code&gt;author&lt;/code&gt;, &lt;code&gt;title&lt;/code&gt;, or &lt;code&gt;source&lt;/code&gt; parameters, and placement before the quote isn't appropriate (e.g. because the material immediately before the quote isn't cited to the same source or introduces multiple quotes from different sources:&lt;source lang="xml" inline&gt;Pat Doe and Chris Foo took opposing positions: {{quote |text=Doe's Quoted material.&lt;ref&gt;...&lt;/ref&gt;}} {{quote |text=Foo's Quoted material.&lt;ref&gt;...&lt;/ref&gt;}}&lt;/source&gt;&lt;/li&gt;
&lt;li&gt;After the &lt;code&gt;source&lt;/code&gt; value (if a value is given for the &lt;code&gt;source&lt;/code&gt; parameter other than the {{tag|ref}} itself):&lt;source lang="xml" inline&gt;One expert noted in 2015: {{quote |text=Quoted material. |author=Pat Doe |source="Underwater Basketweaving Tips" (2015)&lt;ref&gt;...&lt;/ref&gt;}}&lt;/source&gt;&lt;/li&gt;
&lt;li&gt;{{strongbad|Deprecated}}: &lt;s&gt;After the quoted person's name in &lt;code&gt;author&lt;/code&gt;, or after the work's title in &lt;code&gt;title&lt;/code&gt;, when a &lt;code&gt;source&lt;/code&gt; parameter is not being added:&lt;source lang="xml" inline&gt;As noted in "Underwater Basketweaving Tips" (2015): {{quote |text=Quoted material. |author=Pat Doe&lt;ref&gt;...&lt;/ref&gt;}}&lt;/source&gt;&lt;/s&gt;&lt;br /&gt;Please avoid that format, as it will pollute the author or title metadata with non-author or non-title information.&lt;/li&gt;
&lt;/ul&gt;

Please do not place the citation in a {{para|author}} or {{para|source}} parameter by itself, as it will produce a nonsensical attribution line that looks like:&lt;br /&gt;{{in5}}—&amp;#8239;{{fake ref}}&lt;br /&gt;Please also do not put it just outside the {{tnull|Quote}} template, as this will cause a:&lt;br /&gt;{{in5}}{{fake ref}}&lt;br /&gt;on a line by itself.

== Style ==
Styling is applied through CSS rules in [[MediaWiki:Common.css]].
&lt;syntaxhighlight lang=css&gt;
/* Styling for Template:Quote */
blockquote.templatequote {
     margin-top: 0;
}
blockquote.templatequote div.templatequotecite {
    line-height: 1.5em;
    /* @noflip */
    text-align: left;
    /* @noflip */
    padding-left: 1.6em;
    margin-top: 0;
}
&lt;/syntaxhighlight&gt;
HTML:
&lt;syntaxhighlight lang=html&gt;
&lt;blockquote class="templatequote"&gt;
&lt;p&gt;Quote text.&lt;/p&gt;
&lt;div class="templatequotecite"&gt;&lt;cite&gt;—Author, Source&lt;/cite&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/syntaxhighlight&gt;

== Examples ==

{{markupv
|markup=&lt;source lang="moin"&gt;{{Quote|text=Cry "Havoc" and let slip the dogs of war.|character=Mark Antony|author=[[William Shakespeare]]|title=''[[Julius Caesar (play)|Julius Caesar]]''|source=act III, scene I}}&lt;/source&gt;
|renders=
{{Quote|text=Cry "Havoc" and let slip the dogs of war.|character=Mark Antony|author=[[William Shakespeare]]|title=''[[Julius Caesar (play)|Julius Caesar]]''|source=act III, scene I}}
}}

== Limitations ==
{{anchor|Restrictions|reason=Old section name}}
If you do not provide text, the template generates a parser error message, which will appear in red text in the rendered page.

If any parameter's actual value contains an [[equals sign]] (&lt;code&gt;=&lt;/code&gt;), you '''must''' use a named parameter (e.g. {{para|text|"E=MC&lt;sup&gt;2&lt;/sup&gt;" is a formula everyone knows but few understand}}, not a blank-name positional parameter. The text before the equals sign gets misinterpreted as a named parameter otherwise. Be wary of URLs, which frequently contain this character.  Named parameters are always safer, in this an other templates.

If any parameter's actual value contains characters used for wiki markup syntax (such as [[vertical bar|pipe]], [[brackets]], single quotation marks, etc.), you may need to escape it. See [[Template:!]] and friends.

=== Next to right-floated boxes ===
{{As of|2015|09}}, the text of a block quotation may rarely overflow (in Firefox or other Gecko browsers) a right-floated item (e.g. a {{tlx|Listen}} box, when that item is below another right-floated item of a fixed size that is narrower. In Safari and other Webkit browsers (and even more rarely in Chrome/Chromium) the same condition can cause the block quotation to be pushed downward.  Both of these problems can be fixed by either:
# removing the sizing on the upper item and letting it use its default size (e.g. removing &lt;code&gt;{{var|###}}x{{var|###}}px&lt;/code&gt; sizing or {{para|upright}} from a right-floated image above a wider right-floated object that is being overflowed by quotation text; or
# using {{para|style|overflow:inherit;}} in the quotation template.
There may be other solutions, and future browser upgrades may eliminate the issue. It arises at all because of the &lt;code&gt;blockquote { overflow: hidden; }&lt;/code&gt; CSS declaration in [[Mediawiki:Common.css]], which itself works around other, more common display problems. A solution that fixes {{em|all}} of the issues is unknown at this time.

=== Vanishing quotes ===
In rare layout cases, e.g. when quotes are sandwiched between userboxes, a quotation may appear blanked out, in some browsers. The workaround for this problem is to add {{para|style|overflow:inherit;}} to such an instance of the template.

=== Line breaks ===
{{Blockquote paragraphs}}

This template sets a text style which might ignore one blank line, and so the template must be ended with a break (newline) or the next blank line might be ignored. Otherwise, beware inline, as:
::* text here &lt;nowiki&gt;{{quote|this is quoted}}&lt;/nowiki&gt; More text here
spans a blank line, unless a &lt;nowiki&gt;{{quote|...}}&lt;/nowiki&gt; is ended with a line break, then the next blank line might be ignored and two paragraphs joined.

=== Nested quotations ===
The {{tag|blockquote}} element has styles that change the font size: on desktop, text is smaller; on mobile, it is larger. This change is relative to the enclosing context, meaning that if you quote from a source that itself uses a block quotation, you'll find that the inner quotation is either really tiny and hard to read, or really large and barely fits on the screen. Additionally, you'll get an extra pair of decorative, oversize quotation marks. To fix both these issues, add the parameter &lt;code&gt;|style=font-size:inherit;quotes:none;&lt;/code&gt; on any inner {{tl|quote}} templates.

=== Technical issues with block templates ===
{{Block bug documentation}}

== Errors ==
Pages where this template is not used correctly populate [[:Category:Pages incorrectly using the quote template]]. The category tracks tranclusions of [[:Template:Quote]] that have no text given for quotation or use an equals sign in the argument of an unnamed parameter. It also tracks usage of {{para|class}}, {{para|id}}, {{para|diff}}, {{para|4}}, or {{para|5}}.

== TemplateData ==
{{TemplateDataHeader}}
&lt;templatedata&gt;
{
	"description": "Adds a block quotation.",
	"params": {
		"text": {
			"label": "text",
			"description": "The text to quote",
			"type": "content",
			"required": true,
			"aliases": [
				"1",
				"quote"
			],
			"example": "Cry \"Havoc\" and let slip the dogs of war."
		},
		"sign": {
			"label": "sign",
			"description": "The person being quoted",
			"type": "content",
			"required": false,
			"aliases": [
				"2",
				"cite",
				"author"
			],
			"example": "[[William Shakespeare]]",
			"suggested": true
		},
		"source": {
			"label": "source",
			"description": "A source for the quote",
			"type": "content",
			"required": false,
			"aliases": [
				"3"
			],
			"example": "''[[Julius Caesar (play)|Julius Caesar]]'', act III, scene I",
			"suggested": true
		}
	}
}
&lt;/templatedata&gt;

{{Quotation templates}}

&lt;includeonly&gt;{{#ifeq:{{SUBPAGENAME}}|sandbox|
| &lt;!-- ADD CATEGORIES AFTER THIS LINE, PLEASE: --&gt;
[[Category:Quotation templates]]
[[Category:Wikipedia XHTML tag-replacing templates]]
}}&lt;/includeonly&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Section link</title>
    <ns>10</ns>
    <id>72</id>
    <revision>
      <id>2591</id>
      <parentid>2572</parentid>
      <timestamp>2019-01-30T06:28:47Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>22 revisions imported from [[:templatewiki:Template:Section_link]]</comment>
      <origin>2572</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="197" sha1="bowt15vt96znutuk47bo3ugg2ebjwx1" xml:space="preserve">{{#invoke:Section link|main}}&lt;noinclude&gt;
{{documentation}}
&lt;!--  Categories go on the /doc subpage and interwikis go on Wikidata. --&gt;
{{En-WP attribution notice|Template:Section link}}
&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Strong</title>
    <ns>10</ns>
    <id>73</id>
    <revision>
      <id>2604</id>
      <parentid>2603</parentid>
      <timestamp>2019-01-30T06:28:48Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>12 revisions imported from [[:templatewiki:Template:Strong]]</comment>
      <origin>2603</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="323" sha1="jhbv1h6fd9kjc1d4eovhzvnxrpqq09r" xml:space="preserve">&lt;strong {{#if:{{{role|}}}|role="{{{role}}}"}} {{#if:{{{class|}}}|class="{{{class}}}"}} {{#if:{{{id|}}}|id="{{{id}}}"}} {{#if:{{{style|}}}|style="{{{style}}}"}} {{#if:{{{title|}}}|title="{{{title}}}"}}&gt;{{{1}}}&lt;/strong&gt;&lt;noinclude&gt;
{{documentation}}
&lt;!-- Add cats and interwikis to the /doc subpage, not here! --&gt;
&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Strongbad</title>
    <ns>10</ns>
    <id>74</id>
    <revision>
      <id>2614</id>
      <parentid>2613</parentid>
      <timestamp>2019-01-30T06:28:49Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>9 revisions imported from [[:templatewiki:Template:Strongbad]]</comment>
      <origin>2613</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="446" sha1="iwqqwd6xrf6t1pedyidlcid2w79fo43" xml:space="preserve">{{#ifeq:{{NAMESPACE}}|{{ns:0}}|{{FormattingError|Template:Strongbad is only for use in template documentation, guidelines and other Wikipedia-internal purposes. Do not use it in actual articles.}}|{{strong|1={{{1}}}|style=color:red;{{#if:{{{style}}}|{{{style}}}}} |role={{{role|}}} |class={{{class|}}} |id={{{id|}}} |title={{{title|}}} }}}}&lt;noinclude&gt;
{{documentation}}
&lt;!-- Add cats and interwikis to the /doc subpage, not here! --&gt;
&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Tag</title>
    <ns>10</ns>
    <id>75</id>
    <revision>
      <id>2670</id>
      <parentid>2669</parentid>
      <timestamp>2019-01-30T06:28:50Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>55 revisions imported from [[:templatewiki:Template:Tag]]</comment>
      <origin>2669</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="835" sha1="rfqa950ndrmgt6ozaa81dwgyr2n28ea" xml:space="preserve">&lt;code class="{{#ifeq:{{{wrap|}}}|yes|wrap|nowrap}}" style="{{#ifeq:{{{style|}}}|plain|border:none;background:transparent;|{{{style|}}}}}"&gt;&lt;!--
 Opening tag
--&gt;{{#switch:{{{2|pair}}}
  |c|close =
  |e|empty|s|single|v|void
  |o|open
  |p|pair = &amp;lt;{{#if:{{{link|}}}|[[HTML element#{{{1|tag}}}|{{{1|tag}}}]]|{{{1|tag}}}}}{{#if:{{{params|{{{attribs|}}}}}}|&amp;#32;{{{params|{{{attribs}}}}}}}}
 }}&lt;!--
 Content between tags
--&gt;{{#switch:{{{2|pair}}}
  |c|close = {{{content|}}}
  |e|empty|s|single|v|void = &amp;#32;&amp;#47;&amp;gt;
  |o|open = &amp;gt;{{{content|}}}
  |p|pair = {{#ifeq:{{{1|tag}}}|!--||&amp;gt;}}{{{content|...}}}
 }}&lt;!--
 Closing tag
--&gt;{{#switch:{{{2|pair}}}
  |e|empty|s|single|v|void
  |o|open =
  |c|close
  |p|pair = {{#ifeq:{{{1|tag}}}|!--|--&amp;gt;|&amp;lt;&amp;#47;{{{1|tag}}}&amp;gt;}}
 }}&lt;!--
--&gt;&lt;/code&gt;&lt;noinclude&gt;
{{Documentation}}
&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:TemplateDataHeader</title>
    <ns>10</ns>
    <id>76</id>
    <redirect title="Template:TemplateData header" />
    <revision>
      <id>2677</id>
      <parentid>2676</parentid>
      <timestamp>2019-01-30T06:28:50Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>6 revisions imported from [[:templatewiki:Template:TemplateDataHeader]]</comment>
      <origin>2676</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="58" sha1="bfnm7z66t4q2d8otfa0y3vtgkcwrfao" xml:space="preserve">#REDIRECT [[Template:TemplateData header]]
{{R from move}}</text>
    </revision>
  </page>
  <page>
    <title>Template:TemplateData header</title>
    <ns>10</ns>
    <id>77</id>
    <revision>
      <id>2702</id>
      <parentid>2701</parentid>
      <timestamp>2019-01-30T06:28:51Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>24 revisions imported from [[:templatewiki:Template:TemplateData_header]]</comment>
      <origin>2701</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="501" sha1="1lgj007izalttlek052vptodul1clkt" xml:space="preserve">&lt;div class="templatedata-header"&gt;{{#if:{{{noheader|}}}|{{Template error report}}|This is the {{#if:{{{nolink|}}}|TemplateData|[[Wikipedia:TemplateData|TemplateData]]}} documentation for this template used by [[Wikipedia:VisualEditor|VisualEditor]] and other tools; {{Template error report|lc=yes}}}} 

'''TemplateData for {{{1|{{BASEPAGENAME}}}}}'''
&lt;/div&gt;&lt;includeonly&gt;{{#ifeq:{{SUBPAGENAME}}|sandbox||
[[Category:TemplateData documentation]]
}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{Documentation}}
&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Template error report</title>
    <ns>10</ns>
    <id>78</id>
    <revision>
      <id>2718</id>
      <parentid>2717</parentid>
      <timestamp>2019-01-30T06:28:51Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>15 revisions imported from [[:templatewiki:Template:Template_error_report]]</comment>
      <origin>2717</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="278" sha1="58xkdtdvcn1dijd3bs4zlibe610r8r1" xml:space="preserve">{{#ifeq:{{yesno-no|{{{lc}}}}}|no|S|s}}ee the [https://tools.wmflabs.org/bambots/TemplateParam.php?wiki=enwiki&amp;template={{Urlencode:{{{1|{{ROOTPAGENAME}}}}}}} monthly error report] for this template.&lt;noinclude&gt;

{{documentation}}

[[Category:External link templates]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Tl</title>
    <ns>10</ns>
    <id>79</id>
    <revision>
      <id>2761</id>
      <parentid>2760</parentid>
      <timestamp>2019-01-30T06:28:52Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>42 revisions imported from [[:templatewiki:Template:Tl]]</comment>
      <origin>2760</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="168" sha1="h0vr3yvr9jdyd17x82vnav21ngwmxuk" xml:space="preserve">&amp;#123;&amp;#123;[[Template:{{{1}}}|{{{1}}}]]&amp;#125;&amp;#125;&lt;noinclude&gt;
{{documentation}}
&lt;!-- Categories go on the /doc subpage and interwikis go on Wikidata. --&gt;
&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Tlb</title>
    <ns>10</ns>
    <id>80</id>
    <revision>
      <id>2784</id>
      <parentid>2783</parentid>
      <timestamp>2019-01-30T06:28:52Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>22 revisions imported from [[:templatewiki:Template:Tlb]]</comment>
      <origin>2783</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="723" sha1="jpkffk1a4m9su9fhayczhvd57xxgj9p" xml:space="preserve">{{Tlg|bold=yes|subst={{{subst|}}}|{{{1|}}}&lt;!--
--&gt;|2{{#ifeq:{{{2}}}|{{{2|x}}}||x}}={{{2}}}&lt;!--
--&gt;|3{{#ifeq:{{{3}}}|{{{3|x}}}||x}}={{{3}}}&lt;!--
--&gt;|4{{#ifeq:{{{4}}}|{{{4|x}}}||x}}={{{4}}}&lt;!--
--&gt;|5{{#ifeq:{{{5}}}|{{{5|x}}}||x}}={{{5}}}&lt;!--
--&gt;|6{{#ifeq:{{{6}}}|{{{6|x}}}||x}}={{{6}}}&lt;!--
--&gt;|7{{#ifeq:{{{7}}}|{{{7|x}}}||x}}={{{7}}}&lt;!--
--&gt;|8{{#ifeq:{{{8}}}|{{{8|x}}}||x}}={{{8}}}&lt;!--
--&gt;|9{{#ifeq:{{{9}}}|{{{9|x}}}||x}}={{{9}}}&lt;!--
--&gt;|10{{#ifeq:{{{10}}}|{{{10|x}}}||x}}={{{10}}}&lt;!--
--&gt;|11{{#ifeq:{{{11}}}|{{{11|x}}}||x}}={{{11}}}&lt;!--
--&gt;|12{{#ifeq:{{{12}}}|{{{12|x}}}||x}}={{{12}}}}}&lt;noinclude&gt;
{{Documentation}}
&lt;!-- Add categories to the /doc subpage, not here! --&gt;
{{En-WP attribution notice|Template:Tlb}}
&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Tlg</title>
    <ns>10</ns>
    <id>81</id>
    <revision>
      <id>2826</id>
      <parentid>2825</parentid>
      <timestamp>2019-01-30T06:28:53Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>41 revisions imported from [[:templatewiki:Template:Tlg]]</comment>
      <origin>2825</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2794" sha1="byyf1x2onevkha93mms6divoszra5y1" xml:space="preserve">&lt;includeonly&gt;&lt;!--
 --&gt;{{#if:{{{nowrap|}}}        |&lt;span class="nowrap"&gt;}}&lt;!--
 --&gt;{{#if:{{{code|{{{tt|}}}}}} |&lt;code&gt; |{{#if:{{{plaincode|}}}|&lt;code style="border:none;background:transparent;"&gt;}} }}&lt;!--
 --&gt;{{#if:{{{kbd|}}}           |&lt;kbd&gt;}}&lt;!--
 --&gt;{{#if:{{{nowrapname|}}}    |&lt;span class="nowrap"&gt;}}&lt;!--
 --&gt;{{#if:{{{braceinside|}}}   | |&lt;nowiki&gt;{{&lt;/nowiki&gt;}}&lt;!--
 --&gt;{{#if:{{{subst|}}}         |[[Help:Substitution|subst]]:}}&lt;!--

 --&gt;{{#if:{{{bold|{{{boldlink|{{{boldname|}}}}}}}}} |'''}}&lt;!--
 --&gt;{{#if:{{{nolink|}}} |&lt;!--then omit template link, else:
 --&gt;| {{#if:{{{braceinside|}}} |&lt;nowiki&gt;{&lt;/nowiki&gt;}}&lt;!--
       --&gt;{{!((}}:&lt;!--(start building link with "[[:")
                   --&gt;{{#ifeq:{{padleft:|1|{{{1}}}}}|: &lt;!--i.e. if {{{1}}}'s first character is a colon,
              then:--&gt; |{{FULLPAGENAME:{{{1}}}}}&lt;!--
              else:--&gt; |{{#switch:{{NAMESPACE:{{#if:{{{1|}}}|{{{1}}}|{{FULLPAGENAME}}}}}}
                         | {{ns:0}} = {{ns:10}}:{{#if:{{{1|}}}|{{PAGENAME:{{{1}}}}}|{{PAGENAME}}}}
                         | #default = {{#if:{{{1|}}}|{{FULLPAGENAME:{{{1}}}}}|{{FULLPAGENAME}}}}
                      }}}}&lt;!--
       --&gt;{{!}}&lt;!--(pipe between link and label, i.e. [[:link|label]])
 --&gt;}}&lt;!--
 --&gt;{{#if:{{{braceinside|}}} |&lt;nowiki&gt;{&lt;/nowiki&gt;}}&lt;!--
 label / template name:
 --&gt;{{{alttext|{{#if:{{{1|}}}|{{{1}}}|{{#ifeq:{{NAMESPACE}}|{{ns:Template}}|{{PAGENAME}}|{{FULLPAGENAME}}}}}}}}}&lt;!--
 --&gt;{{#if:{{{braceinside|}}} |&lt;nowiki&gt;}&lt;/nowiki&gt;}}&lt;!--
 --&gt;{{#if:{{{nolink|}}} | |&lt;!--
       --&gt;{{!))}}&lt;!--(end link)
    --&gt;{{#if:{{{braceinside|}}} |&lt;nowiki&gt;}&lt;/nowiki&gt;}}&lt;!-- 
 --&gt;}}&lt;!--
 --&gt;{{#if:{{{bold|{{{boldlink|{{{boldname|}}}}}}}}} |'''}}&lt;!--
 --&gt;{{#if:{{{nowrapname|}}} |&lt;/span&gt;}}&lt;!--

 --&gt;{{#if:{{{italic|{{{italics|}}}}}} |&lt;span style="font-style:italic;"&gt;}}&lt;!--
 --&gt;{{#ifeq:{{{2|¬}}}|¬ | |&amp;#124;{{#tag:nowiki|{{{2}}}}}}}&lt;!--
 --&gt;{{#ifeq:{{{3|¬}}}|¬ | |&amp;#124;{{#tag:nowiki|{{{3}}}}}}}&lt;!--
 --&gt;{{#ifeq:{{{4|¬}}}|¬ | |&amp;#124;{{#tag:nowiki|{{{4}}}}}}}&lt;!--
 --&gt;{{#ifeq:{{{5|¬}}}|¬ | |&amp;#124;{{#tag:nowiki|{{{5}}}}}}}&lt;!--
 --&gt;{{#ifeq:{{{6|¬}}}|¬ | |&amp;#124;{{#tag:nowiki|{{{6}}}}}}}&lt;!--
 --&gt;{{#ifeq:{{{7|¬}}}|¬ | |&amp;#124;{{#tag:nowiki|{{{7}}}}}}}&lt;!--
 --&gt;{{#ifeq:{{{8|¬}}}|¬ | |&amp;#124;{{#tag:nowiki|{{{8}}}}}}}&lt;!--
 --&gt;{{#ifeq:{{{9|¬}}}|¬ | |&amp;#124;{{#tag:nowiki|{{{9}}}}}}}&lt;!--
 --&gt;{{#ifeq:{{{10|¬}}}|¬ | |&amp;#124;{{#tag:nowiki|{{{10}}}}}}}&lt;!--
 --&gt;{{#ifeq:{{{11|¬}}}|¬ | |&amp;#124;{{#tag:nowiki|{{{11}}}}}}}&lt;!--
 --&gt;{{#if:{{{12|}}} |&amp;#124;…}}&lt;!--
 --&gt;{{#if:{{{italic|{{{italics|}}}}}} |&lt;/span&gt;}}&lt;!--

 --&gt;{{#if:{{{braceinside|}}} | |&lt;nowiki&gt;}}&lt;/nowiki&gt;}}&lt;!--
 --&gt;{{#if:{{{kbd|}}} |&lt;/kbd&gt;}}&lt;!--
 --&gt;{{#if:{{{code|{{{tt|}}}}}}{{{plaincode|}}} |&lt;/code&gt;}}&lt;!--
 --&gt;{{#if:{{{nowrap|}}} |&lt;/span&gt;}}&lt;!--
--&gt;&lt;/includeonly&gt;&lt;noinclude&gt;
{{Documentation}}
&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Tlx</title>
    <ns>10</ns>
    <id>82</id>
    <revision>
      <id>2907</id>
      <parentid>2906</parentid>
      <timestamp>2019-01-30T06:28:55Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>80 revisions imported from [[:templatewiki:Template:Tlx]]</comment>
      <origin>2906</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1654" sha1="kwfb46dhyfui9gwm9crh2h2cp8z4zxy" xml:space="preserve">&lt;includeonly&gt;&lt;!--
    --&gt;&lt;code&gt;&lt;!--
        --&gt;&lt;nowiki&gt;{{&lt;/nowiki&gt;{{#if:{{{subst|}}} |[[Help:Substitution|subst]]:}}&lt;!--
                     --&gt;[[{{{LANG|}}}{{{SISTER|}}}{{ns:Template}}:{{{1|}}}|{{{1|}}}]]&lt;!--
                          --&gt;{{#if:{{{2|}}}  |&amp;#124;{{{2}}}}}&lt;!--
                          --&gt;{{#if:{{{3|}}}  |&amp;#124;{{{3}}}}}&lt;!--
                          --&gt;{{#if:{{{4|}}}  |&amp;#124;{{{4}}}}}&lt;!--
                          --&gt;{{#if:{{{5|}}}  |&amp;#124;{{{5}}}}}&lt;!--
                          --&gt;{{#if:{{{6|}}}  |&amp;#124;{{{6}}}}}&lt;!--
                          --&gt;{{#if:{{{7|}}}  |&amp;#124;{{{7}}}}}&lt;!--
                          --&gt;{{#if:{{{8|}}}  |&amp;#124;{{{8}}}}}&lt;!--
                          --&gt;{{#if:{{{9|}}}  |&amp;#124;{{{9}}}}}&lt;!--
                          --&gt;{{#if:{{{10|}}} |&amp;#124;{{{10}}}}}&lt;!--
                          --&gt;{{#if:{{{11|}}} |&amp;#124;{{{11}}}}}&lt;!--
                          --&gt;{{#if:{{{12|}}} |&amp;#124;{{{12}}}}}&lt;!--
                          --&gt;{{#if:{{{13|}}} |&amp;#124;{{{13}}}}}&lt;!--
                          --&gt;{{#if:{{{14|}}} |&amp;#124;{{{14}}}}}&lt;!--
                          --&gt;{{#if:{{{15|}}} |&amp;#124;{{{15}}}}}&lt;!--
                          --&gt;{{#if:{{{16|}}} |&amp;#124;{{{16}}}}}&lt;!--
                          --&gt;{{#if:{{{17|}}} |&amp;#124;{{{17}}}}}&lt;!--
                          --&gt;{{#if:{{{18|}}} |&amp;#124;{{{18}}}}}&lt;!--
                          --&gt;{{#if:{{{19|}}} |&amp;#124;{{{19}}}}}&lt;!--
                          --&gt;{{#if:{{{20|}}} |&amp;#124;{{{20}}}}}&lt;!--
                          --&gt;{{#if:{{{21|}}} |&amp;#124;''...''}}&lt;!--
        --&gt;&lt;nowiki&gt;}}&lt;/nowiki&gt;&lt;!--
    --&gt;&lt;/code&gt;&lt;!--
--&gt;&lt;/includeonly&gt;&lt;noinclude&gt;
{{Documentation}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Tnull</title>
    <ns>10</ns>
    <id>83</id>
    <revision>
      <id>2930</id>
      <parentid>2929</parentid>
      <timestamp>2019-01-30T06:28:55Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>22 revisions imported from [[:templatewiki:Template:Tnull]]</comment>
      <origin>2929</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="475" sha1="pb0ekvd2w4nombbfccr22ju363bleb3" xml:space="preserve">&lt;code&gt;&amp;#123;&amp;#123;{{#if:{{{1|}}}|{{{1}}}| tnull&amp;#124;...}}{{#if:{{{2|}}}|&amp;#124;{{{2}}}|}}{{#if:{{{3|}}}|&amp;#124;{{{3}}}|}}{{#if:{{{4|}}}|&amp;#124;{{{4}}}|}}{{#if:{{{5|}}}|&amp;#124;{{{5}}}|}}{{#if:{{{6|}}}|&amp;#124;{{{6}}}|}}{{#if:{{{7|}}}|&amp;#124;{{{7}}}|}}{{#if:{{{8|}}}|&amp;#124;{{{8}}}|}}{{#if:{{{9|}}}|&amp;#124;{{{9}}}|}}{{#if:{{{10|}}}|&amp;#124;{{{10}}}|}}{{#if:{{{11|}}}|&amp;#124;{{{11}}}|}}&amp;#125;&amp;#125;&lt;/code&gt;&lt;noinclude&gt;
{{documentation}}{{En-WP attribution notice|Template:Tnull}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Var</title>
    <ns>10</ns>
    <id>84</id>
    <revision>
      <id>2948</id>
      <parentid>2947</parentid>
      <timestamp>2019-01-30T06:28:55Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>17 revisions imported from [[:templatewiki:Template:Var]]</comment>
      <origin>2947</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="364" sha1="ah5czkdwxzyyetl3jwpw8t41t7kjzre" xml:space="preserve">&lt;var {{#if:{{{class|}}}|class="{{{class}}}"}} {{#if:{{{id|}}}|id="{{{id}}}"}} style="padding-right: 1px;{{{style|}}}" {{#if:{{{lang|}}}|lang="{{{lang}}}"}} {{#if:{{{title|}}}|title="{{{title}}}"}}&gt;{{{1}}}&lt;/var&gt;&lt;noinclude&gt;
&lt;!--Categories and interwikis go near the bottom of the /doc page.--&gt;
{{Documentation}}
{{En-WP attribution notice|Template:Var}}
&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Warning</title>
    <ns>10</ns>
    <id>85</id>
    <revision>
      <id>2991</id>
      <parentid>2990</parentid>
      <timestamp>2019-01-30T06:28:56Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>42 revisions imported from [[:templatewiki:Template:Warning]]</comment>
      <origin>2990</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1086" sha1="6xiy5wxgfj94fmy84j4hbzz28u6ytbg" xml:space="preserve">{{Mbox
| name       = Warning
| demospace  = {{{demospace|}}}
| style      = {{#if:{{{style|}}} |{{#if:{{{small|}}}||width:80%;}} {{{style}}} }}
| subst      = &lt;includeonly&gt;{{subst:substcheck}}&lt;/includeonly&gt;
| type       = content
| image      = {{#if:{{{image|}}}| [[File:{{{image}}}|40px|Warning]] }}
| small      = {{{small|}}}
| smallimage = {{#if:{{{image|}}}| [[File:{{{image}}}|30px|Warning]]}}
| imageright = {{#if:{{{imageright|}}} |{{{imageright}}} |{{#if:{{{shortcut|{{{shortcut1|}}}}}} |{{Ombox/shortcut|{{{shortcut|{{{shortcut1|}}}}}}|{{{shortcut2|}}}|{{{shortcut3|}}}|{{{shortcut4|}}}|{{{shortcut5|}}}}}}} }}
| textstyle  = {{{textstyle|text-align: {{#if:{{{center|}}}|center|{{{align|left}}}}};}}}
| text       = {{#if:{{{header|{{{heading|{{{title|}}}}}}}}} |&lt;div style="{{{headstyle|text-align: {{#if:{{{center|}}}|center|left}};}}}"&gt;'''{{{header|{{{heading|{{{title|}}}}}}}}}'''&lt;/div&gt;}}&lt;!--
            --&gt;{{{text|{{{content|{{{reason|{{{1}}}}}}}}}}}}
}}&lt;noinclude&gt;
&lt;!-- Add categories to the /doc subpage; interwikis go to Wikidata. --&gt;
{{Documentation}}
&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Xtag</title>
    <ns>10</ns>
    <id>86</id>
    <revision>
      <id>3022</id>
      <parentid>3021</parentid>
      <timestamp>2019-01-30T06:28:57Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>30 revisions imported from [[:templatewiki:Template:Xtag]]</comment>
      <origin>3021</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1851" sha1="lah0c3eyed27t1jp6xmmxrwnoigubro" xml:space="preserve">&lt;code class="nowrap"&gt;{{#switch:{{{2|pair}}}
 |c|close  = &lt;!--nothing--&gt;
 |s|single
 |o|open
 |p|pair   = &amp;lt;{{#switch:{{{1|}}}
 |categorytree=[[mw:Extension:CategoryTree|categorytree]]
 |charinsert=[[mw:Extension:CharInsert|charinsert]]

 |chem=[[Help:Displaying a formula#Chemistry|chem]]
 |ce=[[Help:Displaying a formula#Chemistry|ce]]
 |gallery=[[Help:Gallery tag|gallery]]
 |graph=[[Help:Graph|graph]]
 |hiero=[[mw:Extension:WikiHiero|hiero]]
 |includeonly=[[Help:Template#Noinclude, includeonly, and onlyinclude|includeonly]]
 |indicator=[[mw:Help:Page status indicators|indicator]]
 |imagemap=[[mw:Extension:ImageMap|imagemap]]
 |inputbox=[[mw:Extension:InputBox|inputbox]]
 |math=[[mw:Extension:Math|math]]
 |math chem=[[Help:Displaying a formula#Chemistry|math chem]]
 |noinclude=[[Help:Template#Noinclude, includeonly, and onlyinclude|noinclude]]
 |nowiki=[[Help:Nowiki|nowiki]]
 |onlyinclude=[[Help:Template#Noinclude, includeonly, and onlyinclude|onlyinclude]]
 |poem=[[mw:Extension:Poem|poem]]
 |pre=[[WP:PRE|pre]]
 |ref=[[mw:Extension:Cite/Cite.php|ref]]
 |references=[[mw:Extension:Cite/Cite.php|references]]
 |section=[[mw:Extension:Labeled Section Transclusion|section]]
 |score=[[Help:Score|score]]
 |source=[[mw:Extension:SyntaxHighlight|source]]
 |syntaxhighlight=[[mw:Extension:SyntaxHighlight|syntaxhighlight]]
 |templatedata=[[Wikipedia:TemplateData/Tutorial|templatedata]]
 |timeline=[[mw:Extension:EasyTimeline|timeline]]
 |#default=tag
}}{{#if:{{{params|}}}|&amp;#32;{{{params}}}}}
}}{{#switch:{{{2|open}}}
 |c|close  = {{{content|}}}
 |s|single =  &amp;#32;/&amp;gt;
 |o|open   = &amp;gt;{{{content|}}}
 |p|pair   = &amp;gt;{{{content|...}}}
}}{{#switch:{{{2|open}}}
 |s|single
 |o|open   = &lt;!--nothing--&gt;
 |c|close
 |p|pair   = &amp;lt;/{{{1|tag}}}&amp;gt;
}}&lt;/code&gt;&lt;noinclude&gt;
{{documentation}}
{{En-WP attribution notice|Template:Xtag}}
&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Yes/no</title>
    <ns>10</ns>
    <id>87</id>
    <redirect title="Template:Yesno" />
    <revision>
      <id>3028</id>
      <parentid>3024</parentid>
      <timestamp>2019-01-30T06:28:57Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>5 revisions imported from [[:templatewiki:Template:Yes/no]]</comment>
      <origin>3024</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="28" sha1="f20lpuh5wj2a9xpc80yfnrzqpjm83g9" xml:space="preserve">#REDIRECT [[Template:Yesno]]</text>
    </revision>
  </page>
  <page>
    <title>Template:Yesno</title>
    <ns>10</ns>
    <id>88</id>
    <revision>
      <id>3050</id>
      <parentid>3049</parentid>
      <timestamp>2019-01-30T06:28:58Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>21 revisions imported from [[:templatewiki:Template:Yesno]]</comment>
      <origin>3049</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="366" sha1="r1wh7ajnm478r67owpatavjany80n9e" xml:space="preserve">{{&lt;includeonly&gt;safesubst:&lt;/includeonly&gt;#switch: {{&lt;includeonly&gt;safesubst:&lt;/includeonly&gt;lc: {{{1|¬}}} }}
 |no
 |n
 |false
 |off
 |0        = {{{no|&lt;!-- null --&gt;}}}
 |         = {{{blank|{{{no|&lt;!-- null --&gt;}}}}}}
 |¬        = {{{¬|}}}
 |yes
 |y
 |true
 |on
 |1        = {{{yes|yes}}}
 |#default = {{{def|{{{yes|yes}}}}}}
}}&lt;noinclude&gt;
{{Documentation}}
&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Yesno-no</title>
    <ns>10</ns>
    <id>89</id>
    <revision>
      <id>3060</id>
      <parentid>3059</parentid>
      <timestamp>2019-01-30T06:28:58Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>9 revisions imported from [[:templatewiki:Template:Yesno-no]]</comment>
      <origin>3059</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="269" sha1="34vmtxa9ubuh1vz2ulp78m5ela68riu" xml:space="preserve">{{safesubst:&lt;noinclude /&gt;yesno|{{{1}}}|yes={{{yes|yes}}}|no={{{no|no}}}|blank={{{blank|no}}}|¬={{{¬|no}}}|def={{{def|no}}}}}&lt;noinclude&gt;
{{Documentation|Template:Yesno/doc}}
&lt;!--Categories go in the doc page referenced above; interwikis go in Wikidata.--&gt;
&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:\</title>
    <ns>10</ns>
    <id>90</id>
    <revision>
      <id>3075</id>
      <parentid>3063</parentid>
      <timestamp>2019-01-30T06:28:59Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>14 revisions imported from [[:templatewiki:Template:\]]</comment>
      <origin>3063</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="165" sha1="8dc0kb3czcebr7snkmv69m1rr7yuyzy" xml:space="preserve">&amp;nbsp;/&amp;#32;&lt;noinclude&gt;

{{Documentation}}
&lt;!-- Add categories and interwikis to the /doc subpage, not here! --&gt;
{{En-WP attribution notice|Template:\}}
&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Module:Aligned table</title>
    <ns>828</ns>
    <id>91</id>
    <revision>
      <id>3134</id>
      <parentid>3077</parentid>
      <timestamp>2019-01-30T06:29:00Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>58 revisions imported from [[:templatewiki:Module:Aligned_table]]</comment>
      <origin>3077</origin>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text bytes="5697" sha1="o4d457cy79tvvxs2d2fc2e8bxgel3bq" xml:space="preserve">-- This module implements {{aligned table}}
local p = {}

local function isnotempty(s)
	return s and s:match( '^%s*(.-)%s*$' ) ~= ''
end

function p.table(frame)
	local args = (frame.args[3] ~= nil) and frame.args or frame:getParent().args
	local entries = {}
	local colclass = {}
	local colstyle = {}
	local cols = tonumber(args['cols']) or 2

	-- create the root table
	local root = mw.html.create('table')

	-- add table style for fullwidth
	if isnotempty(args['fullwidth']) then
		root
			:css('width', '100%')
			:css('border-collapse', 'collapse')
			:css('border-spacing', '0px 0px')
			:css('border', 'none')
	end

	-- add table classes
	if isnotempty(args['class']) then
		root:addClass(args['class'])
	end

	-- add table style
	if isnotempty(args['style']) then
		root:cssText(args['style'])
	end

	-- build arrays with the column styles and classes
	if isnotempty(args['leftright']) then
		colstyle[1] = 'text-align:left;'
		colstyle[2] = 'text-align:right;'
	end
	for i = 1,cols do
		colclass[ i ] = colclass[ i ] or ''
		colstyle[ i ] = colstyle[ i ] or ''
		if isnotempty(args['colstyle']) then
			colstyle[ i ] = args['colstyle'] .. ';' .. colstyle[ i ]
		end
		if isnotempty(args['colalign' .. tostring(i)]) then
			colstyle[ i ] = 'text-align:' .. args['colalign' .. tostring(i)] .. ';' .. colstyle[ i ]
		elseif isnotempty(args['col' .. tostring(i) .. 'align']) then
			colstyle[ i ] = 'text-align:' .. args['col' .. tostring(i) .. 'align'] .. ';' .. colstyle[ i ]
		elseif isnotempty(args['align' .. tostring(i)]) then
			colstyle[ i ] = 'text-align:' .. args['align' .. tostring(i)] .. ';' .. colstyle[ i ]
		end
		if isnotempty(args['colnowrap' .. tostring(i)]) then
			colstyle[ i ] = 'white-space:nowrap;' .. colstyle[ i ]
		elseif isnotempty(args['col' .. tostring(i) .. 'nowrap']) then
			colstyle[ i ] = 'white-space:nowrap;' .. colstyle[ i ]
		elseif isnotempty(args['nowrap' .. tostring(i)]) then
			colstyle[ i ] = 'white-space:nowrap;' .. colstyle[ i ]
		end
		if isnotempty(args['colwidth' .. tostring(i)]) then
			colstyle[ i ] = 'width:' .. args['colwidth' .. tostring(i)] .. ';' .. colstyle[ i ]
		elseif isnotempty(args['col' .. tostring(i) .. 'width']) then
			colstyle[ i ] = 'width:' .. args['col' .. tostring(i) .. 'width'] .. ';' .. colstyle[ i ]
		elseif isnotempty(args['colwidth']) then
			colstyle[ i ] = 'width:' .. args['colwidth'] .. ';' .. colstyle[ i ]
		end
		if isnotempty(args['colstyle' .. tostring(i)]) then
			colstyle[ i ] = colstyle[ i ] .. args['colstyle' .. tostring(i)]
		elseif isnotempty(args['col' .. tostring(i) .. 'style']) then
			colstyle[ i ] = colstyle[ i ] .. args['col' .. tostring(i) .. 'style']
		elseif isnotempty(args['style' .. tostring(i)]) then
			colstyle[ i ] = colstyle[ i ] .. args['style' .. tostring(i)]
		end
		if isnotempty(args['colclass' .. tostring(i)]) then
			colclass[ i ] =  args['colclass' .. tostring(i)]
		elseif isnotempty(args['col' .. tostring(i) .. 'class']) then
			colclass[ i ] =  args['col' .. tostring(i) .. 'class']
		elseif isnotempty(args['class' .. tostring(i)]) then
			colclass[ i ] =  args['class' .. tostring(i)]
		end
	end
	-- compute the maximum cell index
	local cellcount = 0
	for k, v in pairs( args ) do
		if type( k ) == 'number' then
			cellcount = math.max(cellcount, k)
		end
	end
	-- compute the number of rows
	local rows = math.ceil(cellcount / cols)

	-- build the table content
	if isnotempty(args['title']) then
		local caption = root:tag('caption')
		caption:cssText(args['titlestyle'])
		caption:wikitext(args['title'])
	end
	if isnotempty(args['above']) then
		local row = root:tag('tr')
		local cell = row:tag('th')
		cell:attr('colspan', cols)
		cell:cssText(args['abovestyle'])
		cell:wikitext(args['above'])
	end
	for j=1,rows do
		-- start a new row
		local row = root:tag('tr')
		if isnotempty(args['rowstyle']) then
			row:cssText(args['rowstyle'])
		else
			row:css('vertical-align', 'top')
		end
		-- loop over the cells in the row
		for i=1,cols do
			local cell
			if isnotempty(args['row' .. tostring(j) .. 'header']) then
				cell = row:tag('th'):attr('scope','col')
			elseif isnotempty(args['col' .. tostring(i) .. 'header']) then
				cell = row:tag('th'):attr('scope','row')
			else
				cell = row:tag('td')
			end
			if args['class' .. tostring(j) .. '.' .. tostring(i)] then
				cell:addClass(args['class' .. tostring(j) .. '.' .. tostring(i)])
			else
				if args['rowclass' .. tostring(j)] then
					cell:addClass(args['rowclass' .. tostring(j)])
				elseif args['row' .. tostring(j) .. 'class'] then
					cell:addClass(args['row' .. tostring(j) .. 'class'])
				elseif args['rowevenclass'] and math.fmod(j,2) == 0 then
					cell:addClass(args['rowevenclass'])
				elseif args['rowoddclass'] and math.fmod(j,2) == 1 then	
					cell:addClass(args['rowoddclass'])
				end
				if colclass[i] ~= '' then
					cell:addClass(colclass[i])
				end
			end
			if args['style' .. tostring(j) .. '.' .. tostring(i)] then
				cell:cssText(args['style' .. tostring(j) .. '.' .. tostring(i)])
			else
				if args['rowstyle' .. tostring(j)] then
					cell:cssText(args['rowstyle' .. tostring(j)])
				elseif args['rowevenstyle'] and math.fmod(j,2) == 0 then
					cell:cssText(args['rowevenstyle'])
				elseif args['rowoddstyle'] and math.fmod(j,2) == 1 then	
					cell:cssText(args['rowoddstyle'])
				elseif args['row' .. tostring(j) .. 'style'] then
					cell:cssText(args['row' .. tostring(j) .. 'style'])
				end
				if isnotempty(colstyle[i]) then
					cell:cssText(colstyle[i])
				end
			end
			cell:wikitext(mw.ustring.gsub(args[cols*(j - 1) + i] or '', '^(.-)%s*$', '%1') or '')
		end
	end
	-- return the root table
	return tostring(root)
end

return p</text>
    </revision>
  </page>
  <page>
    <title>Module:Anchor</title>
    <ns>828</ns>
    <id>92</id>
    <revision>
      <id>3138</id>
      <parentid>3136</parentid>
      <timestamp>2019-01-30T06:29:00Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>3 revisions imported from [[:templatewiki:Module:Anchor]]</comment>
      <origin>3136</origin>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text bytes="632" sha1="na5loe2ne1o9yhs2k5p73tr355hey7t" xml:space="preserve">-- This module implements {{anchor}}.

local getArgs = require('Module:Arguments').getArgs
local tableTools = require('Module:TableTools')

local p = {}

function p.main(frame)
	-- Get the positional arguments from #invoke, remove any nil values,
	-- and pass them to p._main.
	local args = getArgs(frame)
	local argArray = tableTools.compressSparseArray(args)
	return p._main(unpack(argArray))
end

function p._main(...)
	-- Generate the list of anchors.
	local anchors = {...}
	local ret = {}
	for _, anchor in ipairs(anchors) do
		ret[#ret + 1] = '&lt;span id="' .. anchor .. '"&gt;&lt;/span&gt;'
	end
	return table.concat(ret)
end

return p</text>
    </revision>
  </page>
  <page>
    <title>Module:Arguments</title>
    <ns>828</ns>
    <id>93</id>
    <revision>
      <id>3178</id>
      <parentid>3177</parentid>
      <timestamp>2019-01-30T06:29:01Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>39 revisions imported from [[:templatewiki:Module:Arguments]]</comment>
      <origin>3177</origin>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text bytes="10054" sha1="5qx9tzlul9ser30uxj9nbasjt92cevn" xml:space="preserve">-- This module provides easy processing of arguments passed to Scribunto from
-- #invoke. It is intended for use by other Lua modules, and should not be
-- called from #invoke directly.

local libraryUtil = require('libraryUtil')
local checkType = libraryUtil.checkType

local arguments = {}

-- Generate four different tidyVal functions, so that we don't have to check the
-- options every time we call it.

local function tidyValDefault(key, val)
	if type(val) == 'string' then
		val = val:match('^%s*(.-)%s*$')
		if val == '' then
			return nil
		else
			return val
		end
	else
		return val
	end
end

local function tidyValTrimOnly(key, val)
	if type(val) == 'string' then
		return val:match('^%s*(.-)%s*$')
	else
		return val
	end
end

local function tidyValRemoveBlanksOnly(key, val)
	if type(val) == 'string' then
		if val:find('%S') then
			return val
		else
			return nil
		end
	else
		return val
	end
end

local function tidyValNoChange(key, val)
	return val
end

local function matchesTitle(given, title)
	local tp = type( given )
	return (tp == 'string' or tp == 'number') and mw.title.new( given ).prefixedText == title
end

local translate_mt = { __index = function(t, k) return k end }

function arguments.getArgs(frame, options)
	checkType('getArgs', 1, frame, 'table', true)
	checkType('getArgs', 2, options, 'table', true)
	frame = frame or {}
	options = options or {}

	--[[
	-- Set up argument translation.
	--]]
	options.translate = options.translate or {}
	if getmetatable(options.translate) == nil then
		setmetatable(options.translate, translate_mt)
	end
	if options.backtranslate == nil then
		options.backtranslate = {}
		for k,v in pairs(options.translate) do
			options.backtranslate[v] = k
		end
	end
	if options.backtranslate and getmetatable(options.backtranslate) == nil then
		setmetatable(options.backtranslate, {
			__index = function(t, k)
				if options.translate[k] ~= k then
					return nil
				else
					return k
				end
			end
		})
	end

	--[[
	-- Get the argument tables. If we were passed a valid frame object, get the
	-- frame arguments (fargs) and the parent frame arguments (pargs), depending
	-- on the options set and on the parent frame's availability. If we weren't
	-- passed a valid frame object, we are being called from another Lua module
	-- or from the debug console, so assume that we were passed a table of args
	-- directly, and assign it to a new variable (luaArgs).
	--]]
	local fargs, pargs, luaArgs
	if type(frame.args) == 'table' and type(frame.getParent) == 'function' then
		if options.wrappers then
			--[[
			-- The wrappers option makes Module:Arguments look up arguments in
			-- either the frame argument table or the parent argument table, but
			-- not both. This means that users can use either the #invoke syntax
			-- or a wrapper template without the loss of performance associated
			-- with looking arguments up in both the frame and the parent frame.
			-- Module:Arguments will look up arguments in the parent frame
			-- if it finds the parent frame's title in options.wrapper;
			-- otherwise it will look up arguments in the frame object passed
			-- to getArgs.
			--]]
			local parent = frame:getParent()
			if not parent then
				fargs = frame.args
			else
				local title = parent:getTitle():gsub('/sandbox$', '')
				local found = false
				if matchesTitle(options.wrappers, title) then
					found = true
				elseif type(options.wrappers) == 'table' then
					for _,v in pairs(options.wrappers) do
						if matchesTitle(v, title) then
							found = true
							break
						end
					end
				end

				-- We test for false specifically here so that nil (the default) acts like true.
				if found or options.frameOnly == false then
					pargs = parent.args
				end
				if not found or options.parentOnly == false then
					fargs = frame.args
				end
			end
		else
			-- options.wrapper isn't set, so check the other options.
			if not options.parentOnly then
				fargs = frame.args
			end
			if not options.frameOnly then
				local parent = frame:getParent()
				pargs = parent and parent.args or nil
			end
		end
		if options.parentFirst then
			fargs, pargs = pargs, fargs
		end
	else
		luaArgs = frame
	end

	-- Set the order of precedence of the argument tables. If the variables are
	-- nil, nothing will be added to the table, which is how we avoid clashes
	-- between the frame/parent args and the Lua args.
	local argTables = {fargs}
	argTables[#argTables + 1] = pargs
	argTables[#argTables + 1] = luaArgs

	--[[
	-- Generate the tidyVal function. If it has been specified by the user, we
	-- use that; if not, we choose one of four functions depending on the
	-- options chosen. This is so that we don't have to call the options table
	-- every time the function is called.
	--]]
	local tidyVal = options.valueFunc
	if tidyVal then
		if type(tidyVal) ~= 'function' then
			error(
				"bad value assigned to option 'valueFunc'"
					.. '(function expected, got '
					.. type(tidyVal)
					.. ')',
				2
			)
		end
	elseif options.trim ~= false then
		if options.removeBlanks ~= false then
			tidyVal = tidyValDefault
		else
			tidyVal = tidyValTrimOnly
		end
	else
		if options.removeBlanks ~= false then
			tidyVal = tidyValRemoveBlanksOnly
		else
			tidyVal = tidyValNoChange
		end
	end

	--[[
	-- Set up the args, metaArgs and nilArgs tables. args will be the one
	-- accessed from functions, and metaArgs will hold the actual arguments. Nil
	-- arguments are memoized in nilArgs, and the metatable connects all of them
	-- together.
	--]]
	local args, metaArgs, nilArgs, metatable = {}, {}, {}, {}
	setmetatable(args, metatable)

	local function mergeArgs(tables)
		--[[
		-- Accepts multiple tables as input and merges their keys and values
		-- into one table. If a value is already present it is not overwritten;
		-- tables listed earlier have precedence. We are also memoizing nil
		-- values, which can be overwritten if they are 's' (soft).
		--]]
		for _, t in ipairs(tables) do
			for key, val in pairs(t) do
				if metaArgs[key] == nil and nilArgs[key] ~= 'h' then
					local tidiedVal = tidyVal(key, val)
					if tidiedVal == nil then
						nilArgs[key] = 's'
					else
						metaArgs[key] = tidiedVal
					end
				end
			end
		end
	end

	--[[
	-- Define metatable behaviour. Arguments are memoized in the metaArgs table,
	-- and are only fetched from the argument tables once. Fetching arguments
	-- from the argument tables is the most resource-intensive step in this
	-- module, so we try and avoid it where possible. For this reason, nil
	-- arguments are also memoized, in the nilArgs table. Also, we keep a record
	-- in the metatable of when pairs and ipairs have been called, so we do not
	-- run pairs and ipairs on the argument tables more than once. We also do
	-- not run ipairs on fargs and pargs if pairs has already been run, as all
	-- the arguments will already have been copied over.
	--]]

	metatable.__index = function (t, key)
		--[[
		-- Fetches an argument when the args table is indexed. First we check
		-- to see if the value is memoized, and if not we try and fetch it from
		-- the argument tables. When we check memoization, we need to check
		-- metaArgs before nilArgs, as both can be non-nil at the same time.
		-- If the argument is not present in metaArgs, we also check whether
		-- pairs has been run yet. If pairs has already been run, we return nil.
		-- This is because all the arguments will have already been copied into
		-- metaArgs by the mergeArgs function, meaning that any other arguments
		-- must be nil.
		--]]
		if type(key) == 'string' then
			key = options.translate[key]
		end
		local val = metaArgs[key]
		if val ~= nil then
			return val
		elseif metatable.donePairs or nilArgs[key] then
			return nil
		end
		for _, argTable in ipairs(argTables) do
			local argTableVal = tidyVal(key, argTable[key])
			if argTableVal ~= nil then
				metaArgs[key] = argTableVal
				return argTableVal
			end
		end
		nilArgs[key] = 'h'
		return nil
	end

	metatable.__newindex = function (t, key, val)
		-- This function is called when a module tries to add a new value to the
		-- args table, or tries to change an existing value.
		if type(key) == 'string' then
			key = options.translate[key]
		end
		if options.readOnly then
			error(
				'could not write to argument table key "'
					.. tostring(key)
					.. '"; the table is read-only',
				2
			)
		elseif options.noOverwrite and args[key] ~= nil then
			error(
				'could not write to argument table key "'
					.. tostring(key)
					.. '"; overwriting existing arguments is not permitted',
				2
			)
		elseif val == nil then
			--[[
			-- If the argument is to be overwritten with nil, we need to erase
			-- the value in metaArgs, so that __index, __pairs and __ipairs do
			-- not use a previous existing value, if present; and we also need
			-- to memoize the nil in nilArgs, so that the value isn't looked
			-- up in the argument tables if it is accessed again.
			--]]
			metaArgs[key] = nil
			nilArgs[key] = 'h'
		else
			metaArgs[key] = val
		end
	end

	local function translatenext(invariant)
		local k, v = next(invariant.t, invariant.k)
		invariant.k = k
		if k == nil then
			return nil
		elseif type(k) ~= 'string' or not options.backtranslate then
			return k, v
		else
			local backtranslate = options.backtranslate[k]
			if backtranslate == nil then
				-- Skip this one. This is a tail call, so this won't cause stack overflow
				return translatenext(invariant)
			else
				return backtranslate, v
			end
		end
	end

	metatable.__pairs = function ()
		-- Called when pairs is run on the args table.
		if not metatable.donePairs then
			mergeArgs(argTables)
			metatable.donePairs = true
		end
		return translatenext, { t = metaArgs }
	end

	local function inext(t, i)
		-- This uses our __index metamethod
		local v = t[i + 1]
		if v ~= nil then
			return i + 1, v
		end
	end

	metatable.__ipairs = function (t)
		-- Called when ipairs is run on the args table.
		return inext, t, 0
	end

	return args
end

return arguments</text>
    </revision>
  </page>
  <page>
    <title>Module:Color contrast</title>
    <ns>828</ns>
    <id>94</id>
    <revision>
      <id>3231</id>
      <parentid>3230</parentid>
      <timestamp>2019-01-30T06:29:03Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>52 revisions imported from [[:templatewiki:Module:Color_contrast]]</comment>
      <origin>3230</origin>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text bytes="6680" sha1="55bs9vv8hqsp9psicche4v82wnzh0ub" xml:space="preserve">--
-- This module implements 
--  {{Color contrast ratio}}
--  {{Greater color contrast ratio}}
--  {{ColorToLum}}
--  {{RGBColorToLum}}
--
local p = {}
local HTMLcolor = mw.loadData( 'Module:Color contrast/colors' )

local function sRGB ( v ) 
	if (v &lt;= 0.03928) then 
		v = v / 12.92
	else
		v = math.pow((v+0.055)/1.055, 2.4)
	end
	return v
end

local function rgbdec2lum( R, G, B )
	if ( 0 &lt;= R and R &lt; 256 and 0 &lt;= G and G &lt; 256 and 0 &lt;= B and B &lt; 256 ) then
		return 0.2126 * sRGB(R/255) + 0.7152 * sRGB(G/255) + 0.0722 * sRGB(B/255)
	else
		return ''
	end
end

local function hsl2lum( h, s, l )
	if ( 0 &lt;= h and h &lt; 360 and 0 &lt;= s and s &lt;= 1 and 0 &lt;= l and l &lt;= 1 ) then
		local c = (1 - math.abs(2*l - 1))*s
		local x = c*(1 - math.abs( math.fmod(h/60, 2) - 1) )
		local m = l - c/2

		local r, g, b = m, m, m
		if( 0 &lt;= h and h &lt; 60 ) then
			r = r + c
			g = g + x
		elseif( 60 &lt;= h and h &lt; 120 ) then
			r = r + x
			g = g + c
		elseif( 120 &lt;= h and h &lt; 180 ) then
			g = g + c
			b = b + x
		elseif( 180 &lt;= h and h &lt; 240 ) then
			g = g + x
			b = b + c
		elseif( 240 &lt;= h and h &lt; 300 ) then
			r = r + x
			b = b + c
		elseif( 300 &lt;= h and h &lt; 360 ) then
			r = r + c
			b = b + x
		end
		return rgbdec2lum(255*r, 255*g, 255*b)
	else
		return ''
	end
end

local function color2lum( c )

	if (c == nil) then
		return ''
	end

	-- html '#' entity
	c = c:gsub("&amp;#35;", "#")

	-- whitespace
	c = c:match( '^%s*(.-)[%s;]*$' )

	-- unstrip nowiki strip markers
	c = mw.text.unstripNoWiki(c)

	-- lowercase
	c = c:lower()

	-- first try to look it up
	local L = HTMLcolor[c]
	if (L ~= nil) then
		return L
	end

   	-- convert from hsl
   	if mw.ustring.match(c,'^hsl%([%s]*[0-9][0-9%.]*[%s]*,[%s]*[0-9][0-9%.]*%%[%s]*,[%s]*[0-9][0-9%.]*%%[%s]*%)$') then
		local h, s, l = mw.ustring.match(c,'^hsl%([%s]*([0-9][0-9%.]*)[%s]*,[%s]*([0-9][0-9%.]*)%%[%s]*,[%s]*([0-9][0-9%.]*)%%[%s]*%)$')
		return hsl2lum(tonumber(h), tonumber(s)/100, tonumber(l)/100)
   	end

   	-- convert from rgb
   	if mw.ustring.match(c,'^rgb%([%s]*[0-9][0-9]*[%s]*,[%s]*[0-9][0-9]*[%s]*,[%s]*[0-9][0-9]*[%s]*%)$') then
		local R, G, B = mw.ustring.match(c,'^rgb%([%s]*([0-9][0-9]*)[%s]*,[%s]*([0-9][0-9]*)[%s]*,[%s]*([0-9][0-9]*)[%s]*%)$')
		return rgbdec2lum(tonumber(R), tonumber(G), tonumber(B))
   	end

   	-- convert from rgb percent
   	if mw.ustring.match(c,'^rgb%([%s]*[0-9][0-9%.]*%%[%s]*,[%s]*[0-9][0-9%.]*%%[%s]*,[%s]*[0-9][0-9%.]*%%[%s]*%)$') then
		local R, G, B = mw.ustring.match(c,'^rgb%([%s]*([0-9][0-9%.]*)%%[%s]*,[%s]*([0-9][0-9%.]*)%%[%s]*,[%s]*([0-9][0-9%.]*)%%[%s]*%)$')
		return rgbdec2lum(255*tonumber(R)/100, 255*tonumber(G)/100, 255*tonumber(B)/100)
   	end

	-- remove leading # (if there is one) and whitespace
	c = mw.ustring.match(c, '^[%s#]*([a-f0-9]*)[%s]*$')

	-- split into rgb
	local cs = mw.text.split(c or '', '')
	if( #cs == 6 ) then
		local R = 16*tonumber('0x' .. cs[1]) + tonumber('0x' .. cs[2])
		local G = 16*tonumber('0x' .. cs[3]) + tonumber('0x' .. cs[4])
		local B = 16*tonumber('0x' .. cs[5]) + tonumber('0x' .. cs[6])

		return rgbdec2lum(R, G, B)
	elseif ( #cs == 3 ) then
		local R = 16*tonumber('0x' .. cs[1]) + tonumber('0x' .. cs[1])
		local G = 16*tonumber('0x' .. cs[2]) + tonumber('0x' .. cs[2])
		local B = 16*tonumber('0x' .. cs[3]) + tonumber('0x' .. cs[3])

		return rgbdec2lum(R, G, B)
	end

	-- failure, return blank
	return ''
end

function p._greatercontrast(args)
	local bias = tonumber(args['bias'] or '0') or 0
	local css = (args['css'] and args['css'] ~= '') and true or false
	local v1 = color2lum(args[1] or '')
	local c2 = args[2] or '#FFFFFF'
	local v2 = color2lum(c2)
	local c3 = args[3] or '#000000'
	local v3 = color2lum(c3)
	local ratio1 = -1;
	local ratio2 = -1;
	if (type(v1) == 'number' and type(v2) == 'number') then
		ratio1 = (v2 + 0.05)/(v1 + 0.05)
		ratio1 = (ratio1 &lt; 1) and 1/ratio1 or ratio1
	end
	if (type(v1) == 'number' and type(v3) == 'number') then
		ratio2 = (v3 + 0.05)/(v1 + 0.05)
		ratio2 = (ratio2 &lt; 1) and 1/ratio2 or ratio2
	end
	
	if css then
		local c1 = args[1] or ''
		if mw.ustring.match(c1, '^[A-Fa-f0-9][A-Fa-f0-9][A-Fa-f0-9]$') or
			mw.ustring.match(c1, '^[A-Fa-f0-9][A-Fa-f0-9][A-Fa-f0-9][A-Fa-f0-9][A-Fa-f0-9][A-Fa-f0-9]$') then
				c1 = '#' .. c1
		end
		if mw.ustring.match(c2, '^[A-Fa-f0-9][A-Fa-f0-9][A-Fa-f0-9]$') or
			mw.ustring.match(c2, '^[A-Fa-f0-9][A-Fa-f0-9][A-Fa-f0-9][A-Fa-f0-9][A-Fa-f0-9][A-Fa-f0-9]$') then
				c2 = '#' .. c2
		end
		if mw.ustring.match(v3, '^[A-Fa-f0-9][A-Fa-f0-9][A-Fa-f0-9]$') or
			mw.ustring.match(v3, '^[A-Fa-f0-9][A-Fa-f0-9][A-Fa-f0-9][A-Fa-f0-9][A-Fa-f0-9][A-Fa-f0-9]$') then
				c3 = '#' .. c3
		end
		return 'background-color:' .. c1 .. '; color:' .. ((ratio1 &gt; 0) and (ratio2 &gt; 0) and ((ratio1 + bias &gt; ratio2) and c2 or c3) or '') .. ';'
	end
	
	return (ratio1 &gt; 0) and (ratio2 &gt; 0) and ((ratio1 + bias &gt; ratio2) and c2 or c3) or ''
end

function p._ratio(args)
	local v1 = color2lum(args[1])
	local v2 = color2lum(args[2])
	if (type(v1) == 'number' and type(v2) == 'number') then
		-- v1 should be the brighter of the two.
		if v2 &gt; v1 then
			v1, v2 = v2, v1
		end
		return (v1 + 0.05)/(v2 + 0.05)
	else
		return args['error'] or '?'
	end
end

function p._styleratio(args)
	local style = (args[1] or ''):lower()
	local bg, fg = 'white', 'black'
	local lum_bg, lum_fg = 1, 0

	if args[2] then
		local lum = color2lum(args[2])
		if lum ~= '' then bg, lum_bg = args[2], lum end
	end
	if args[3] then
		local lum = color2lum(args[3])
		if lum ~= '' then fg, lum_fg = args[3], lum end
	end

	local slist = mw.text.split(mw.ustring.gsub(mw.ustring.gsub(style or '', '&amp;#[Xx]23;', '#'), '&amp;#35;', '#'), ';')
	for k = 1,#slist do
		local s = slist[k]
		local k,v = s:match( '^[%s]*([^:]-):([^:]-)[%s;]*$' )
		k = k or ''
		v = v or ''
		if (k:match('^[%s]*(background)[%s]*$') or k:match('^[%s]*(background%-color)[%s]*$')) then
			local lum = color2lum(v)
			if( lum ~= '' ) then bg, lum_bg = v, lum end
		elseif (k:match('^[%s]*(color)[%s]*$')) then
			local lum = color2lum(v)
			if( lum ~= '' ) then bg, lum_fg = v, lum end
		end
	end
	if lum_bg &gt; lum_fg then
		return (lum_bg + 0.05)/(lum_fg + 0.05)
	else
		return (lum_fg + 0.05)/(lum_bg + 0.05)
	end
end

function p.lum(frame)
	return color2lum(frame.args[1] or frame:getParent().args[1])
end

function p.ratio(frame)
	local args = frame.args[1] and frame.args or frame:getParent().args
	return p._ratio(args)
end

function p.styleratio(frame)
	local args = frame.args[1] and frame.args or frame:getParent().args
	return p._styleratio(args)
end

function p.greatercontrast(frame)
	local args = frame.args[1] and frame.args or frame:getParent().args
	return p._greatercontrast(args)
end

return p</text>
    </revision>
  </page>
  <page>
    <title>Module:Color contrast/colors</title>
    <ns>828</ns>
    <id>95</id>
    <revision>
      <id>3239</id>
      <parentid>3233</parentid>
      <timestamp>2019-01-30T06:29:03Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>7 revisions imported from [[:templatewiki:Module:Color_contrast/colors]]</comment>
      <origin>3233</origin>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text bytes="6119" sha1="chi69ar1btd4wp6xbk3uez6sfu0vipn" xml:space="preserve">return {
	aliceblue            = 0.92880068253475,
	antiquewhite         = 0.84646951707754,
	aqua                 = 0.7874,
	aquamarine           = 0.8078549208338,
	azure                = 0.97265264954166,
	beige                = 0.8988459998705,
	bisque               = 0.80732327372979,
	black                = 0,
	blanchedalmond       = 0.85084439608156,
	blue                 = 0.0722,
	blueviolet           = 0.12622014321946,
	brown                = 0.098224287876511,
	burlywood            = 0.51559844533893,
	cadetblue            = 0.29424681085422,
	chartreuse           = 0.76032025902623,
	chocolate            = 0.23898526114557,
	coral                = 0.37017930872924,
	cornflowerblue       = 0.30318641994179,
	cornsilk             = 0.93562110372965,
	crimson              = 0.16042199953026,
	cyan                 = 0.7874,
	darkblue             = 0.018640801980939,
	darkcyan             = 0.20329317839046,
	darkgoldenrod        = 0.27264703559993,
	darkgray             = 0.39675523072563,
	darkgreen            = 0.091143429047575,
	darkgrey             = 0.39675523072563,
	darkkhaki            = 0.45747326349994,
	darkmagenta          = 0.07353047651207,
	darkolivegreen       = 0.12651920884889,
	darkorange           = 0.40016167026524,
	darkorchid           = 0.13413142174857,
	darkred              = 0.054889674531132,
	darksalmon           = 0.40541471563381,
	darkseagreen         = 0.43789249325969,
	darkslateblue        = 0.065792846227988,
	darkslategray        = 0.067608151928044,
	darkslategrey        = 0.067608151928044,
	darkturquoise        = 0.4874606277449,
	darkviolet           = 0.10999048339343,
	deeppink             = 0.23866895828276,
	deepskyblue          = 0.44481603395575,
	dimgray              = 0.14126329114027,
	dimgrey              = 0.14126329114027,
	dodgerblue           = 0.27442536991456,
	firebrick            = 0.10724525535015,
	floralwhite          = 0.95922484825004,
	forestgreen          = 0.18920812076002,
	fuchsia              = 0.2848,
	gainsboro            = 0.71569350050648,
	ghostwhite           = 0.94311261886323,
	gold                 = 0.69860877428159,
	goldenrod            = 0.41919977809569,
	gray                 = 0.2158605001139,
	green                = 0.15438342968146,
	greenyellow          = 0.80609472611453,
	grey                 = 0.2158605001139,
	honeydew             = 0.96336535554782,
	hotpink              = 0.34658438169715,
	indianred            = 0.21406134963884,
	indigo               = 0.03107561486337,
	ivory                = 0.99071270600615,
	khaki                = 0.77012343394121,
	lavender             = 0.80318750514521,
	lavenderblush        = 0.90172748631046,
	lawngreen            = 0.73905893124963,
	lemonchiffon         = 0.94038992245622,
	lightblue            = 0.63709141280807,
	lightcoral           = 0.35522120733135,
	lightcyan            = 0.94587293494829,
	lightgoldenrodyellow = 0.93348351018297,
	lightgray            = 0.65140563741982,
	lightgreen           = 0.69091979956865,
	lightgrey            = 0.65140563741982,
	lightpink            = 0.58566152734898,
	lightsalmon          = 0.4780675225206,
	lightseagreen        = 0.35050145117042,
	lightskyblue         = 0.56195637618331,
	lightslategray       = 0.23830165007287,
	lightslategrey       = 0.23830165007287,
	lightsteelblue       = 0.53983888284666,
	lightyellow          = 0.98161818392882,
	lime                 = 0.7152,
	limegreen            = 0.44571042246098,
	linen                = 0.88357340984379,
	magenta              = 0.2848,
	maroon               = 0.045891942324215,
	mediumaquamarine     = 0.49389703310801,
	mediumblue           = 0.044077780212328,
	mediumorchid         = 0.21639251153773,
	mediumpurple         = 0.22905858091648,
	mediumseagreen       = 0.34393112338131,
	mediumslateblue      = 0.20284629471622,
	mediumspringgreen    = 0.70704308194184,
	mediumturquoise      = 0.5133827926448,
	mediumvioletred      = 0.14371899849357,
	midnightblue         = 0.02071786635086,
	mintcream            = 0.97834604947588,
	mistyrose            = 0.82183047859185,
	moccasin             = 0.80083000991567,
	navajowhite          = 0.76519682342785,
	navy                 = 0.015585128108224,
	oldlace              = 0.91900633405549,
	olive                = 0.20027537200568,
	olivedrab            = 0.22593150951929,
	orange               = 0.4817026703631,
	orangered            = 0.25516243753416,
	orchid               = 0.31348806761439,
	palegoldenrod        = 0.78792647887614,
	palegreen            = 0.77936759006353,
	paleturquoise        = 0.76436077921714,
	palevioletred        = 0.28754994117889,
	papayawhip           = 0.87797100199835,
	peachpuff            = 0.74905589878251,
	peru                 = 0.30113074877936,
	pink                 = 0.63271070702466,
	plum                 = 0.45734221587969,
	powderblue           = 0.68254586500605,
	purple               = 0.061477070432439,
	rebeccapurple        = 0.07492341159447,
	red                  = 0.2126,
	rosybrown            = 0.32319457649407,
	royalblue            = 0.16663210743188,
	saddlebrown          = 0.097922285020521,
	salmon               = 0.36977241527596,
	sandybrown           = 0.46628543696283,
	seagreen             = 0.19734199706275,
	seashell             = 0.92737862206922,
	sienna               = 0.13697631337098,
	silver               = 0.52711512570581,
	skyblue              = 0.55291668518184,
	slateblue            = 0.14784278062136,
	slategray            = 0.20896704076536,
	slategrey            = 0.20896704076536,
	snow                 = 0.96533341834849,
	springgreen          = 0.73052306068529,
	steelblue            = 0.20562642207625,
	tan                  = 0.48237604163921,
	teal                 = 0.16996855778968,
	thistle              = 0.56818401093733,
	tomato               = 0.30638612719415,
	turquoise            = 0.5895536427578,
	violet               = 0.40315452986676,
	wheat                = 0.74909702820482,
	white                = 1,
	whitesmoke           = 0.91309865179342,
	yellow               = 0.9278,
	yellowgreen          = 0.50762957208707,
}</text>
    </revision>
  </page>
  <page>
    <title>Module:Documentation</title>
    <ns>828</ns>
    <id>96</id>
    <revision>
      <id>3386</id>
      <parentid>3385</parentid>
      <timestamp>2019-01-30T06:29:06Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>146 revisions imported from [[:templatewiki:Module:Documentation]]</comment>
      <origin>3385</origin>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text bytes="36685" sha1="jf2f51u5rzim7qgb93sv92cvfe6ak0s" xml:space="preserve">-- This module implements {{documentation}}.

-- Get required modules.
local getArgs = require('Module:Arguments').getArgs
local messageBox = require('Module:Message box')

-- Get the config table.
local cfg = mw.loadData('Module:Documentation/config')

local p = {}

-- Often-used functions.
local ugsub = mw.ustring.gsub

----------------------------------------------------------------------------
-- Helper functions
--
-- These are defined as local functions, but are made available in the p
-- table for testing purposes.
----------------------------------------------------------------------------

local function message(cfgKey, valArray, expectType)
	--[[
	-- Gets a message from the cfg table and formats it if appropriate.
	-- The function raises an error if the value from the cfg table is not
	-- of the type expectType. The default type for expectType is 'string'.
	-- If the table valArray is present, strings such as $1, $2 etc. in the
	-- message are substituted with values from the table keys [1], [2] etc.
	-- For example, if the message "foo-message" had the value 'Foo $2 bar $1.',
	-- message('foo-message', {'baz', 'qux'}) would return "Foo qux bar baz."
	--]]
	local msg = cfg[cfgKey]
	expectType = expectType or 'string'
	if type(msg) ~= expectType then
		error('message: type error in message cfg.' .. cfgKey .. ' (' .. expectType .. ' expected, got ' .. type(msg) .. ')', 2)
	end
	if not valArray then
		return msg
	end

	local function getMessageVal(match)
		match = tonumber(match)
		return valArray[match] or error('message: no value found for key $' .. match .. ' in message cfg.' .. cfgKey, 4)
	end

	local ret = ugsub(msg, '$([1-9][0-9]*)', getMessageVal)
	return ret
end

p.message = message

local function makeWikilink(page, display)
	if display then
		return mw.ustring.format('[[%s|%s]]', page, display)
	else
		return mw.ustring.format('[[%s]]', page)
	end
end

p.makeWikilink = makeWikilink

local function makeCategoryLink(cat, sort)
	local catns = mw.site.namespaces[14].name
	return makeWikilink(catns .. ':' .. cat, sort)
end

p.makeCategoryLink = makeCategoryLink

local function makeUrlLink(url, display)
	return mw.ustring.format('[%s %s]', url, display)
end

p.makeUrlLink = makeUrlLink

local function makeToolbar(...)
	local ret = {}
	local lim = select('#', ...)
	if lim &lt; 1 then
		return nil
	end
	for i = 1, lim do
		ret[#ret + 1] = select(i, ...)
	end
	return '&lt;small style="font-style: normal;"&gt;(' .. table.concat(ret, ' &amp;#124; ') .. ')&lt;/small&gt;'
end	

p.makeToolbar = makeToolbar

----------------------------------------------------------------------------
-- Argument processing
----------------------------------------------------------------------------

local function makeInvokeFunc(funcName)
	return function (frame)
		local args = getArgs(frame, {
			valueFunc = function (key, value)
				if type(value) == 'string' then
					value = value:match('^%s*(.-)%s*$') -- Remove whitespace.
					if key == 'heading' or value ~= '' then
						return value
					else
						return nil
					end
				else
					return value
				end
			end
		})
		return p[funcName](args)
	end
end

----------------------------------------------------------------------------
-- Main function
----------------------------------------------------------------------------

p.main = makeInvokeFunc('_main')

function p._main(args)
	--[[
	-- This function defines logic flow for the module.
	-- @args - table of arguments passed by the user
	-- 
	-- Messages:
	-- 'main-div-id' --&gt; 'template-documentation'
	-- 'main-div-classes' --&gt; 'template-documentation iezoomfix'
	--]]
	local env = p.getEnvironment(args)
	local root = mw.html.create()
	root
		:wikitext(p.protectionTemplate(env))
		:wikitext(p.sandboxNotice(args, env))
		 -- This div tag is from {{documentation/start box}}, but moving it here
		 -- so that we don't have to worry about unclosed tags.
		:tag('div')
			:attr('id', message('main-div-id'))
			:addClass(message('main-div-classes'))
			:newline()
			:wikitext(p._startBox(args, env))
			:wikitext(p._content(args, env))
			:tag('div')
				:css('clear', 'both') -- So right or left floating items don't stick out of the doc box.
				:newline()
				:done()
			:done()
		:wikitext(p._endBox(args, env))
		:wikitext(p.addTrackingCategories(env))
	return tostring(root)
end

----------------------------------------------------------------------------
-- Environment settings
----------------------------------------------------------------------------

function p.getEnvironment(args)
	--[[
	-- Returns a table with information about the environment, including title objects and other namespace- or
	-- path-related data.
	-- @args - table of arguments passed by the user
	--
	-- Title objects include:
	-- env.title - the page we are making documentation for (usually the current title)
	-- env.templateTitle - the template (or module, file, etc.)
	-- env.docTitle - the /doc subpage.
	-- env.sandboxTitle - the /sandbox subpage.
	-- env.testcasesTitle - the /testcases subpage.
	-- env.printTitle - the print version of the template, located at the /Print subpage.
	--
	-- Data includes:
	-- env.protectionLevels - the protection levels table of the title object.
	-- env.subjectSpace - the number of the title's subject namespace.
	-- env.docSpace - the number of the namespace the title puts its documentation in.
	-- env.docpageBase - the text of the base page of the /doc, /sandbox and /testcases pages, with namespace.
	-- env.compareUrl - URL of the Special:ComparePages page comparing the sandbox with the template.
	-- 
	-- All table lookups are passed through pcall so that errors are caught. If an error occurs, the value
	-- returned will be nil.
	--]]
	
	local env, envFuncs = {}, {}

	-- Set up the metatable. If triggered we call the corresponding function in the envFuncs table. The value
	-- returned by that function is memoized in the env table so that we don't call any of the functions
	-- more than once. (Nils won't be memoized.)
	setmetatable(env, {
		__index = function (t, key)
			local envFunc = envFuncs[key]
			if envFunc then
				local success, val = pcall(envFunc)
				if success then
					env[key] = val -- Memoise the value.
					return val
				end
			end
			return nil
		end
	})	

	function envFuncs.title()
		-- The title object for the current page, or a test page passed with args.page.
		local title
		local titleArg = args.page
		if titleArg then
			title = mw.title.new(titleArg)
		else
			title = mw.title.getCurrentTitle()
		end
		return title
	end

	function envFuncs.templateTitle()
		--[[
		-- The template (or module, etc.) title object.
		-- Messages:
		-- 'sandbox-subpage' --&gt; 'sandbox'
		-- 'testcases-subpage' --&gt; 'testcases'
		--]]
		local subjectSpace = env.subjectSpace
		local title = env.title
		local subpage = title.subpageText
		if subpage == message('sandbox-subpage') or subpage == message('testcases-subpage') then
			return mw.title.makeTitle(subjectSpace, title.baseText)
		else
			return mw.title.makeTitle(subjectSpace, title.text)
		end
	end

	function envFuncs.docTitle()
		--[[
		-- Title object of the /doc subpage.
		-- Messages:
		-- 'doc-subpage' --&gt; 'doc'
		--]]
		local title = env.title
		local docname = args[1] -- User-specified doc page.
		local docpage
		if docname then
			docpage = docname
		else
			docpage = env.docpageBase .. '/' .. message('doc-subpage')
		end
		return mw.title.new(docpage)
	end
	
	function envFuncs.sandboxTitle()
		--[[
		-- Title object for the /sandbox subpage.
		-- Messages:
		-- 'sandbox-subpage' --&gt; 'sandbox'
		--]]
		return mw.title.new(env.docpageBase .. '/' .. message('sandbox-subpage'))
	end
	
	function envFuncs.testcasesTitle()
		--[[
		-- Title object for the /testcases subpage.
		-- Messages:
		-- 'testcases-subpage' --&gt; 'testcases'
		--]]
		return mw.title.new(env.docpageBase .. '/' .. message('testcases-subpage'))
	end
	
	function envFuncs.printTitle()
		--[[
		-- Title object for the /Print subpage.
		-- Messages:
		-- 'print-subpage' --&gt; 'Print'
		--]]
		return env.templateTitle:subPageTitle(message('print-subpage'))
	end

	function envFuncs.protectionLevels()
		-- The protection levels table of the title object.
		return env.title.protectionLevels
	end

	function envFuncs.subjectSpace()
		-- The subject namespace number.
		return mw.site.namespaces[env.title.namespace].subject.id
	end

	function envFuncs.docSpace()
		-- The documentation namespace number. For most namespaces this is the same as the
		-- subject namespace. However, pages in the Article, File, MediaWiki or Category
		-- namespaces must have their /doc, /sandbox and /testcases pages in talk space.
		local subjectSpace = env.subjectSpace
		if subjectSpace == 0 or subjectSpace == 6 or subjectSpace == 8 or subjectSpace == 14 then
			return subjectSpace + 1
		else
			return subjectSpace
		end
	end

	function envFuncs.docpageBase()
		-- The base page of the /doc, /sandbox, and /testcases subpages.
		-- For some namespaces this is the talk page, rather than the template page.
		local templateTitle = env.templateTitle
		local docSpace = env.docSpace
		local docSpaceText = mw.site.namespaces[docSpace].name
		-- Assemble the link. docSpace is never the main namespace, so we can hardcode the colon.
		return docSpaceText .. ':' .. templateTitle.text
	end
	
	function envFuncs.compareUrl()
		-- Diff link between the sandbox and the main template using [[Special:ComparePages]].
		local templateTitle = env.templateTitle
		local sandboxTitle = env.sandboxTitle
		if templateTitle.exists and sandboxTitle.exists then
			local compareUrl = mw.uri.fullUrl(
				'Special:ComparePages',
				{page1 = templateTitle.prefixedText, page2 = sandboxTitle.prefixedText}
			)
			return tostring(compareUrl)
		else
			return nil
		end
	end		

	return env
end	

----------------------------------------------------------------------------
-- Auxiliary templates
----------------------------------------------------------------------------

function p.sandboxNotice(args, env)
	--[=[
	-- Generates a sandbox notice for display above sandbox pages.
	-- @args - a table of arguments passed by the user
	-- @env - environment table containing title objects, etc., generated with p.getEnvironment
	-- 
	-- Messages:
	-- 'sandbox-notice-image' --&gt; '[[Image:Sandbox.svg|50px|alt=|link=]]'
	-- 'sandbox-notice-blurb' --&gt; 'This is the $1 for $2.'
	-- 'sandbox-notice-diff-blurb' --&gt; 'This is the $1 for $2 ($3).'
	-- 'sandbox-notice-pagetype-template' --&gt; '[[Wikipedia:Template test cases|template sandbox]] page'
	-- 'sandbox-notice-pagetype-module' --&gt; '[[Wikipedia:Template test cases|module sandbox]] page'
	-- 'sandbox-notice-pagetype-other' --&gt; 'sandbox page'
	-- 'sandbox-notice-compare-link-display' --&gt; 'diff'
	-- 'sandbox-notice-testcases-blurb' --&gt; 'See also the companion subpage for $1.'
	-- 'sandbox-notice-testcases-link-display' --&gt; 'test cases'
	-- 'sandbox-category' --&gt; 'Template sandboxes'
	--]=]
	local title = env.title
	local sandboxTitle = env.sandboxTitle
	local templateTitle = env.templateTitle
	local subjectSpace = env.subjectSpace
	if not (subjectSpace and title and sandboxTitle and templateTitle and mw.title.equals(title, sandboxTitle)) then
		return nil
	end
	-- Build the table of arguments to pass to {{ombox}}. We need just two fields, "image" and "text".
	local omargs = {}
	omargs.image = message('sandbox-notice-image')
	-- Get the text. We start with the opening blurb, which is something like
	-- "This is the template sandbox for [[Template:Foo]] (diff)."
	local text = ''
	local pagetype
	if subjectSpace == 10 then
		pagetype = message('sandbox-notice-pagetype-template')
	elseif subjectSpace == 828 then
		pagetype = message('sandbox-notice-pagetype-module')
	else
		pagetype = message('sandbox-notice-pagetype-other')
	end
	local templateLink = makeWikilink(templateTitle.prefixedText)
	local compareUrl = env.compareUrl
	if compareUrl then
		local compareDisplay = message('sandbox-notice-compare-link-display')
		local compareLink = makeUrlLink(compareUrl, compareDisplay)
		text = text .. message('sandbox-notice-diff-blurb', {pagetype, templateLink, compareLink})
	else
		text = text .. message('sandbox-notice-blurb', {pagetype, templateLink})
	end
	-- Get the test cases page blurb if the page exists. This is something like
	-- "See also the companion subpage for [[Template:Foo/testcases|test cases]]."
	local testcasesTitle = env.testcasesTitle
	if testcasesTitle and testcasesTitle.exists then
		if testcasesTitle.namespace == mw.site.namespaces.Module.id then
			local testcasesLinkDisplay = message('sandbox-notice-testcases-link-display')
			local testcasesRunLinkDisplay = message('sandbox-notice-testcases-run-link-display')
			local testcasesLink = makeWikilink(testcasesTitle.prefixedText, testcasesLinkDisplay)
			local testcasesRunLink = makeWikilink(testcasesTitle.talkPageTitle.prefixedText, testcasesRunLinkDisplay)
			text = text .. '&lt;br /&gt;' .. message('sandbox-notice-testcases-run-blurb', {testcasesLink, testcasesRunLink})
		else
			local testcasesLinkDisplay = message('sandbox-notice-testcases-link-display')
			local testcasesLink = makeWikilink(testcasesTitle.prefixedText, testcasesLinkDisplay)
			text = text .. '&lt;br /&gt;' .. message('sandbox-notice-testcases-blurb', {testcasesLink})
		end
	end
	-- Add the sandbox to the sandbox category.
	text = text .. makeCategoryLink(message('sandbox-category'))
	omargs.text = text
	local ret = '&lt;div style="clear: both;"&gt;&lt;/div&gt;'
	ret = ret .. messageBox.main('ombox', omargs)
	return ret
end

function p.protectionTemplate(env)
	-- Generates the padlock icon in the top right.
	-- @env - environment table containing title objects, etc., generated with p.getEnvironment
	-- Messages:
	-- 'protection-template' --&gt; 'pp-template'
	-- 'protection-template-args' --&gt; {docusage = 'yes'}
	local protectionLevels, mProtectionBanner
	local title = env.title
	protectionLevels = env.protectionLevels
	if not protectionLevels then
		return nil
	end
	local editProt = protectionLevels.edit and protectionLevels.edit[1]
	local moveProt = protectionLevels.move and protectionLevels.move[1]
	if editProt then
		-- The page is edit-protected.
		mProtectionBanner = require('Module:Protection banner')
		local reason = message('protection-reason-edit')
		return mProtectionBanner._main{reason, small = true}
	elseif moveProt and moveProt ~= 'autoconfirmed' then
		-- The page is move-protected but not edit-protected. Exclude move
		-- protection with the level "autoconfirmed", as this is equivalent to
		-- no move protection at all.
		mProtectionBanner = require('Module:Protection banner')
		return mProtectionBanner._main{action = 'move', small = true}
	else
		return nil
	end
end

----------------------------------------------------------------------------
-- Start box
----------------------------------------------------------------------------

p.startBox = makeInvokeFunc('_startBox')

function p._startBox(args, env)
	--[[
	-- This function generates the start box.
	-- @args - a table of arguments passed by the user
	-- @env - environment table containing title objects, etc., generated with p.getEnvironment
	-- 
	-- The actual work is done by p.makeStartBoxLinksData and p.renderStartBoxLinks which make
	-- the [view] [edit] [history] [purge] links, and by p.makeStartBoxData and p.renderStartBox
	-- which generate the box HTML.
	--]]
	env = env or p.getEnvironment(args)
	local links
	local content = args.content
	if not content then
		-- No need to include the links if the documentation is on the template page itself.
		local linksData = p.makeStartBoxLinksData(args, env)
		if linksData then
			links = p.renderStartBoxLinks(linksData)
		end
	end
	-- Generate the start box html.
	local data = p.makeStartBoxData(args, env, links)
	if data then
		return p.renderStartBox(data)
	else
		-- User specified no heading.
		return nil
	end
end

function p.makeStartBoxLinksData(args, env)
	--[[
	-- Does initial processing of data to make the [view] [edit] [history] [purge] links.
	-- @args - a table of arguments passed by the user
	-- @env - environment table containing title objects, etc., generated with p.getEnvironment
	-- 
	-- Messages:
	-- 'view-link-display' --&gt; 'view'
	-- 'edit-link-display' --&gt; 'edit'
	-- 'history-link-display' --&gt; 'history'
	-- 'purge-link-display' --&gt; 'purge'
	-- 'file-docpage-preload' --&gt; 'Template:Documentation/preload-filespace'
	-- 'module-preload' --&gt; 'Template:Documentation/preload-module-doc'
	-- 'docpage-preload' --&gt; 'Template:Documentation/preload'
	-- 'create-link-display' --&gt; 'create'
	--]]
	local subjectSpace = env.subjectSpace
	local title = env.title
	local docTitle = env.docTitle
	if not title or not docTitle then
		return nil
	end

	local data = {}
	data.title = title
	data.docTitle = docTitle
	-- View, display, edit, and purge links if /doc exists.
	data.viewLinkDisplay = message('view-link-display')
	data.editLinkDisplay = message('edit-link-display')
	data.historyLinkDisplay = message('history-link-display')
	data.purgeLinkDisplay = message('purge-link-display')
	-- Create link if /doc doesn't exist.
	local preload = args.preload
	if not preload then
		if subjectSpace == 6 then -- File namespace
			preload = message('file-docpage-preload')
		elseif subjectSpace == 828 then -- Module namespace
			preload = message('module-preload')
		else
			preload = message('docpage-preload')
		end
	end
	data.preload = preload
	data.createLinkDisplay = message('create-link-display')
	return data
end

function p.renderStartBoxLinks(data)
	--[[
	-- Generates the [view][edit][history][purge] or [create] links from the data table.
	-- @data - a table of data generated by p.makeStartBoxLinksData
	--]]
	
	local function escapeBrackets(s)
		-- Escapes square brackets with HTML entities.
		s = s:gsub('%[', '&amp;#91;') -- Replace square brackets with HTML entities.
		s = s:gsub('%]', '&amp;#93;')
		return s
	end

	local ret
	local docTitle = data.docTitle
	local title = data.title
	if docTitle.exists then
		local viewLink = makeWikilink(docTitle.prefixedText, data.viewLinkDisplay)
		local editLink = makeUrlLink(docTitle:fullUrl{action = 'edit'}, data.editLinkDisplay)
		local historyLink = makeUrlLink(docTitle:fullUrl{action = 'history'}, data.historyLinkDisplay)
		local purgeLink = makeUrlLink(title:fullUrl{action = 'purge'}, data.purgeLinkDisplay)
		ret = '[%s] [%s] [%s] [%s]'
		ret = escapeBrackets(ret)
		ret = mw.ustring.format(ret, viewLink, editLink, historyLink, purgeLink)
	else
		local createLink = makeUrlLink(docTitle:fullUrl{action = 'edit', preload = data.preload}, data.createLinkDisplay)
		ret = '[%s]'
		ret = escapeBrackets(ret)
		ret = mw.ustring.format(ret, createLink)
	end
	return ret
end

function p.makeStartBoxData(args, env, links)
	--[=[
	-- Does initial processing of data to pass to the start-box render function, p.renderStartBox.
	-- @args - a table of arguments passed by the user
	-- @env - environment table containing title objects, etc., generated with p.getEnvironment
	-- @links - a string containing the [view][edit][history][purge] links - could be nil if there's an error.
	--
	-- Messages:
	-- 'documentation-icon-wikitext' --&gt; '[[File:Test Template Info-Icon - Version (2).svg|50px|link=|alt=]]'
	-- 'template-namespace-heading' --&gt; 'Template documentation'
	-- 'module-namespace-heading' --&gt; 'Module documentation'
	-- 'file-namespace-heading' --&gt; 'Summary'
	-- 'other-namespaces-heading' --&gt; 'Documentation'
	-- 'start-box-linkclasses' --&gt; 'mw-editsection-like plainlinks'
	-- 'start-box-link-id' --&gt; 'doc_editlinks'
	-- 'testcases-create-link-display' --&gt; 'create'
	--]=]
	local subjectSpace = env.subjectSpace
	if not subjectSpace then
		-- Default to an "other namespaces" namespace, so that we get at least some output
		-- if an error occurs.
		subjectSpace = 2
	end
	local data = {}
	
	-- Heading
	local heading = args.heading -- Blank values are not removed.
	if heading == '' then
		-- Don't display the start box if the heading arg is defined but blank.
		return nil
	end
	if heading then
		data.heading = heading
	elseif subjectSpace == 10 then -- Template namespace
		data.heading = message('documentation-icon-wikitext') .. ' ' .. message('template-namespace-heading')
	elseif subjectSpace == 828 then -- Module namespace
		data.heading = message('documentation-icon-wikitext') .. ' ' .. message('module-namespace-heading')
	elseif subjectSpace == 6 then -- File namespace
		data.heading = message('file-namespace-heading')
	else
		data.heading = message('other-namespaces-heading')
	end
	
	-- Heading CSS
	local headingStyle = args['heading-style']
	if headingStyle then
		data.headingStyleText = headingStyle
	elseif subjectSpace == 10 then
		-- We are in the template or template talk namespaces.
		data.headingFontWeight = 'bold'
		data.headingFontSize = '125%'
	else
		data.headingFontSize = '150%'
	end
	
	-- Data for the [view][edit][history][purge] or [create] links.
	if links then
		data.linksClass = message('start-box-linkclasses')
		data.linksId = message('start-box-link-id')
		data.links = links
	end
	
	return data
end

function p.renderStartBox(data)
	-- Renders the start box html.
	-- @data - a table of data generated by p.makeStartBoxData.
	local sbox = mw.html.create('div')
	sbox
		:css('padding-bottom', '3px')
		:css('border-bottom', '1px solid #aaa')
		:css('margin-bottom', '1ex')
		:newline()
		:tag('span')
			:cssText(data.headingStyleText)
			:css('font-weight', data.headingFontWeight)
			:css('font-size', data.headingFontSize)
			:wikitext(data.heading)
	local links = data.links
	if links then
		sbox:tag('span')
			:addClass(data.linksClass)
			:attr('id', data.linksId)
			:wikitext(links)
	end
	return tostring(sbox)
end

----------------------------------------------------------------------------
-- Documentation content
----------------------------------------------------------------------------

p.content = makeInvokeFunc('_content')

function p._content(args, env)
	-- Displays the documentation contents
	-- @args - a table of arguments passed by the user
	-- @env - environment table containing title objects, etc., generated with p.getEnvironment
	env = env or p.getEnvironment(args)
	local docTitle = env.docTitle
	local content = args.content
	if not content and docTitle and docTitle.exists then
		content = args._content or mw.getCurrentFrame():expandTemplate{title = docTitle.prefixedText}
	end
	-- The line breaks below are necessary so that "=== Headings ===" at the start and end
	-- of docs are interpreted correctly.
	return '\n' .. (content or '') .. '\n' 
end

p.contentTitle = makeInvokeFunc('_contentTitle')

function p._contentTitle(args, env)
	env = env or p.getEnvironment(args)
	local docTitle = env.docTitle
	if not args.content and docTitle and docTitle.exists then
		return docTitle.prefixedText
	else
		return ''
	end
end

----------------------------------------------------------------------------
-- End box
----------------------------------------------------------------------------

p.endBox = makeInvokeFunc('_endBox')

function p._endBox(args, env)
	--[=[
	-- This function generates the end box (also known as the link box).
	-- @args - a table of arguments passed by the user
	-- @env - environment table containing title objects, etc., generated with p.getEnvironment
	-- 
	-- Messages:
	-- 'fmbox-id' --&gt; 'documentation-meta-data'
	-- 'fmbox-style' --&gt; 'background-color: #ecfcf4'
	-- 'fmbox-textstyle' --&gt; 'font-style: italic'
	-- 
	-- The HTML is generated by the {{fmbox}} template, courtesy of [[Module:Message box]].
	--]=]
	
	-- Get environment data.
	env = env or p.getEnvironment(args)
	local subjectSpace = env.subjectSpace
	local docTitle = env.docTitle
	if not subjectSpace or not docTitle then
		return nil
	end
		
	-- Check whether we should output the end box at all. Add the end
	-- box by default if the documentation exists or if we are in the
	-- user, module or template namespaces.
	local linkBox = args['link box']
	if linkBox == 'off'
		or not (
			docTitle.exists
			or subjectSpace == 2
			or subjectSpace == 828
			or subjectSpace == 10
		)
	then
		return nil
	end

	-- Assemble the arguments for {{fmbox}}.
	local fmargs = {}
	fmargs.id = message('fmbox-id') -- Sets 'documentation-meta-data'
	fmargs.image = 'none'
	fmargs.style = message('fmbox-style') -- Sets 'background-color: #ecfcf4'
	fmargs.textstyle = message('fmbox-textstyle') -- 'font-style: italic;'

	-- Assemble the fmbox text field.
	local text = ''
	if linkBox then
		text = text .. linkBox
	else
		text = text .. (p.makeDocPageBlurb(args, env) or '') -- "This documentation is transcluded from [[Foo]]." 
		if subjectSpace == 2 or subjectSpace == 10 or subjectSpace == 828 then
			-- We are in the user, template or module namespaces.
			-- Add sandbox and testcases links.
			-- "Editors can experiment in this template's sandbox and testcases pages."
			text = text .. (p.makeExperimentBlurb(args, env) or '')
			text = text .. '&lt;br /&gt;'
			if not args.content and not args[1] then
				-- "Please add categories to the /doc subpage."
				-- Don't show this message with inline docs or with an explicitly specified doc page,
				-- as then it is unclear where to add the categories.
				text = text .. (p.makeCategoriesBlurb(args, env) or '')
			end
			text = text .. ' ' .. (p.makeSubpagesBlurb(args, env) or '') --"Subpages of this template"
			local printBlurb = p.makePrintBlurb(args, env) -- Two-line blurb about print versions of templates.
			if printBlurb then
				text = text .. '&lt;br /&gt;' .. printBlurb
			end
		end
	end
	fmargs.text = text

	return messageBox.main('fmbox', fmargs)
end

function p.makeDocPageBlurb(args, env)
	--[=[
	-- Makes the blurb "This documentation is transcluded from [[Template:Foo]] (edit, history)".
	-- @args - a table of arguments passed by the user
	-- @env - environment table containing title objects, etc., generated with p.getEnvironment
	-- 
	-- Messages:
	-- 'edit-link-display' --&gt; 'edit'
	-- 'history-link-display' --&gt; 'history'
	-- 'transcluded-from-blurb' --&gt; 
	-- 'The above [[Wikipedia:Template documentation|documentation]] 
	-- is [[Wikipedia:Transclusion|transcluded]] from $1.'
	-- 'module-preload' --&gt; 'Template:Documentation/preload-module-doc'
	-- 'create-link-display' --&gt; 'create'
	-- 'create-module-doc-blurb' --&gt;
	-- 'You might want to $1 a documentation page for this [[Wikipedia:Lua|Scribunto module]].'
	--]=]
	local docTitle = env.docTitle
	if not docTitle then
		return nil
	end
	local ret
	if docTitle.exists then
		-- /doc exists; link to it.
		local docLink = makeWikilink(docTitle.prefixedText)
		local editUrl = docTitle:fullUrl{action = 'edit'}
		local editDisplay = message('edit-link-display')
		local editLink = makeUrlLink(editUrl, editDisplay)
		local historyUrl = docTitle:fullUrl{action = 'history'}
		local historyDisplay = message('history-link-display')
		local historyLink = makeUrlLink(historyUrl, historyDisplay)
		ret = message('transcluded-from-blurb', {docLink})
			.. ' '
			.. makeToolbar(editLink, historyLink)
			.. '&lt;br /&gt;'
	elseif env.subjectSpace == 828 then
		-- /doc does not exist; ask to create it.
		local createUrl = docTitle:fullUrl{action = 'edit', preload = message('module-preload')}
		local createDisplay = message('create-link-display')
		local createLink = makeUrlLink(createUrl, createDisplay)
		ret = message('create-module-doc-blurb', {createLink})
			.. '&lt;br /&gt;'
	end
	return ret
end

function p.makeExperimentBlurb(args, env)
	--[[
	-- Renders the text "Editors can experiment in this template's sandbox (edit | diff) and testcases (edit) pages."
	-- @args - a table of arguments passed by the user
	-- @env - environment table containing title objects, etc., generated with p.getEnvironment
	-- 
	-- Messages:
	-- 'sandbox-link-display' --&gt; 'sandbox'
	-- 'sandbox-edit-link-display' --&gt; 'edit'
	-- 'compare-link-display' --&gt; 'diff'
	-- 'module-sandbox-preload' --&gt; 'Template:Documentation/preload-module-sandbox'
	-- 'template-sandbox-preload' --&gt; 'Template:Documentation/preload-sandbox'
	-- 'sandbox-create-link-display' --&gt; 'create'
	-- 'mirror-edit-summary' --&gt; 'Create sandbox version of $1'
	-- 'mirror-link-display' --&gt; 'mirror'
	-- 'mirror-link-preload' --&gt; 'Template:Documentation/mirror'
	-- 'sandbox-link-display' --&gt; 'sandbox'
	-- 'testcases-link-display' --&gt; 'testcases'
	-- 'testcases-edit-link-display'--&gt; 'edit'
	-- 'template-sandbox-preload' --&gt; 'Template:Documentation/preload-sandbox'
	-- 'testcases-create-link-display' --&gt; 'create'
	-- 'testcases-link-display' --&gt; 'testcases'
	-- 'testcases-edit-link-display' --&gt; 'edit'
	-- 'module-testcases-preload' --&gt; 'Template:Documentation/preload-module-testcases'
	-- 'template-testcases-preload' --&gt; 'Template:Documentation/preload-testcases'
	-- 'experiment-blurb-module' --&gt; 'Editors can experiment in this module's $1 and $2 pages.'
	-- 'experiment-blurb-template' --&gt; 'Editors can experiment in this template's $1 and $2 pages.'
	--]]
	local subjectSpace = env.subjectSpace
	local templateTitle = env.templateTitle
	local sandboxTitle = env.sandboxTitle
	local testcasesTitle = env.testcasesTitle
	local templatePage = templateTitle.prefixedText
	if not subjectSpace or not templateTitle or not sandboxTitle or not testcasesTitle then
		return nil
	end
	-- Make links.
	local sandboxLinks, testcasesLinks
	if sandboxTitle.exists then
		local sandboxPage = sandboxTitle.prefixedText
		local sandboxDisplay = message('sandbox-link-display')
		local sandboxLink = makeWikilink(sandboxPage, sandboxDisplay)
		local sandboxEditUrl = sandboxTitle:fullUrl{action = 'edit'}
		local sandboxEditDisplay = message('sandbox-edit-link-display')
		local sandboxEditLink = makeUrlLink(sandboxEditUrl, sandboxEditDisplay)
		local compareUrl = env.compareUrl
		local compareLink
		if compareUrl then
			local compareDisplay = message('compare-link-display')
			compareLink = makeUrlLink(compareUrl, compareDisplay)
		end
		sandboxLinks = sandboxLink .. ' ' .. makeToolbar(sandboxEditLink, compareLink)
	else
		local sandboxPreload
		if subjectSpace == 828 then
			sandboxPreload = message('module-sandbox-preload')
		else
			sandboxPreload = message('template-sandbox-preload')
		end
		local sandboxCreateUrl = sandboxTitle:fullUrl{action = 'edit', preload = sandboxPreload}
		local sandboxCreateDisplay = message('sandbox-create-link-display')
		local sandboxCreateLink = makeUrlLink(sandboxCreateUrl, sandboxCreateDisplay)
		local mirrorSummary = message('mirror-edit-summary', {makeWikilink(templatePage)})
		local mirrorPreload = message('mirror-link-preload')
		local mirrorUrl = sandboxTitle:fullUrl{action = 'edit', preload = mirrorPreload, summary = mirrorSummary}
		if subjectSpace == 828 then
			mirrorUrl = sandboxTitle:fullUrl{action = 'edit', preload = templateTitle.prefixedText, summary = mirrorSummary}
		end
		local mirrorDisplay = message('mirror-link-display')
		local mirrorLink = makeUrlLink(mirrorUrl, mirrorDisplay)
		sandboxLinks = message('sandbox-link-display') .. ' ' .. makeToolbar(sandboxCreateLink, mirrorLink)
	end
	if testcasesTitle.exists then
		local testcasesPage = testcasesTitle.prefixedText
		local testcasesDisplay = message('testcases-link-display')
		local testcasesLink = makeWikilink(testcasesPage, testcasesDisplay)
		local testcasesEditUrl = testcasesTitle:fullUrl{action = 'edit'}
		local testcasesEditDisplay = message('testcases-edit-link-display')
		local testcasesEditLink = makeUrlLink(testcasesEditUrl, testcasesEditDisplay)
		-- for Modules, add testcases run link if exists
		if subjectSpace == 828 and testcasesTitle.talkPageTitle and testcasesTitle.talkPageTitle.exists then
			local testcasesRunLinkDisplay = message('testcases-run-link-display')
			local testcasesRunLink = makeWikilink(testcasesTitle.talkPageTitle.prefixedText, testcasesRunLinkDisplay)
			testcasesLinks = testcasesLink .. ' ' .. makeToolbar(testcasesEditLink, testcasesRunLink)
		else
			testcasesLinks = testcasesLink .. ' ' .. makeToolbar(testcasesEditLink)
		end
	else
		local testcasesPreload
		if subjectSpace == 828 then
			testcasesPreload = message('module-testcases-preload')
		else
			testcasesPreload = message('template-testcases-preload')
		end
		local testcasesCreateUrl = testcasesTitle:fullUrl{action = 'edit', preload = testcasesPreload}
		local testcasesCreateDisplay = message('testcases-create-link-display')
		local testcasesCreateLink = makeUrlLink(testcasesCreateUrl, testcasesCreateDisplay)
		testcasesLinks = message('testcases-link-display') .. ' ' .. makeToolbar(testcasesCreateLink)
	end
	local messageName
	if subjectSpace == 828 then
		messageName = 'experiment-blurb-module'
	else
		messageName = 'experiment-blurb-template'
	end
	return message(messageName, {sandboxLinks, testcasesLinks})
end

function p.makeCategoriesBlurb(args, env)
	--[[
	-- Generates the text "Please add categories to the /doc subpage."
	-- @args - a table of arguments passed by the user
	-- @env - environment table containing title objects, etc., generated with p.getEnvironment
	-- Messages:
	-- 'doc-link-display' --&gt; '/doc'
	-- 'add-categories-blurb' --&gt; 'Please add categories to the $1 subpage.'
	--]]
	local docTitle = env.docTitle
	if not docTitle then
		return nil
	end
	local docPathLink = makeWikilink(docTitle.prefixedText, message('doc-link-display'))
	return message('add-categories-blurb', {docPathLink})
end

function p.makeSubpagesBlurb(args, env)
	--[[
	-- Generates the "Subpages of this template" link.
	-- @args - a table of arguments passed by the user
	-- @env - environment table containing title objects, etc., generated with p.getEnvironment
	
	-- Messages:
	-- 'template-pagetype' --&gt; 'template'
	-- 'module-pagetype' --&gt; 'module'
	-- 'default-pagetype' --&gt; 'page'
	-- 'subpages-link-display' --&gt; 'Subpages of this $1'
	--]]
	local subjectSpace = env.subjectSpace
	local templateTitle = env.templateTitle
	if not subjectSpace or not templateTitle then
		return nil
	end
	local pagetype
	if subjectSpace == 10 then
		pagetype = message('template-pagetype')
	elseif subjectSpace == 828 then
		pagetype = message('module-pagetype')
	else
		pagetype = message('default-pagetype')
	end
	local subpagesLink = makeWikilink(
		'Special:PrefixIndex/' .. templateTitle.prefixedText .. '/',
		message('subpages-link-display', {pagetype})
	)
	return message('subpages-blurb', {subpagesLink})
end

function p.makePrintBlurb(args, env)
	--[=[
	-- Generates the blurb displayed when there is a print version of the template available.
	-- @args - a table of arguments passed by the user
	-- @env - environment table containing title objects, etc., generated with p.getEnvironment
	--
	-- Messages:
	-- 'print-link-display' --&gt; '/Print'
	-- 'print-blurb' --&gt; 'A [[Help:Books/for experts#Improving the book layout|print version]]'
	--		.. ' of this template exists at $1.'
	--		.. ' If you make a change to this template, please update the print version as well.'
	-- 'display-print-category' --&gt; true
	-- 'print-category' --&gt; 'Templates with print versions'
	--]=]
	local printTitle = env.printTitle
	if not printTitle then
		return nil
	end
	local ret
	if printTitle.exists then
		local printLink = makeWikilink(printTitle.prefixedText, message('print-link-display'))
		ret = message('print-blurb', {printLink})
		local displayPrintCategory = message('display-print-category', nil, 'boolean')
		if displayPrintCategory then
			ret = ret .. makeCategoryLink(message('print-category'))
		end
	end
	return ret
end

----------------------------------------------------------------------------
-- Tracking categories
----------------------------------------------------------------------------

function p.addTrackingCategories(env)
	--[[
	-- Check if {{documentation}} is transcluded on a /doc or /testcases page.
	-- @env - environment table containing title objects, etc., generated with p.getEnvironment
	
	-- Messages:
	-- 'display-strange-usage-category' --&gt; true
	-- 'doc-subpage' --&gt; 'doc'
	-- 'testcases-subpage' --&gt; 'testcases'
	-- 'strange-usage-category' --&gt; 'Wikipedia pages with strange ((documentation)) usage'
	-- 
	-- /testcases pages in the module namespace are not categorised, as they may have
	-- {{documentation}} transcluded automatically.
	--]]
	local title = env.title
	local subjectSpace = env.subjectSpace
	if not title or not subjectSpace then
		return nil
	end
	local subpage = title.subpageText
	local ret = ''
	if message('display-strange-usage-category', nil, 'boolean')
		and (
			subpage == message('doc-subpage')
			or subjectSpace ~= 828 and subpage == message('testcases-subpage')
		)
	then
		ret = ret .. makeCategoryLink(message('strange-usage-category'))
	end
	return ret
end

return p</text>
    </revision>
  </page>
  <page>
    <title>Module:Documentation/config</title>
    <ns>828</ns>
    <id>97</id>
    <revision>
      <id>3437</id>
      <parentid>3436</parentid>
      <timestamp>2019-01-30T06:29:07Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>50 revisions imported from [[:templatewiki:Module:Documentation/config]]</comment>
      <origin>3436</origin>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text bytes="18622" sha1="6hym6c6py8yoseohy71qvk7kafcy1p5" xml:space="preserve">----------------------------------------------------------------------------------------------------
--
--                               Configuration for Module:Documentation
--
-- Here you can set the values of the parameters and messages used in Module:Documentation to
-- localise it to your wiki and your language. Unless specified otherwise, values given here
-- should be string values.
----------------------------------------------------------------------------------------------------

local cfg = {} -- Do not edit this line.

----------------------------------------------------------------------------------------------------
-- Protection template configuration
----------------------------------------------------------------------------------------------------

-- cfg['protection-reason-edit']
-- The protection reason for edit-protected templates to pass to
-- [[Module:Protection banner]].
cfg['protection-reason-edit'] = 'template'

--[[
----------------------------------------------------------------------------------------------------
-- Sandbox notice configuration
--
-- On sandbox pages the module can display a template notifying users that the current page is a
-- sandbox, and the location of test cases pages, etc. The module decides whether the page is a
-- sandbox or not based on the value of cfg['sandbox-subpage']. The following settings configure the
-- messages that the notices contains.
----------------------------------------------------------------------------------------------------
--]]

-- cfg['sandbox-notice-image']
-- The image displayed in the sandbox notice.
cfg['sandbox-notice-image'] = '[[Image:Sandbox.svg|50px|alt=|link=]]'

--[[
-- cfg['sandbox-notice-pagetype-template']
-- cfg['sandbox-notice-pagetype-module']
-- cfg['sandbox-notice-pagetype-other']
-- The page type of the sandbox page. The message that is displayed depends on the current subject
-- namespace. This message is used in either cfg['sandbox-notice-blurb'] or
-- cfg['sandbox-notice-diff-blurb'].
--]]
cfg['sandbox-notice-pagetype-template'] = '[[Wikipedia:Template test cases|template sandbox]] page'
cfg['sandbox-notice-pagetype-module'] = '[[Wikipedia:Template test cases|module sandbox]] page'
cfg['sandbox-notice-pagetype-other'] = 'sandbox page'

--[[
-- cfg['sandbox-notice-blurb']
-- cfg['sandbox-notice-diff-blurb']
-- cfg['sandbox-notice-diff-display']
-- Either cfg['sandbox-notice-blurb'] or cfg['sandbox-notice-diff-blurb'] is the opening sentence
-- of the sandbox notice. The latter has a diff link, but the former does not. $1 is the page
-- type, which is either cfg['sandbox-notice-pagetype-template'],
-- cfg['sandbox-notice-pagetype-module'] or cfg['sandbox-notice-pagetype-other'] depending what
-- namespace we are in. $2 is a link to the main template page, and $3 is a diff link between
-- the sandbox and the main template. The display value of the diff link is set by 
-- cfg['sandbox-notice-compare-link-display'].
--]]
cfg['sandbox-notice-blurb'] = 'This is the $1 for $2.'
cfg['sandbox-notice-diff-blurb'] = 'This is the $1 for $2 ($3).'
cfg['sandbox-notice-compare-link-display'] = 'diff'

--[[
-- cfg['sandbox-notice-testcases-blurb']
-- cfg['sandbox-notice-testcases-link-display']
-- cfg['sandbox-notice-testcases-run-blurb']
-- cfg['sandbox-notice-testcases-run-link-display']
-- cfg['sandbox-notice-testcases-blurb'] is a sentence notifying the user that there is a test cases page
-- corresponding to this sandbox that they can edit. $1 is a link to the test cases page.
-- cfg['sandbox-notice-testcases-link-display'] is the display value for that link.
-- cfg['sandbox-notice-testcases-run-blurb'] is a sentence notifying the user that there is a test cases page
-- corresponding to this sandbox that they can edit, along with a link to run it. $1 is a link to the test
-- cases page, and $2 is a link to the page to run it.
-- cfg['sandbox-notice-testcases-run-link-display'] is the display value for the link to run the test
-- cases.
--]]
cfg['sandbox-notice-testcases-blurb'] = 'See also the companion subpage for $1.'
cfg['sandbox-notice-testcases-link-display'] = 'test cases'
cfg['sandbox-notice-testcases-run-blurb'] = 'See also the companion subpage for $1 ($2).'
cfg['sandbox-notice-testcases-run-link-display'] = 'run'

-- cfg['sandbox-category']
-- A category to add to all template sandboxes.
cfg['sandbox-category'] = 'Template sandboxes'

----------------------------------------------------------------------------------------------------
-- Start box configuration
----------------------------------------------------------------------------------------------------

-- cfg['documentation-icon-wikitext']
-- The wikitext for the icon shown at the top of the template.
cfg['documentation-icon-wikitext'] = '[[File:Test Template Info-Icon - Version (2).svg|50px|link=|alt=]]'

-- cfg['template-namespace-heading']
-- The heading shown in the template namespace.
cfg['template-namespace-heading'] = 'Template documentation'

-- cfg['module-namespace-heading']
-- The heading shown in the module namespace.
cfg['module-namespace-heading'] = 'Module documentation'

-- cfg['file-namespace-heading']
-- The heading shown in the file namespace.
cfg['file-namespace-heading'] = 'Summary'

-- cfg['other-namespaces-heading']
-- The heading shown in other namespaces.
cfg['other-namespaces-heading'] = 'Documentation'

-- cfg['view-link-display']
-- The text to display for "view" links.
cfg['view-link-display'] = 'view'

-- cfg['edit-link-display']
-- The text to display for "edit" links.
cfg['edit-link-display'] = 'edit'

-- cfg['history-link-display']
-- The text to display for "history" links.
cfg['history-link-display'] = 'history'

-- cfg['purge-link-display']
-- The text to display for "purge" links.
cfg['purge-link-display'] = 'purge'

-- cfg['create-link-display']
-- The text to display for "create" links.
cfg['create-link-display'] = 'create'

----------------------------------------------------------------------------------------------------
-- Link box (end box) configuration
----------------------------------------------------------------------------------------------------

-- cfg['transcluded-from-blurb']
-- Notice displayed when the docs are transcluded from another page. $1 is a wikilink to that page.
cfg['transcluded-from-blurb'] = 'The above [[Wikipedia:Template documentation|documentation]] is [[Wikipedia:Transclusion|transcluded]] from $1.'

--[[
-- cfg['create-module-doc-blurb']
-- Notice displayed in the module namespace when the documentation subpage does not exist.
-- $1 is a link to create the documentation page with the preload cfg['module-preload'] and the
-- display cfg['create-link-display'].
--]]
cfg['create-module-doc-blurb'] = 'You might want to $1 a documentation page for this [[Wikipedia:Lua|Scribunto module]].'

----------------------------------------------------------------------------------------------------
-- Experiment blurb configuration
----------------------------------------------------------------------------------------------------

--[[
-- cfg['experiment-blurb-template']
-- cfg['experiment-blurb-module']
-- The experiment blurb is the text inviting editors to experiment in sandbox and test cases pages.
-- It is only shown in the template and module namespaces. With the default English settings, it
-- might look like this:
--
-- Editors can experiment in this template's sandbox (edit | diff) and testcases (edit) pages.
--
-- In this example, "sandbox", "edit", "diff", "testcases", and "edit" would all be links.
--
-- There are two versions, cfg['experiment-blurb-template'] and cfg['experiment-blurb-module'], depending
-- on what namespace we are in.
-- 
-- Parameters:
--
-- $1 is a link to the sandbox page. If the sandbox exists, it is in the following format:
--
--     cfg['sandbox-link-display'] (cfg['sandbox-edit-link-display'] | cfg['compare-link-display'])
-- 
-- If the sandbox doesn't exist, it is in the format:
--
--     cfg['sandbox-link-display'] (cfg['sandbox-create-link-display'] | cfg['mirror-link-display'])
-- 
-- The link for cfg['sandbox-create-link-display'] link preloads the page with cfg['template-sandbox-preload']
-- or cfg['module-sandbox-preload'], depending on the current namespace. The link for cfg['mirror-link-display']
-- loads a default edit summary of cfg['mirror-edit-summary'].
--
-- $2 is a link to the test cases page. If the test cases page exists, it is in the following format:
--
--     cfg['testcases-link-display'] (cfg['testcases-edit-link-display'] | cfg['testcases-run-link-display'])
--
-- If the test cases page doesn't exist, it is in the format:
-- 
--     cfg['testcases-link-display'] (cfg['testcases-create-link-display'])
--
-- If the test cases page doesn't exist, the link for cfg['testcases-create-link-display'] preloads the
-- page with cfg['template-testcases-preload'] or cfg['module-testcases-preload'], depending on the current
-- namespace.
--]]
cfg['experiment-blurb-template'] = "Editors can experiment in this template's $1 and $2 pages."
cfg['experiment-blurb-module'] = "Editors can experiment in this module's $1 and $2 pages."

----------------------------------------------------------------------------------------------------
-- Sandbox link configuration
----------------------------------------------------------------------------------------------------

-- cfg['sandbox-subpage']
-- The name of the template subpage typically used for sandboxes.
cfg['sandbox-subpage'] = 'sandbox'

-- cfg['template-sandbox-preload']
-- Preload file for template sandbox pages.
cfg['template-sandbox-preload'] = 'Template:Documentation/preload-sandbox'

-- cfg['module-sandbox-preload']
-- Preload file for Lua module sandbox pages.
cfg['module-sandbox-preload'] = 'Template:Documentation/preload-module-sandbox'

-- cfg['sandbox-link-display']
-- The text to display for "sandbox" links.
cfg['sandbox-link-display'] = 'sandbox'

-- cfg['sandbox-edit-link-display']
-- The text to display for sandbox "edit" links.
cfg['sandbox-edit-link-display'] = 'edit'

-- cfg['sandbox-create-link-display']
-- The text to display for sandbox "create" links.
cfg['sandbox-create-link-display'] = 'create'

-- cfg['compare-link-display']
-- The text to display for "compare" links.
cfg['compare-link-display'] = 'diff'

-- cfg['mirror-edit-summary']
-- The default edit summary to use when a user clicks the "mirror" link. $1 is a wikilink to the
-- template page.
cfg['mirror-edit-summary'] = 'Create sandbox version of $1'

-- cfg['mirror-link-display']
-- The text to display for "mirror" links.
cfg['mirror-link-display'] = 'mirror'

-- cfg['mirror-link-preload']
-- The page to preload when a user clicks the "mirror" link.
cfg['mirror-link-preload'] = 'Template:Documentation/mirror'

----------------------------------------------------------------------------------------------------
-- Test cases link configuration
----------------------------------------------------------------------------------------------------

-- cfg['testcases-subpage']
-- The name of the template subpage typically used for test cases.
cfg['testcases-subpage'] = 'testcases'

-- cfg['template-testcases-preload']
-- Preload file for template test cases pages.
cfg['template-testcases-preload'] = 'Template:Documentation/preload-testcases'

-- cfg['module-testcases-preload']
-- Preload file for Lua module test cases pages.
cfg['module-testcases-preload'] = 'Template:Documentation/preload-module-testcases'

-- cfg['testcases-link-display']
-- The text to display for "testcases" links.
cfg['testcases-link-display'] = 'testcases'

-- cfg['testcases-edit-link-display']
-- The text to display for test cases "edit" links.
cfg['testcases-edit-link-display'] = 'edit'

-- cfg['testcases-run-link-display']
-- The text to display for test cases "run" links.
cfg['testcases-run-link-display'] = 'run'

-- cfg['testcases-create-link-display']
-- The text to display for test cases "create" links.
cfg['testcases-create-link-display'] = 'create'

----------------------------------------------------------------------------------------------------
-- Add categories blurb configuration
----------------------------------------------------------------------------------------------------

--[[
-- cfg['add-categories-blurb']
-- Text to direct users to add categories to the /doc subpage. Not used if the "content" or
-- "docname fed" arguments are set, as then it is not clear where to add the categories. $1 is a
-- link to the /doc subpage with a display value of cfg['doc-link-display'].
--]]
cfg['add-categories-blurb'] = 'Please add categories to the $1 subpage.'

-- cfg['doc-link-display']
-- The text to display when linking to the /doc subpage.
cfg['doc-link-display'] = '/doc'

----------------------------------------------------------------------------------------------------
-- Subpages link configuration
----------------------------------------------------------------------------------------------------

--[[
-- cfg['subpages-blurb']
-- The "Subpages of this template" blurb. $1 is a link to the main template's subpages with a
-- display value of cfg['subpages-link-display']. In the English version this blurb is simply
-- the link followed by a period, and the link display provides the actual text.
--]]
cfg['subpages-blurb'] = '$1.'

--[[
-- cfg['subpages-link-display']
-- The text to display for the "subpages of this page" link. $1 is cfg['template-pagetype'],
-- cfg['module-pagetype'] or cfg['default-pagetype'], depending on whether the current page is in
-- the template namespace, the module namespace, or another namespace.
--]]
cfg['subpages-link-display'] = 'Subpages of this $1'

-- cfg['template-pagetype']
-- The pagetype to display for template pages.
cfg['template-pagetype'] = 'template'

-- cfg['module-pagetype']
-- The pagetype to display for Lua module pages.
cfg['module-pagetype'] = 'module'

-- cfg['default-pagetype']
-- The pagetype to display for pages other than templates or Lua modules.
cfg['default-pagetype'] = 'page'

----------------------------------------------------------------------------------------------------
-- Doc link configuration
----------------------------------------------------------------------------------------------------

-- cfg['doc-subpage']
-- The name of the subpage typically used for documentation pages.
cfg['doc-subpage'] = 'doc'

-- cfg['file-docpage-preload']
-- Preload file for documentation page in the file namespace.
cfg['file-docpage-preload'] = 'Template:Documentation/preload-filespace'

-- cfg['docpage-preload']
-- Preload file for template documentation pages in all namespaces.
cfg['docpage-preload'] = 'Template:Documentation/preload'

-- cfg['module-preload']
-- Preload file for Lua module documentation pages.
cfg['module-preload'] = 'Template:Documentation/preload-module-doc'

----------------------------------------------------------------------------------------------------
-- Print version configuration
----------------------------------------------------------------------------------------------------

-- cfg['print-subpage']
-- The name of the template subpage used for print versions.
cfg['print-subpage'] = 'Print'

-- cfg['print-link-display']
-- The text to display when linking to the /Print subpage.
cfg['print-link-display'] = '/Print'

-- cfg['print-blurb']
-- Text to display if a /Print subpage exists. $1 is a link to the subpage with a display value of cfg['print-link-display'].
cfg['print-blurb'] = 'A [[Help:Books/for experts#Improving the book layout|print version]] of this template exists at $1.'
	.. ' If you make a change to this template, please update the print version as well.'

-- cfg['display-print-category']
-- Set to true to enable output of cfg['print-category'] if a /Print subpage exists.
-- This should be a boolean value (either true or false).
cfg['display-print-category'] = true

-- cfg['print-category']
-- Category to output if cfg['display-print-category'] is set to true, and a /Print subpage exists.
cfg['print-category'] = 'Templates with print versions'

----------------------------------------------------------------------------------------------------
-- HTML and CSS configuration
----------------------------------------------------------------------------------------------------

-- cfg['main-div-id']
-- The "id" attribute of the main HTML "div" tag.
cfg['main-div-id'] = 'template-documentation'

-- cfg['main-div-classes']
-- The CSS classes added to the main HTML "div" tag.
cfg['main-div-classes'] = 'template-documentation iezoomfix'

-- cfg['start-box-linkclasses']
-- The CSS classes used for the [view][edit][history] or [create] links in the start box.
cfg['start-box-linkclasses'] = 'mw-editsection-like plainlinks'

-- cfg['start-box-link-id']
-- The HTML "id" attribute for the links in the start box.
cfg['start-box-link-id'] = 'doc_editlinks'

----------------------------------------------------------------------------------------------------
-- {{fmbox}} template configuration
----------------------------------------------------------------------------------------------------

-- cfg['fmbox-id']
-- The id sent to the "id" parameter of the {{fmbox}} template.
cfg['fmbox-id'] = 'documentation-meta-data'

-- cfg['fmbox-style']
-- The value sent to the style parameter of {{fmbox}}.
cfg['fmbox-style'] = 'background-color: #ecfcf4'

-- cfg['fmbox-textstyle']
-- The value sent to the "textstyle parameter of {{fmbox}}.
cfg['fmbox-textstyle'] = 'font-style: italic'

----------------------------------------------------------------------------------------------------
-- Tracking category configuration
----------------------------------------------------------------------------------------------------

-- cfg['display-strange-usage-category']
-- Set to true to enable output of cfg['strange-usage-category'] if the module is used on a /doc subpage
-- or a /testcases subpage. This should be a boolean value (either true or false).
cfg['display-strange-usage-category'] = true

-- cfg['strange-usage-category']
-- Category to output if cfg['display-strange-usage-category'] is set to true and the module is used on a
-- /doc subpage or a /testcases subpage.
cfg['strange-usage-category'] = 'Wikipedia pages with strange ((documentation)) usage'

--[[
----------------------------------------------------------------------------------------------------
-- End configuration
--
-- Don't edit anything below this line.
----------------------------------------------------------------------------------------------------
--]]

return cfg</text>
    </revision>
  </page>
  <page>
    <title>Module:For</title>
    <ns>828</ns>
    <id>98</id>
    <revision>
      <id>3455</id>
      <parentid>3454</parentid>
      <timestamp>2019-01-30T06:29:07Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>2 revisions imported from [[:templatewiki:Module:For]]</comment>
      <origin>3453</origin>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text bytes="1101" sha1="srmkrwhq60pn7xsihj11bbl69b9dh96" xml:space="preserve">local mArguments --initialize lazily
local mHatlist = require('Module:Hatnote list')
local mHatnote = require('Module:Hatnote')
local yesNo = require('Module:Yesno')
local p = {}

--Implements {{For}} from the frame
--uses capitalized "For" to avoid collision with Lua reserved word "for"
function p.For (frame)
	mArguments = require('Module:Arguments')
	return p._For(mArguments.getArgs(frame))
end

--Implements {{For}} but takes a manual arguments table
function p._For (args)
	local use = args[1]
	if (not use) then
		return mHatnote.makeWikitextError(
			'no context parameter provided. Use {{other uses}} for "other uses" hatnotes.',
			'Template:For#Errors',
			args.category
		)
	end
	local pages = {}
	function two (a, b) return a, b, 1 end --lets us run ipairs from 2
	for k, v in two(ipairs(args)) do table.insert(pages, v) end
	return mHatnote._hatnote(
		mHatlist.forSeeTableToString({{use = use, pages = pages}}),
		{selfref = args.selfref}
	) .. (
			(use == 'other uses') and yesNo(args.category) and
			'[[Category:Hatnote templates using unusual parameters]]' or ''
		)
end

return p</text>
    </revision>
  </page>
  <page>
    <title>Module:For loop</title>
    <ns>828</ns>
    <id>99</id>
    <revision>
      <id>3459</id>
      <parentid>3457</parentid>
      <timestamp>2019-01-30T06:29:08Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>1 revision imported from [[:templatewiki:Module:For_loop]]</comment>
      <origin>3457</origin>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text bytes="2760" sha1="9zil4wbc099g8kgcjborb9d9yk4k4km" xml:space="preserve">-- This module implements {{for loop}}.

local getArgs = require('Module:Arguments').getArgs
local yesno = require('Module:Yesno')
local makeTemplate = require('Module:Template invocation').invocation
p = {}

function p.main(frame)
	local args = getArgs(frame, {
		trim = false,
		removeBlanks = false
	})
	return p._main(args)
end

function p._main(args)
	local template = args['call'] or 'void'
	local calltemplates = yesno(args.substall or "", true) or not mw.isSubsting()
	local variableParam = args.pv
	variableParam = tonumber(variableParam) or variableParam or 1 -- fix for positional parameters
	local variableValPrefix = args.prefix or ''
	local variableValPostfix = args.postfix or ''
	local sep = args[1] or ''
	local constantArgs = p.getConstants(args)
	local variableVals = p.getVariableVals(args)

	local result = ''
	local addSeparator = false;
	for i, v in ipairs(variableVals) do
		v = mw.text.trim(v) -- trim whitespace
		if #v &gt; 0 or not yesno(args.skipBlanks) then
			if addSeparator then
				result = result .. sep
			end
			addSeparator = true;
			local targs = constantArgs
			targs[variableParam] = variableValPrefix .. v .. variableValPostfix
			if calltemplates then
				result = result .. p.callTemplate(template, targs)
			else
				result = result .. makeTemplate(template, targs)
			end
		end
	end
	return result
end

function p.getConstants(args)
	local constantArgNums = p.getArgNums(args, 'pc', 'n')
	local constantArgs = {}
	for _, num in ipairs(constantArgNums) do
		local keyArg = 'pc' .. tostring(num) .. 'n'
		local valArg = 'pc' .. tostring(num) .. 'v'
		local key = args[keyArg]
		key = tonumber(key) or key
		local value = args[valArg]
		constantArgs[key] = value
	end
	return constantArgs
end

function p.getVariableVals(args)
	local variableVals = {}
	if args.start or args.stop or args.by then
		if args[2] then
			error("Both start/stop/by and numbered parameters specified")
		end
		start = tonumber(args.start or 1)
		stop = tonumber(args.stop or 1)
		by = tonumber(args.by or 1)
		for i = start, stop, by do 
			variableVals [#variableVals + 1] = i
		end
	else
		for i, v in ipairs(args) do
			if i ~= 1 then
				variableVals[i - 1] = v
			end
		end
	end
	return variableVals
end

function p.getArgNums(args, prefix, suffix)
	-- Returns a table containing the numbers of the arguments that exist
	-- for the specified prefix and suffix.
	local nums = {}
	local pattern = '^' .. prefix .. '([1-9]%d*)' .. suffix .. '$'
	for k, v in pairs(args) do
		local num = tostring(k):match(pattern)
		if num then
			nums[#nums + 1] = tonumber(num)
		end
	end
	table.sort(nums)
	return nums
end

function p.callTemplate(template, targs)
	return mw.getCurrentFrame():expandTemplate{title = template, args = targs}
end

return p</text>
    </revision>
  </page>
  <page>
    <title>Module:Hatnote</title>
    <ns>828</ns>
    <id>100</id>
    <revision>
      <id>3551</id>
      <parentid>3550</parentid>
      <timestamp>2019-01-30T06:29:09Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>47 revisions imported from [[:templatewiki:Module:Hatnote]]</comment>
      <origin>3548</origin>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text bytes="6703" sha1="c5z31x97gktc3q7nnp8mf48t01l4qst" xml:space="preserve">--------------------------------------------------------------------------------
--                              Module:Hatnote                                --
--                                                                            --
-- This module produces hatnote links and links to related articles. It       --
-- implements the {{hatnote}} and {{format link}} meta-templates and includes --
-- helper functions for other Lua hatnote modules.                            --
--------------------------------------------------------------------------------

local libraryUtil = require('libraryUtil')
local checkType = libraryUtil.checkType
local mArguments -- lazily initialise [[Module:Arguments]]
local yesno -- lazily initialise [[Module:Yesno]]

local p = {}

--------------------------------------------------------------------------------
-- Helper functions
--------------------------------------------------------------------------------

local function getArgs(frame)
	-- Fetches the arguments from the parent frame. Whitespace is trimmed and
	-- blanks are removed.
	mArguments = require('Module:Arguments')
	return mArguments.getArgs(frame, {parentOnly = true})
end

local function removeInitialColon(s)
	-- Removes the initial colon from a string, if present.
	return s:match('^:?(.*)')
end

function p.findNamespaceId(link, removeColon)
	-- Finds the namespace id (namespace number) of a link or a pagename. This
	-- function will not work if the link is enclosed in double brackets. Colons
	-- are trimmed from the start of the link by default. To skip colon
	-- trimming, set the removeColon parameter to false.
	checkType('findNamespaceId', 1, link, 'string')
	checkType('findNamespaceId', 2, removeColon, 'boolean', true)
	if removeColon ~= false then
		link = removeInitialColon(link)
	end
	local namespace = link:match('^(.-):')
	if namespace then
		local nsTable = mw.site.namespaces[namespace]
		if nsTable then
			return nsTable.id
		end
	end
	return 0
end

function p.formatPages(...)
	-- Formats a list of pages using formatLink and returns it as an array. Nil
	-- values are not allowed.
	local pages = {...}
	local ret = {}
	for i, page in ipairs(pages) do
		ret[i] = p._formatLink(page)
	end
	return ret
end

function p.formatPageTables(...)
	-- Takes a list of page/display tables and returns it as a list of
	-- formatted links. Nil values are not allowed.
	local pages = {...}
	local links = {}
	for i, t in ipairs(pages) do
		checkType('formatPageTables', i, t, 'table')
		local link = t[1]
		local display = t[2]
		links[i] = p._formatLink(link, display)
	end
	return links
end

function p.makeWikitextError(msg, helpLink, addTrackingCategory, title)
	-- Formats an error message to be returned to wikitext. If
	-- addTrackingCategory is not false after being returned from
	-- [[Module:Yesno]], and if we are not on a talk page, a tracking category
	-- is added.
	checkType('makeWikitextError', 1, msg, 'string')
	checkType('makeWikitextError', 2, helpLink, 'string', true)
	yesno = require('Module:Yesno')
	title = title or mw.title.getCurrentTitle()
	-- Make the help link text.
	local helpText
	if helpLink then
		helpText = ' ([[' .. helpLink .. '|help]])'
	else
		helpText = ''
	end
	-- Make the category text.
	local category
	if not title.isTalkPage and yesno(addTrackingCategory) ~= false then
		category = 'Hatnote templates with errors'
		category = string.format(
			'[[%s:%s]]',
			mw.site.namespaces[14].name,
			category
		)
	else
		category = ''
	end
	return string.format(
		'&lt;strong class="error"&gt;Error: %s%s.&lt;/strong&gt;%s',
		msg,
		helpText,
		category
	)
end

function p.disambiguate(page, disambiguator)
	-- Formats a page title with a disambiguation parenthetical,
	-- i.e. "Example" → "Example (disambiguation)".
	checkType('disambiguate', 1, page, 'string')
	checkType('disambiguate', 2, disambiguator, 'string', true)
	disambiguator = disambiguator or 'disambiguation'
	return string.format('%s (%s)', page, disambiguator)
end

--------------------------------------------------------------------------------
-- Format link
--
-- Makes a wikilink from the given link and display values. Links are escaped
-- with colons if necessary, and links to sections are detected and displayed
-- with " § " as a separator rather than the standard MediaWiki "#". Used in
-- the {{format hatnote link}} template.
--------------------------------------------------------------------------------

function p.formatLink(frame)
	local args = getArgs(frame)
	local link = args[1]
	local display = args[2]
	if not link then
		return p.makeWikitextError(
			'no link specified',
			'Template:Format hatnote link#Errors',
			args.category
		)
	end
	return p._formatLink(link, display)
end

function p._formatLink(link, display)
	checkType('_formatLink', 1, link, 'string')
	checkType('_formatLink', 2, display, 'string', true)

	-- Remove the initial colon for links where it was specified manually.
	link = removeInitialColon(link)

	-- Find whether a faux display value has been added with the {{!}} magic
	-- word.
	if not display then
		local prePipe, postPipe = link:match('^(.-)|(.*)$')
		link = prePipe or link
		display = postPipe
	end

	-- Find the display value.
	if not display then
		local page, section = link:match('^(.-)#(.*)$')
		if page then
			display = page .. ' §&amp;nbsp;' .. section
		end
	end

	-- Assemble the link.
	if display then
		return string.format(
			'[[:%s|%s]]',
			string.gsub(link, '|(.*)$', ''), --display overwrites manual piping
			display
		)
	else
		return string.format('[[:%s]]', link)
	end
end

--------------------------------------------------------------------------------
-- Hatnote
--
-- Produces standard hatnote text. Implements the {{hatnote}} template.
--------------------------------------------------------------------------------

function p.hatnote(frame)
	local args = getArgs(frame)
	local s = args[1]
	local options = {}
	if not s then
		return p.makeWikitextError(
			'no text specified',
			'Template:Hatnote#Errors',
			args.category
		)
	end
	options.extraclasses = args.extraclasses
	options.selfref = args.selfref
	return p._hatnote(s, options)
end

function p._hatnote(s, options)
	checkType('_hatnote', 1, s, 'string')
	checkType('_hatnote', 2, options, 'table', true)
	options = options or {}
	local classes = {'hatnote', 'navigation-not-searchable'}
	local extraclasses = options.extraclasses
	local selfref = options.selfref
	if type(extraclasses) == 'string' then
		classes[#classes + 1] = extraclasses
	end
	if selfref then
		classes[#classes + 1] = 'selfref'
	end
	return string.format(
		'&lt;div role="note" class="%s"&gt;%s&lt;/div&gt;',
		table.concat(classes, ' '),
		s
	)
end

return p</text>
    </revision>
  </page>
  <page>
    <title>Module:Hatnote inline</title>
    <ns>828</ns>
    <id>101</id>
    <revision>
      <id>3575</id>
      <parentid>3573</parentid>
      <timestamp>2019-01-30T06:29:09Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>8 revisions imported from [[:templatewiki:Module:Hatnote_inline]]</comment>
      <origin>3553</origin>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text bytes="1093" sha1="jb6gsg1d59p7ypwzurylxxtvacyh17t" xml:space="preserve">--------------------------------------------------------------------------------
--                              Module:Hatnote-inline                         --
--                                                                            --
-- This module produces hatnote-style links and links to related articles,    --
-- but inside a &lt;span&gt;, instead of the &lt;div&gt; used by Module:Hatnote.  It      --
-- implements the {{hatnote-inline}} meta-template.                           --
--------------------------------------------------------------------------------

local mHatnote = require('Module:Hatnote')
local mArguments = require('Module:Arguments')
local yesno = require('Module:Yesno')
local p = {}

function p.hatnoteInline (frame)
	local args = mArguments.getArgs(frame)
	local hatnote = mHatnote.hatnote(frame)
	if args.inline == nil or yesno(args.inline, true) then
		local subs = {
			['^&lt;div'] = '&lt;span',
			['&lt;/div&gt;$'] = '&lt;/span&gt;'
		}
		for k, v in pairs(subs) do hatnote = string.gsub(hatnote, k, v) end
	end
	return hatnote
end

p.hatnote = p.hatnoteInline --alias

return p</text>
    </revision>
  </page>
  <page>
    <title>Module:Hatnote list</title>
    <ns>828</ns>
    <id>102</id>
    <revision>
      <id>3610</id>
      <parentid>3608</parentid>
      <timestamp>2019-01-30T06:29:10Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>16 revisions imported from [[:templatewiki:Module:Hatnote_list]]</comment>
      <origin>3608</origin>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text bytes="7209" sha1="2hmyydi47hep0hexbh8sw7ybxc07m5k" xml:space="preserve">--------------------------------------------------------------------------------
--                           Module:Hatnote list                              --
--                                                                            --
-- This module produces and formats lists for use in hatnotes. In particular, --
-- it implements the for-see list, i.e. lists of "For X, see Y" statements,   --
-- as used in {{about}}, {{redirect}}, and their variants. Also introduced    --
-- are andList &amp; orList helpers for formatting lists with those conjunctions. --
--------------------------------------------------------------------------------

local mArguments --initialize lazily
local mHatnote = require('Module:Hatnote')
local libraryUtil = require('libraryUtil')
local checkType = libraryUtil.checkType
local p = {}

--------------------------------------------------------------------------------
-- List stringification helper functions
--
-- These functions are used for stringifying lists, usually page lists inside
-- the "Y" portion of "For X, see Y" for-see items.
--------------------------------------------------------------------------------

--default options table used across the list stringification functions
local stringifyListDefaultOptions = {
	conjunction = "and",
	separator = ",",
	altSeparator = ";",
	space = " ",
	formatted = false
}

-- Stringifies a list generically; probably shouldn't be used directly
function stringifyList(list, options)
	-- Type-checks, defaults, and a shortcut
	checkType("stringifyList", 1, list, "table")
	if #list == 0 then return nil end
	checkType("stringifyList", 2, options, "table", true)
	options = options or {}
	for k, v in pairs(stringifyListDefaultOptions) do
		if options[k] == nil then options[k] = v end
	end
	local s = options.space
	-- Format the list if requested
	if options.formatted then list = mHatnote.formatPages(unpack(list)) end
	-- Set the separator; if any item contains it, use the alternate separator
	local separator = options.separator
	--searches display text only
	function searchDisp(t, f)
		return string.find(string.sub(t, (string.find(t, '|') or 0) + 1), f)
	end
	for k, v in pairs(list) do
		if searchDisp(v, separator) then
			separator = options.altSeparator
			break
		end
	end
	-- Set the conjunction, apply Oxford comma, and force a comma if #1 has "§"
	local conjunction = s .. options.conjunction .. s
	if #list == 2 and searchDisp(list[1], "§") or #list &gt; 2 then
		conjunction = separator .. conjunction
	end
	-- Return the formatted string
	return mw.text.listToText(list, separator .. s, conjunction)
end

--DRY function
function conjList (conj, list, fmt)
	return stringifyList(list, {conjunction = conj, formatted = fmt})
end

-- Stringifies lists with "and" or "or"
function p.andList (...) return conjList("and", ...) end
function p.orList (...) return conjList("or", ...) end

--------------------------------------------------------------------------------
-- For see
--
-- Makes a "For X, see [[Y]]." list from raw parameters. Intended for the
-- {{about}} and {{redirect}} templates and their variants.
--------------------------------------------------------------------------------

--default options table used across the forSee family of functions
local forSeeDefaultOptions = {
	andKeyword = 'and',
	title = mw.title.getCurrentTitle().text,
	otherText = 'other uses',
	forSeeForm = 'For %s, see %s.',
}

--Collapses duplicate punctuation
function punctuationCollapse (text)
	local replacements = {
		["%.%.$"] = ".",
		["%?%.$"] = "?",
		["%!%.$"] = "!",
		["%.%]%]%.$"] = ".]]",
		["%?%]%]%.$"] = "?]]",
		["%!%]%]%.$"] = "!]]"
	}
	for k, v in pairs(replacements) do text = string.gsub(text, k, v) end
	return text
end

-- Structures arguments into a table for stringification, &amp; options
function p.forSeeArgsToTable (args, from, options)
	-- Type-checks and defaults
	checkType("forSeeArgsToTable", 1, args, 'table')
	checkType("forSeeArgsToTable", 2, from, 'number', true)
	from = from or 1
	checkType("forSeeArgsToTable", 3, options, 'table', true)
	options = options or {}
	for k, v in pairs(forSeeDefaultOptions) do
		if options[k] == nil then options[k] = v end
	end
	-- maxArg's gotten manually because getArgs() and table.maxn aren't friends
	local maxArg = 0
	for k, v in pairs(args) do
		if type(k) == 'number' and k &gt; maxArg then maxArg = k end
	end
	-- Structure the data out from the parameter list:
	-- * forTable is the wrapper table, with forRow rows
	-- * Rows are tables of a "use" string &amp; a "pages" table of pagename strings
	-- * Blanks are left empty for defaulting elsewhere, but can terminate list
	local forTable = {}
	local i = from
	local terminated = false
	-- If there is extra text, and no arguments are given, give nil value
	-- to not produce default of "For other uses, see foo (disambiguation)"
	if options.extratext and i &gt; maxArg then return nil end
	-- Loop to generate rows
	repeat
		-- New empty row
		local forRow = {}
		-- On blank use, assume list's ended &amp; break at end of this loop
		forRow.use = args[i]
		if not args[i] then terminated = true end
		-- New empty list of pages
		forRow.pages = {}
		-- Insert first pages item if present
		table.insert(forRow.pages, args[i + 1])
		-- If the param after next is "and", do inner loop to collect params
		-- until the "and"'s stop. Blanks are ignored: "1|and||and|3" → {1, 3}
		while args[i + 2] == options.andKeyword do
			if args[i + 3] then 
				table.insert(forRow.pages, args[i + 3])
			end
			-- Increment to next "and"
			i = i + 2
		end
		-- Increment to next use
		i = i + 2
		-- Append the row
		table.insert(forTable, forRow)
	until terminated or i &gt; maxArg
	
	return forTable
end

-- Stringifies a table as formatted by forSeeArgsToTable
function p.forSeeTableToString (forSeeTable, options)
	-- Type-checks and defaults
	checkType("forSeeTableToString", 1, forSeeTable, "table", true)
	checkType("forSeeTableToString", 2, options, "table", true)
	options = options or {}
	for k, v in pairs(forSeeDefaultOptions) do
		if options[k] == nil then options[k] = v end
	end
	-- Stringify each for-see item into a list
	local strList = {}
	if forSeeTable then
		for k, v in pairs(forSeeTable) do
			local useStr = v.use or options.otherText
			local pagesStr = p.andList(v.pages, true) or mHatnote._formatLink(mHatnote.disambiguate(options.title))
			local forSeeStr = string.format(options.forSeeForm, useStr, pagesStr)
			forSeeStr = punctuationCollapse(forSeeStr)
			table.insert(strList, forSeeStr)
		end
	end
	if options.extratext then table.insert(strList, punctuationCollapse(options.extratext..'.')) end
	-- Return the concatenated list
	return table.concat(strList, ' ')
end

-- Produces a "For X, see [[Y]]" string from arguments. Expects index gaps
-- but not blank/whitespace values. Ignores named args and args &lt; "from".
function p._forSee (args, from, options)
	local forSeeTable = p.forSeeArgsToTable(args, from, options)
	return p.forSeeTableToString(forSeeTable, options)
end

-- As _forSee, but uses the frame.
function p.forSee (frame, from, options)
	mArguments = require('Module:Arguments')
	return p._forSee(mArguments.getArgs(frame), from, options)
end

return p</text>
    </revision>
  </page>
  <page>
    <title>Module:If empty</title>
    <ns>828</ns>
    <id>103</id>
    <revision>
      <id>3642</id>
      <parentid>3639</parentid>
      <timestamp>2019-01-30T06:29:12Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>13 revisions imported from [[:templatewiki:Module:If_empty]]</comment>
      <origin>3638</origin>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text bytes="1018" sha1="6qq12x2ek97w2n518wugesqunsqh778" xml:space="preserve">local p = {}

function p.main(frame)
	local args = require('Module:Arguments').getArgs(frame, {wrappers = 'Template:If empty', removeBlanks = false})

	-- For backwards compatibility reasons, the first 8 parameters can be unset instead of being blank,
	-- even though there's really no legitimate use case for this. At some point, this will be removed.
	local lowestNil = math.huge
	for i = 8,1,-1 do
		if args[i] == nil then
			args[i] = ''
			lowestNil = i
		end
	end

	for k,v in ipairs(args) do
		if v ~= '' then
			if lowestNil &lt; k then
				-- If any uses of this template depend on the behavior above, add them to a tracking category.
				-- This is a rather fragile, convoluted, hacky way to do it, but it ensures that this module's output won't be modified
				-- by it.
				frame:extensionTag('ref', '[[Category:Instances of Template:If_empty missing arguments]]', {group = 'TrackingCategory'})
				frame:extensionTag('references', '', {group = 'TrackingCategory'})
			end
			return v
		end
	end
end

return p</text>
    </revision>
  </page>
  <page>
    <title>Module:In5</title>
    <ns>828</ns>
    <id>105</id>
    <revision>
      <id>3648</id>
      <parentid>3641</parentid>
      <timestamp>2019-01-30T06:29:12Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>2 revisions imported from [[:templatewiki:Module:In5]]</comment>
      <origin>3641</origin>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text bytes="1250" sha1="d2jdhmzl1ariwd7uypwfkhex9llkyg6" xml:space="preserve">-- This module implements {{in5}}.

local p = {}

function p.in5(frame)
    local indent = frame.args[1]
    -- Trim whitespace and convert to number. Default to 5 if not present,
    -- as per the template title.
    indent = tonumber( mw.text.trim(indent) ) or 5
    -- Round down to nearest integer. Decimal values produce funky results
    -- from the original template, but there's no need for us to replicate that.
    indent = math.floor( indent )
    -- Don't output anything for zero or less. Again, there was some funky output
    -- here for negatives, but now we're in Lua we should use sane defaults.
    if indent &lt;= 0 then
        return
    end
    
    local base = '&amp;nbsp; '
    local modulo = '&amp;nbsp;'
 
--[[
    Indent values and the corresponding values for base and modulo:

    indent  base    modulo
    1       0       1
    2       0       2
    3       1       1
    4       1       2
    5       2       1
    6       2       2
    7       3       1
    8       3       2
    9       4       1
    10      4       2
]]
    
    local baseNum = math.floor( (indent - 1) / 2 )
    local modNum = math.fmod( indent - 1 , 2 ) + 1
    
    return mw.ustring.rep( base, baseNum) .. mw.ustring.rep( modulo, modNum )
end

return p</text>
    </revision>
  </page>
  <page>
    <title>Module:Item</title>
    <ns>828</ns>
    <id>106</id>
    <revision>
      <id>3653</id>
      <parentid>3651</parentid>
      <timestamp>2019-01-30T06:29:13Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>2 revisions imported from [[:templatewiki:Module:Item]]</comment>
      <origin>3651</origin>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text bytes="3044" sha1="8a56kjxfu3plv66z6z732hkase6suqc" xml:space="preserve">local p = {}

local function escape(str)
	return str:gsub("[|\\]", function (c) return string.format("\\%03d", c:byte()) end)
end

local function unescape(str)
	return str:gsub("\\(%d%d%d)", function (d) return string.char(d) end)
end

-- Implements [[Template:Item]]
function p.pack(frame)
	local parent = frame:getParent()
	local result = ''
	for key, value in pairs(parent.args) do
		result = result .. "|" .. escape(tostring(key)) .. "|" .. escape(value)
	end
	return result .. "|";
end

local function unpack(str)
	local result = { }
	for key, value in str:gfind("|([^|]*)|([^|]*)") do
		result[unescape(key)] = unescape(value)
	end
	return result
end

-- Implements [[Template:Component]]
function p.component(frame)
	return unpack(frame.args[1])[frame.args[2]]
end

local function getItems(frame)
	return frame:getParent().args
end

local function invert(tbl)
	local result = { }
	for key, value in pairs(tbl) do
		result[value] = key
	end
	return result
end

-- Add args into item as appropriate (see [[Template:Format item]])
local function addArgs(
	item,   -- unpacked item to modify
	args,   -- arguments for adding into item
	ignore, -- pass in invert{keys to ignore}
	shift   -- for numbered arguments, args[key+shift] is assigned to item[key]
	-- returns: item
)
	for key, value in pairs(args) do
		if not ignore[key] then
			local _, _, paramKey = string.find(key, "^param (.*)")
			local _, _, importantKey = string.find(key, "^important (.*)")
			paramKey = paramKey or importantKey or key
			if shift and type(paramKey) == "number" then
				paramKey = paramKey - shift
				if paramKey &lt; 1 then paramKey = nil end
			end
			if paramKey and (importantKey or item[paramKey] == nil) then
				item[paramKey] = value
			end
		end
	end
	
	return item
end

-- Implements [[Template:Format item]]
function p.format(frame)
	local args = frame:getParent().args
	local ignore = invert{ "template", "item" }
	local templateArgs = addArgs(unpack(args.item), args, ignore)
	
	return frame:expandTemplate{ title = args.template, args = templateArgs }
end

-- See [[Template:Item#Format each item using a template]]
function p.each(frame)
	local args = frame.args
	local items = getItems(frame)
	local separator = args[1] or ""
	local prepend = args[2] or ""
	local append = args[3] or ""
	local ignore = invert{ "template" }
	local shift = 3

	local result = ""
	for i, item in ipairs(items) do
		local templateArgs = addArgs(unpack(item), args, ignore, shift)
		result = result .. prepend .. frame:expandTemplate{ title = args.template, args = templateArgs } .. append
		if items[i + 1] then
			result = result .. separator
		end
	end
	return result
end

-- See [[Template:Item#Gather given parameter from all items]]
function p.gather(frame)
	local args = frame.args
	local items = getItems(frame)
	local parameter = args.parameter or "1"
	
	local templateArgs = { }
	for i, item in ipairs(items) do
		templateArgs[i] = unpack(item)[parameter]
	end
	
	return frame:expandTemplate{ title = args.template, args = templateArgs }
end

return p</text>
    </revision>
  </page>
  <page>
    <title>Module:Message box</title>
    <ns>828</ns>
    <id>107</id>
    <revision>
      <id>3802</id>
      <parentid>3800</parentid>
      <timestamp>2019-01-30T06:29:15Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>73 revisions imported from [[:templatewiki:Module:Message_box]]</comment>
      <origin>3799</origin>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text bytes="17101" sha1="6r6gh40ujwjmoo5h9kc5j9ytuxwrvvy" xml:space="preserve">-- This is a meta-module for producing message box templates, including
-- {{mbox}}, {{ambox}}, {{imbox}}, {{tmbox}}, {{ombox}}, {{cmbox}} and {{fmbox}}.

-- Load necessary modules.
require('Module:No globals')
local getArgs
local yesno = require('Module:Yesno')

-- Get a language object for formatDate and ucfirst.
local lang = mw.language.getContentLanguage()

-- Define constants
local CONFIG_MODULE = 'Module:Message box/configuration'

--------------------------------------------------------------------------------
-- Helper functions
--------------------------------------------------------------------------------

local function getTitleObject(...)
	-- Get the title object, passing the function through pcall
	-- in case we are over the expensive function count limit.
	local success, title = pcall(mw.title.new, ...)
	if success then
		return title
	end
end

local function union(t1, t2)
	-- Returns the union of two arrays.
	local vals = {}
	for i, v in ipairs(t1) do
		vals[v] = true
	end
	for i, v in ipairs(t2) do
		vals[v] = true
	end
	local ret = {}
	for k in pairs(vals) do
		table.insert(ret, k)
	end
	table.sort(ret)
	return ret
end

local function getArgNums(args, prefix)
	local nums = {}
	for k, v in pairs(args) do
		local num = mw.ustring.match(tostring(k), '^' .. prefix .. '([1-9]%d*)$')
		if num then
			table.insert(nums, tonumber(num))
		end
	end
	table.sort(nums)
	return nums
end

--------------------------------------------------------------------------------
-- Box class definition
--------------------------------------------------------------------------------

local MessageBox = {}
MessageBox.__index = MessageBox

function MessageBox.new(boxType, args, cfg)
	args = args or {}
	local obj = {}

	-- Set the title object and the namespace.
	obj.title = getTitleObject(args.page) or mw.title.getCurrentTitle()

	-- Set the config for our box type.
	obj.cfg = cfg[boxType]
	if not obj.cfg then
		local ns = obj.title.namespace
		-- boxType is "mbox" or invalid input
		if ns == 0 then
			obj.cfg = cfg.ambox -- main namespace
		elseif ns == 6 then
			obj.cfg = cfg.imbox -- file namespace
		elseif ns == 14 then
			obj.cfg = cfg.cmbox -- category namespace
		else
			local nsTable = mw.site.namespaces[ns]
			if nsTable and nsTable.isTalk then
				obj.cfg = cfg.tmbox -- any talk namespace
			else
				obj.cfg = cfg.ombox -- other namespaces or invalid input
			end
		end
	end

	-- Set the arguments, and remove all blank arguments except for the ones
	-- listed in cfg.allowBlankParams.
	do
		local newArgs = {}
		for k, v in pairs(args) do
			if v ~= '' then
				newArgs[k] = v
			end
		end
		for i, param in ipairs(obj.cfg.allowBlankParams or {}) do
			newArgs[param] = args[param]
		end
		obj.args = newArgs
	end

	-- Define internal data structure.
	obj.categories = {}
	obj.classes = {}
	-- For lazy loading of [[Module:Category handler]].
	obj.hasCategories = false

	return setmetatable(obj, MessageBox)
end

function MessageBox:addCat(ns, cat, sort)
	if not cat then
		return nil
	end
	if sort then
		cat = string.format('[[Category:%s|%s]]', cat, sort)
	else
		cat = string.format('[[Category:%s]]', cat)
	end
	self.hasCategories = true
	self.categories[ns] = self.categories[ns] or {}
	table.insert(self.categories[ns], cat)
end

function MessageBox:addClass(class)
	if not class then
		return nil
	end
	table.insert(self.classes, class)
end

function MessageBox:setParameters()
	local args = self.args
	local cfg = self.cfg

	-- Get type data.
	self.type = args.type
	local typeData = cfg.types[self.type]
	self.invalidTypeError = cfg.showInvalidTypeError
		and self.type
		and not typeData
	typeData = typeData or cfg.types[cfg.default]
	self.typeClass = typeData.class
	self.typeImage = typeData.image

	-- Find if the box has been wrongly substituted.
	self.isSubstituted = cfg.substCheck and args.subst == 'SUBST'

	-- Find whether we are using a small message box.
	self.isSmall = cfg.allowSmall and (
		cfg.smallParam and args.small == cfg.smallParam
		or not cfg.smallParam and yesno(args.small)
	)

	-- Add attributes, classes and styles.
	self.id = args.id
	if yesno(args.plainlinks) ~= false then
		self:addClass('plainlinks')
	end
	for _, class in ipairs(cfg.classes or {}) do
		self:addClass(class)
	end
	if self.isSmall then
		self:addClass(cfg.smallClass or 'mbox-small')
	end
	self:addClass(self.typeClass)
	self:addClass(args.class)
	self.style = args.style
	self.attrs = args.attrs

	-- Set text style.
	self.textstyle = args.textstyle

	-- Find if we are on the template page or not. This functionality is only
	-- used if useCollapsibleTextFields is set, or if both cfg.templateCategory
	-- and cfg.templateCategoryRequireName are set.
	self.useCollapsibleTextFields = cfg.useCollapsibleTextFields
	if self.useCollapsibleTextFields
		or cfg.templateCategory
		and cfg.templateCategoryRequireName
	then
		self.name = args.name
		if self.name then
			local templateName = mw.ustring.match(
				self.name,
				'^[tT][eE][mM][pP][lL][aA][tT][eE][%s_]*:[%s_]*(.*)$'
			) or self.name
			templateName = 'Template:' .. templateName
			self.templateTitle = getTitleObject(templateName)
		end
		self.isTemplatePage = self.templateTitle
			and mw.title.equals(self.title, self.templateTitle)
	end

	-- Process data for collapsible text fields. At the moment these are only
	-- used in {{ambox}}.
	if self.useCollapsibleTextFields then
		-- Get the self.issue value.
		if self.isSmall and args.smalltext then
			self.issue = args.smalltext
		else
			local sect
			if args.sect == '' then
				sect = 'This ' .. (cfg.sectionDefault or 'page')
			elseif type(args.sect) == 'string' then
				sect = 'This ' .. args.sect
			end
			local issue = args.issue
			issue = type(issue) == 'string' and issue ~= '' and issue or nil
			local text = args.text
			text = type(text) == 'string' and text or nil
			local issues = {}
			table.insert(issues, sect)
			table.insert(issues, issue)
			table.insert(issues, text)
			self.issue = table.concat(issues, ' ')
		end

		-- Get the self.talk value.
		local talk = args.talk
		-- Show talk links on the template page or template subpages if the talk
		-- parameter is blank.
		if talk == ''
			and self.templateTitle
			and (
				mw.title.equals(self.templateTitle, self.title)
				or self.title:isSubpageOf(self.templateTitle)
			)
		then
			talk = '#'
		elseif talk == '' then
			talk = nil
		end
		if talk then
			-- If the talk value is a talk page, make a link to that page. Else
			-- assume that it's a section heading, and make a link to the talk
			-- page of the current page with that section heading.
			local talkTitle = getTitleObject(talk)
			local talkArgIsTalkPage = true
			if not talkTitle or not talkTitle.isTalkPage then
				talkArgIsTalkPage = false
				talkTitle = getTitleObject(
					self.title.text,
					mw.site.namespaces[self.title.namespace].talk.id
				)
			end
			if talkTitle and talkTitle.exists then
				local talkText = 'Relevant discussion may be found on'
				if talkArgIsTalkPage then
					talkText = string.format(
						'%s [[%s|%s]].',
						talkText,
						talk,
						talkTitle.prefixedText
					)
				else
					talkText = string.format(
						'%s the [[%s#%s|talk page]].',
						talkText,
						talkTitle.prefixedText,
						talk
					)
				end
				self.talk = talkText
			end
		end

		-- Get other values.
		self.fix = args.fix ~= '' and args.fix or nil
		local date
		if args.date and args.date ~= '' then
			date = args.date
		elseif args.date == '' and self.isTemplatePage then
			date = lang:formatDate('F Y')
		end
		if date then
			self.date = string.format(" &lt;small&gt;''(%s)''&lt;/small&gt;", date)
		end
		self.info = args.info
		if yesno(args.removalnotice) then
			self.removalNotice = cfg.removalNotice
		end
	end

	-- Set the non-collapsible text field. At the moment this is used by all box
	-- types other than ambox, and also by ambox when small=yes.
	if self.isSmall then
		self.text = args.smalltext or args.text
	else
		self.text = args.text
	end

	-- Set the below row.
	self.below = cfg.below and args.below

	-- General image settings.
	self.imageCellDiv = not self.isSmall and cfg.imageCellDiv
	self.imageEmptyCell = cfg.imageEmptyCell
	if cfg.imageEmptyCellStyle then
		self.imageEmptyCellStyle = 'border:none;padding:0px;width:1px'
	end

	-- Left image settings.
	local imageLeft = self.isSmall and args.smallimage or args.image
	if cfg.imageCheckBlank and imageLeft ~= 'blank' and imageLeft ~= 'none'
		or not cfg.imageCheckBlank and imageLeft ~= 'none'
	then
		self.imageLeft = imageLeft
		if not imageLeft then
			local imageSize = self.isSmall
				and (cfg.imageSmallSize or '30x30px')
				or '40x40px'
			self.imageLeft = string.format('[[File:%s|%s|link=|alt=]]', self.typeImage
				or 'Imbox notice.png', imageSize)
		end
	end

	-- Right image settings.
	local imageRight = self.isSmall and args.smallimageright or args.imageright
	if not (cfg.imageRightNone and imageRight == 'none') then
		self.imageRight = imageRight
	end
end

function MessageBox:setMainspaceCategories()
	local args = self.args
	local cfg = self.cfg

	if not cfg.allowMainspaceCategories then
		return nil
	end

	local nums = {}
	for _, prefix in ipairs{'cat', 'category', 'all'} do
		args[prefix .. '1'] = args[prefix]
		nums = union(nums, getArgNums(args, prefix))
	end

	-- The following is roughly equivalent to the old {{Ambox/category}}.
	local date = args.date
	date = type(date) == 'string' and date
	local preposition = 'from'
	for _, num in ipairs(nums) do
		local mainCat = args['cat' .. tostring(num)]
			or args['category' .. tostring(num)]
		local allCat = args['all' .. tostring(num)]
		mainCat = type(mainCat) == 'string' and mainCat
		allCat = type(allCat) == 'string' and allCat
		if mainCat and date and date ~= '' then
			local catTitle = string.format('%s %s %s', mainCat, preposition, date)
			self:addCat(0, catTitle)
			catTitle = getTitleObject('Category:' .. catTitle)
			if not catTitle or not catTitle.exists then
				self:addCat(0, 'Articles with invalid date parameter in template')
			end
		elseif mainCat and (not date or date == '') then
			self:addCat(0, mainCat)
		end
		if allCat then
			self:addCat(0, allCat)
		end
	end
end

function MessageBox:setTemplateCategories()
	local args = self.args
	local cfg = self.cfg

	-- Add template categories.
	if cfg.templateCategory then
		if cfg.templateCategoryRequireName then
			if self.isTemplatePage then
				self:addCat(10, cfg.templateCategory)
			end
		elseif not self.title.isSubpage then
			self:addCat(10, cfg.templateCategory)
		end
	end

	-- Add template error categories.
	if cfg.templateErrorCategory then
		local templateErrorCategory = cfg.templateErrorCategory
		local templateCat, templateSort
		if not self.name and not self.title.isSubpage then
			templateCat = templateErrorCategory
		elseif self.isTemplatePage then
			local paramsToCheck = cfg.templateErrorParamsToCheck or {}
			local count = 0
			for i, param in ipairs(paramsToCheck) do
				if not args[param] then
					count = count + 1
				end
			end
			if count &gt; 0 then
				templateCat = templateErrorCategory
				templateSort = tostring(count)
			end
			if self.categoryNums and #self.categoryNums &gt; 0 then
				templateCat = templateErrorCategory
				templateSort = 'C'
			end
		end
		self:addCat(10, templateCat, templateSort)
	end
end

function MessageBox:setAllNamespaceCategories()
	-- Set categories for all namespaces.
	if self.invalidTypeError then
		local allSort = (self.title.namespace == 0 and 'Main:' or '') .. self.title.prefixedText
		self:addCat('all', 'Wikipedia message box parameter needs fixing', allSort)
	end
	if self.isSubstituted then
		self:addCat('all', 'Pages with incorrectly substituted templates')
	end
end

function MessageBox:setCategories()
	if self.title.namespace == 0 then
		self:setMainspaceCategories()
	elseif self.title.namespace == 10 then
		self:setTemplateCategories()
	end
	self:setAllNamespaceCategories()
end

function MessageBox:renderCategories()
	if not self.hasCategories then
		-- No categories added, no need to pass them to Category handler so,
		-- if it was invoked, it would return the empty string.
		-- So we shortcut and return the empty string.
		return ""
	end
	-- Convert category tables to strings and pass them through
	-- [[Module:Category handler]].
	return require('Module:Category handler')._main{
		main = table.concat(self.categories[0] or {}),
		template = table.concat(self.categories[10] or {}),
		all = table.concat(self.categories.all or {}),
		nocat = self.args.nocat,
		page = self.args.page
	}
end

function MessageBox:export()
	local root = mw.html.create()

	-- Add the subst check error.
	if self.isSubstituted and self.name then
		root:tag('b')
			:addClass('error')
			:wikitext(string.format(
				'Template &lt;code&gt;%s[[Template:%s|%s]]%s&lt;/code&gt; has been incorrectly substituted.',
				mw.text.nowiki('{{'), self.name, self.name, mw.text.nowiki('}}')
			))
	end

	-- Create the box table.
	local boxTable = root:tag('table')
	boxTable:attr('id', self.id or nil)
	for i, class in ipairs(self.classes or {}) do
		boxTable:addClass(class or nil)
	end
	boxTable
		:cssText(self.style or nil)
		:attr('role', 'presentation')

	if self.attrs then
		boxTable:attr(self.attrs)
	end

	-- Add the left-hand image.
	local row = boxTable:tag('tr')
	if self.imageLeft then
		local imageLeftCell = row:tag('td'):addClass('mbox-image')
		if self.imageCellDiv then
			-- If we are using a div, redefine imageLeftCell so that the image
			-- is inside it. Divs use style="width: 52px;", which limits the
			-- image width to 52px. If any images in a div are wider than that,
			-- they may overlap with the text or cause other display problems.
			imageLeftCell = imageLeftCell:tag('div'):css('width', '52px')
		end
		imageLeftCell:wikitext(self.imageLeft or nil)
	elseif self.imageEmptyCell then
		-- Some message boxes define an empty cell if no image is specified, and
		-- some don't. The old template code in templates where empty cells are
		-- specified gives the following hint: "No image. Cell with some width
		-- or padding necessary for text cell to have 100% width."
		row:tag('td')
			:addClass('mbox-empty-cell')
			:cssText(self.imageEmptyCellStyle or nil)
	end

	-- Add the text.
	local textCell = row:tag('td'):addClass('mbox-text')
	if self.useCollapsibleTextFields then
		-- The message box uses advanced text parameters that allow things to be
		-- collapsible. At the moment, only ambox uses this.
		textCell:cssText(self.textstyle or nil)
		local textCellDiv = textCell:tag('div')
		textCellDiv
			:addClass('mbox-text-span')
			:wikitext(self.issue or nil)
		if (self.talk or self.fix) and not self.isSmall then
			textCellDiv:tag('span')
				:addClass('hide-when-compact')
				:wikitext(self.talk and (' ' .. self.talk) or nil)
				:wikitext(self.fix and (' ' .. self.fix) or nil)
		end
		textCellDiv:wikitext(self.date and (' ' .. self.date) or nil)
		if self.info and not self.isSmall then
			textCellDiv
				:tag('span')
				:addClass('hide-when-compact')
				:wikitext(self.info and (' ' .. self.info) or nil)
		end
		if self.removalNotice then
			textCellDiv:tag('small')
				:addClass('hide-when-compact')
				:tag('i')
					:wikitext(string.format(" (%s)", self.removalNotice))
		end
	else
		-- Default text formatting - anything goes.
		textCell
			:cssText(self.textstyle or nil)
			:wikitext(self.text or nil)
	end

	-- Add the right-hand image.
	if self.imageRight then
		local imageRightCell = row:tag('td'):addClass('mbox-imageright')
		if self.imageCellDiv then
			-- If we are using a div, redefine imageRightCell so that the image
			-- is inside it.
			imageRightCell = imageRightCell:tag('div'):css('width', '52px')
		end
		imageRightCell
			:wikitext(self.imageRight or nil)
	end

	-- Add the below row.
	if self.below then
		boxTable:tag('tr')
			:tag('td')
				:attr('colspan', self.imageRight and '3' or '2')
				:addClass('mbox-text')
				:cssText(self.textstyle or nil)
				:wikitext(self.below or nil)
	end

	-- Add error message for invalid type parameters.
	if self.invalidTypeError then
		root:tag('div')
			:css('text-align', 'center')
			:wikitext(string.format(
				'This message box is using an invalid "type=%s" parameter and needs fixing.',
				self.type or ''
			))
	end

	-- Add categories.
	root:wikitext(self:renderCategories() or nil)

	return tostring(root)
end

--------------------------------------------------------------------------------
-- Exports
--------------------------------------------------------------------------------

local p, mt = {}, {}

function p._exportClasses()
	-- For testing.
	return {
		MessageBox = MessageBox
	}
end

function p.main(boxType, args, cfgTables)
	local box = MessageBox.new(boxType, args, cfgTables or mw.loadData(CONFIG_MODULE))
	box:setParameters()
	box:setCategories()
	return box:export()
end

function mt.__index(t, k)
	return function (frame)
		if not getArgs then
			getArgs = require('Module:Arguments').getArgs
		end
		return t.main(k, getArgs(frame, {trim = false, removeBlanks = false}))
	end
end

return setmetatable(p, mt)</text>
    </revision>
  </page>
  <page>
    <title>Module:Message box/configuration</title>
    <ns>828</ns>
    <id>108</id>
    <revision>
      <id>3885</id>
      <parentid>3882</parentid>
      <timestamp>2019-01-30T06:29:16Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>40 revisions imported from [[:templatewiki:Module:Message_box/configuration]]</comment>
      <origin>3882</origin>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text bytes="6101" sha1="r4rnjqz6eb0fymnpa1civwa8eq6dsty" xml:space="preserve">--------------------------------------------------------------------------------
--                          Message box configuration                         --
--                                                                            --
-- This module contains configuration data for [[Module:Message box]].        --
--------------------------------------------------------------------------------

return {
	ambox = {
		types = {
			speedy = {
				class = 'ambox-speedy',
				image = 'Ambox warning pn.svg'
			},
			delete = {
				class = 'ambox-delete',
				image = 'Ambox warning pn.svg'
			},
			content = {
				class = 'ambox-content',
				image = 'Ambox important.svg'
			},
			style = {
				class = 'ambox-style',
				image = 'Edit-clear.svg'
			},
			move = {
				class = 'ambox-move',
				image = 'Merge-split-transwiki default.svg'
			},
			protection = {
				class = 'ambox-protection',
				image = 'Semi-protection-shackle.svg'
			},
			notice = {
				class = 'ambox-notice',
				image = 'Information icon4.svg'
			}
		},
		default                     = 'notice',
		allowBlankParams            = {'talk', 'sect', 'date', 'issue', 'fix', 'subst', 'hidden'},
		allowSmall                  = true,
		smallParam                  = 'left',
		smallClass                  = 'mbox-small-left',
		substCheck                  = true,
		classes                     = {'metadata', 'ambox'},
		imageEmptyCell              = true,
		imageCheckBlank             = true,
		imageSmallSize              = '20x20px',
		imageCellDiv                = true,
		useCollapsibleTextFields    = true,
		imageRightNone              = true,
		sectionDefault              = 'article',
		allowMainspaceCategories    = true,
		templateCategory            = 'Article message templates',
	        templateCategoryRequireName = true,
		templateErrorCategory       = 'Article message templates with missing parameters',
		templateErrorParamsToCheck  = {'issue', 'fix', 'subst'},
		removalNotice               = '[[Help:Maintenance template removal|Learn how and when to remove this template message]]'
	},
	
	cmbox = {
		types = {
			speedy = {
				class = 'cmbox-speedy',
				image = 'Ambox warning pn.svg'
			},
			delete = {
				class = 'cmbox-delete',
				image = 'Ambox warning pn.svg'
			},
			content = {
				class = 'cmbox-content',
				image = 'Ambox important.svg'
			},
			style = {
				class = 'cmbox-style',
				image = 'Edit-clear.svg'
			},
			move = {
				class = 'cmbox-move',
				image = 'Merge-split-transwiki default.svg'
			},
			protection = {
				class = 'cmbox-protection',
				image = 'Semi-protection-shackle.svg'
			},
			notice = {
				class = 'cmbox-notice',
				image = 'Information icon4.svg'
			}
		},
		default              = 'notice',
		showInvalidTypeError = true,
		classes              = {'cmbox'},
		imageEmptyCell       = true
	},
	
	fmbox = {
		types = {
			warning = {
				class = 'fmbox-warning',
				image = 'Ambox warning pn.svg'
			},
			editnotice = {
				class = 'fmbox-editnotice',
				image = 'Information icon4.svg'
			},
			system = {
				class = 'fmbox-system',
				image = 'Information icon4.svg'
			}
		},
		default              = 'system',
		showInvalidTypeError = true,
		classes              = {'fmbox'},
		imageEmptyCell       = false,
		imageRightNone       = false
	},
	
	imbox = {
		types = {
			speedy = {
				class = 'imbox-speedy',
				image = 'Ambox warning pn.svg'
			},
			delete = {
				class = 'imbox-delete',
				image = 'Ambox warning pn.svg'
			},
			content = {
				class = 'imbox-content',
				image = 'Ambox important.svg'
			},
			style = {
				class = 'imbox-style',
				image = 'Edit-clear.svg'
			},
			move = {
				class = 'imbox-move',
				image = 'Merge-split-transwiki default.svg'
			},
			protection = {
				class = 'imbox-protection',
				image = 'Semi-protection-shackle.svg'
			},
			license = {
				class = 'imbox-license licensetpl',
				image = 'Imbox license.png' -- @todo We need an SVG version of this
			},
			featured = {
				class = 'imbox-featured',
				image = 'Cscr-featured.svg'
			},
			notice = {
				class = 'imbox-notice',
				image = 'Information icon4.svg'
			}
		},
		default              = 'notice',
		showInvalidTypeError = true,
		classes              = {'imbox'},
		imageEmptyCell       = true,
		below                = true,
		templateCategory     = 'File message boxes'
	},
	
	ombox = {
		types = {
			speedy = {
				class = 'ombox-speedy',
				image = 'Ambox warning pn.svg'
			},
			delete = {
				class = 'ombox-delete',
				image = 'Ambox warning pn.svg'
			},
			content = {
				class = 'ombox-content',
				image = 'Ambox important.svg'
			},
			style = {
				class = 'ombox-style',
				image = 'Edit-clear.svg'
			},
			move = {
				class = 'ombox-move',
				image = 'Merge-split-transwiki default.svg'
			},
			protection = {
				class = 'ombox-protection',
				image = 'Semi-protection-shackle.svg'
			},
			notice = {
				class = 'ombox-notice',
				image = 'Information icon4.svg'
			}
		},
		default              = 'notice',
		showInvalidTypeError = true,
		classes              = {'ombox'},
		allowSmall           = true,
		imageEmptyCell       = true,
		imageRightNone       = true
	},
	
	tmbox = {
		types = {
			speedy = {
				class = 'tmbox-speedy',
				image = 'Ambox warning pn.svg'
			},
			delete = {
				class = 'tmbox-delete',
				image = 'Ambox warning pn.svg'
			},
			content = {
				class = 'tmbox-content',
				image = 'Ambox important.svg'
			},
			style = {
				class = 'tmbox-style',
				image = 'Edit-clear.svg'
			},
			move = {
				class = 'tmbox-move',
				image = 'Merge-split-transwiki default.svg'
			},
			protection = {
				class = 'tmbox-protection',
				image = 'Semi-protection-shackle.svg'
			},
			notice = {
				class = 'tmbox-notice',
				image = 'Information icon4.svg'
			}
		},
		default              = 'notice',
		showInvalidTypeError = true,
		classes              = {'tmbox'},
		allowSmall           = true,
		imageRightNone       = true,
		imageEmptyCell       = true,
		imageEmptyCellStyle  = true,
		templateCategory     = 'Talk message boxes'
	}
}</text>
    </revision>
  </page>
  <page>
    <title>Module:Navbar</title>
    <ns>828</ns>
    <id>109</id>
    <revision>
      <id>3942</id>
      <parentid>3939</parentid>
      <timestamp>2019-01-30T06:29:16Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>25 revisions imported from [[:templatewiki:Module:Navbar]]</comment>
      <origin>3939</origin>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text bytes="3091" sha1="0kto9e56pycr6rz0vadnqvghkpm06x9" xml:space="preserve">local p = {}

local getArgs
local ul

function p.addItem (mini, full, link, descrip, args, url)
	local l
	if url then
		l = {'[', '', ']'}
	else
		l = {'[[', '|', ']]'}
	end
	ul:tag('li')
		:addClass('nv-'..full)
		:wikitext(l[1] .. link .. l[2])
		:tag(args.mini and 'abbr' or 'span')
			:attr('title', descrip..' this template')
			:cssText(args.fontstyle)
			:wikitext(args.mini and mini or full)
			:done()
		:wikitext(l[3])
end

function p.brackets (position, c, args, div)
	if args.brackets then
		div
			:tag('span')
				:css('margin-'..position, '-0.125em')
				:cssText(args.fontstyle)
				:wikitext(c)
	end
end

function p._navbar(args)
	local show = {true, true, true, false, false, false}
	local titleArg = 1
	
	if args.collapsible then
		titleArg = 2
		if not args.plain then args.mini = 1 end
		if args.fontcolor then
			args.fontstyle = 'color:' .. args.fontcolor .. ';'
		end
		args.style = 'float:left; text-align:left'
	end
	
	if args.template then
		titleArg = 'template'
		show = {true, false, false, false, false, false}
		local index = {t = 2, d = 2, e = 3, h = 4, m = 5, w = 6, talk = 2, edit = 3, hist = 4, move = 5, watch = 6}
		for k,v in ipairs(require ('Module:TableTools').compressSparseArray(args)) do
			local num = index[v]
			if num then show[num] = true end
		end
	end
	
	if args.noedit then show[3] = false end
	
	local titleText = args[titleArg] or (':' .. mw.getCurrentFrame():getParent():getTitle())
	local title = mw.title.new(mw.text.trim(titleText), 'Template')
	if not title then
		error('Invalid title ' .. titleText)
	end
	local talkpage = title.talkPageTitle and title.talkPageTitle.fullText or ''
	
	local div = mw.html.create():tag('div')
	div
		:addClass('plainlinks')
		:addClass('hlist')
		:addClass('navbar')
		:cssText(args.style)

	if args.mini then div:addClass('mini') end

	if not (args.mini or args.plain) then
		div
			:tag('span')
				:css('word-spacing', 0)
				:cssText(args.fontstyle)
				:wikitext(args.text or 'This box:')
				:wikitext(' ')
	end
	
	p.brackets('right', '&amp;#91; ', args, div)
	
	ul = div:tag('ul')
	if show[1] then p.addItem('v', 'view', title.fullText, 'View', args) end
	if show[2] then p.addItem('t', 'talk', talkpage, 'Discuss', args) end
	if show[3] then p.addItem('e', 'edit', title:fullUrl('action=edit'), 'Edit', args, true) end
	if show[4] then p.addItem('h', 'hist', title:fullUrl('action=history'), 'History of', args, true) end
	if show[5] then
		local move = mw.title.new ('Special:Movepage')
		p.addItem('m', 'move', move:fullUrl('target='..title.fullText), 'Move', args, true) end
	if show[6] then p.addItem('w', 'watch', title:fullUrl('action=watch'), 'Watch', args, true) end
	
	p.brackets('left', ' &amp;#93;', args, div)
	
	if args.collapsible then
		div
			:done()
		:tag('div')
			:css('font-size', '114%')
			:css('margin', args.mini and '0 4em' or '0 7em')
			:cssText(args.fontstyle)
			:wikitext(args[1])
	end

	return tostring(div:done())
end

function p.navbar(frame)
	if not getArgs then
		getArgs = require('Module:Arguments').getArgs
	end
	return p._navbar(getArgs(frame))
end

return p</text>
    </revision>
  </page>
  <page>
    <title>Module:Navbox</title>
    <ns>828</ns>
    <id>110</id>
    <revision>
      <id>4087</id>
      <parentid>4085</parentid>
      <timestamp>2019-01-30T06:29:19Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>76 revisions imported from [[:templatewiki:Module:Navbox]]</comment>
      <origin>4085</origin>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text bytes="12867" sha1="qv8pilaj6uoy41mifmya94jyra7xe3p" xml:space="preserve">--
-- This module implements {{Navbox}}
--

local p = {}

local navbar = require('Module:Navbar')._navbar
local getArgs -- lazily initialized

local args
local border
local listnums
local ODD_EVEN_MARKER = '\127_ODDEVEN_\127'
local RESTART_MARKER = '\127_ODDEVEN0_\127'
local REGEX_MARKER = '\127_ODDEVEN(%d?)_\127'

local function striped(wikitext)
	-- Return wikitext with markers replaced for odd/even striping.
	-- Child (subgroup) navboxes are flagged with a category that is removed
	-- by parent navboxes. The result is that the category shows all pages
	-- where a child navbox is not contained in a parent navbox.
	local orphanCat = '[[Category:Navbox orphans]]'
	if border == 'subgroup' and args.orphan ~= 'yes' then
		-- No change; striping occurs in outermost navbox.
		return wikitext .. orphanCat
	end
	local first, second = 'odd', 'even'
	if args.evenodd then
		if args.evenodd == 'swap' then
			first, second = second, first
		else
			first = args.evenodd
			second = first
		end
	end
	local changer
	if first == second then
		changer = first
	else
		local index = 0
		changer = function (code)
			if code == '0' then
				-- Current occurrence is for a group before a nested table.
				-- Set it to first as a valid although pointless class.
				-- The next occurrence will be the first row after a title
				-- in a subgroup and will also be first.
				index = 0
				return first
			end
			index = index + 1
			return index % 2 == 1 and first or second
		end
	end
	local regex = orphanCat:gsub('([%[%]])', '%%%1')
	return (wikitext:gsub(regex, ''):gsub(REGEX_MARKER, changer))  -- () omits gsub count
end

local function processItem(item, nowrapitems)
	if item:sub(1, 2) == '{|' then
		-- Applying nowrap to lines in a table does not make sense.
		-- Add newlines to compensate for trim of x in |parm=x in a template.
		return '\n' .. item ..'\n'
	end
	if nowrapitems == 'yes' then
		local lines = {}
		for line in (item .. '\n'):gmatch('([^\n]*)\n') do
			local prefix, content = line:match('^([*:;#]+)%s*(.*)')
			if prefix and not content:match('^&lt;span class="nowrap"&gt;') then
				line = prefix .. '&lt;span class="nowrap"&gt;' .. content .. '&lt;/span&gt;'
			end
			table.insert(lines, line)
		end
		item = table.concat(lines, '\n')
	end
	if item:match('^[*:;#]') then
		return '\n' .. item ..'\n'
	end
	return item
end

local function renderNavBar(titleCell)

	if args.navbar ~= 'off' and args.navbar ~= 'plain' and not (not args.name and mw.getCurrentFrame():getParent():getTitle():gsub('/sandbox$', '') == 'Template:Navbox') then
		titleCell:wikitext(navbar{
			args.name,
			mini = 1,
			fontstyle = (args.basestyle or '') .. ';' .. (args.titlestyle or '') .. ';background:none transparent;border:none;-moz-box-shadow:none;-webkit-box-shadow:none;box-shadow:none; padding:0;'
		})
	end

end

--
--   Title row
--
local function renderTitleRow(tbl)
	if not args.title then return end

	local titleRow = tbl:tag('tr')

	if args.titlegroup then
		titleRow
			:tag('th')
				:attr('scope', 'row')
				:addClass('navbox-group')
				:addClass(args.titlegroupclass)
				:cssText(args.basestyle)
				:cssText(args.groupstyle)
				:cssText(args.titlegroupstyle)
				:wikitext(args.titlegroup)
	end

	local titleCell = titleRow:tag('th'):attr('scope', 'col')

	if args.titlegroup then
		titleCell
			:css('border-left', '2px solid #fdfdfd')
			:css('width', '100%')
	end

	local titleColspan = 2
	if args.imageleft then titleColspan = titleColspan + 1 end
	if args.image then titleColspan = titleColspan + 1 end
	if args.titlegroup then titleColspan = titleColspan - 1 end

	titleCell
		:cssText(args.basestyle)
		:cssText(args.titlestyle)
		:addClass('navbox-title')
		:attr('colspan', titleColspan)

	renderNavBar(titleCell)

	titleCell
		:tag('div')
			-- id for aria-labelledby attribute
			:attr('id', mw.uri.anchorEncode(args.title))
			:addClass(args.titleclass)
			:css('font-size', '114%')
			:css('margin', '0 4em')
			:wikitext(processItem(args.title))
end

--
--   Above/Below rows
--

local function getAboveBelowColspan()
	local ret = 2
	if args.imageleft then ret = ret + 1 end
	if args.image then ret = ret + 1 end
	return ret
end

local function renderAboveRow(tbl)
	if not args.above then return end

	tbl:tag('tr')
		:tag('td')
			:addClass('navbox-abovebelow')
			:addClass(args.aboveclass)
			:cssText(args.basestyle)
			:cssText(args.abovestyle)
			:attr('colspan', getAboveBelowColspan())
			:tag('div')
				-- id for aria-labelledby attribute, if no title
				:attr('id', args.title and nil or mw.uri.anchorEncode(args.above))
				:wikitext(processItem(args.above, args.nowrapitems))
end

local function renderBelowRow(tbl)
	if not args.below then return end

	tbl:tag('tr')
		:tag('td')
			:addClass('navbox-abovebelow')
			:addClass(args.belowclass)
			:cssText(args.basestyle)
			:cssText(args.belowstyle)
			:attr('colspan', getAboveBelowColspan())
			:tag('div')
				:wikitext(processItem(args.below, args.nowrapitems))
end

--
--   List rows
--
local function renderListRow(tbl, index, listnum)
	local row = tbl:tag('tr')

	if index == 1 and args.imageleft then
		row
			:tag('td')
				:addClass('navbox-image')
				:addClass(args.imageclass)
				:css('width', '1px')               -- Minimize width
				:css('padding', '0px 2px 0px 0px')
				:cssText(args.imageleftstyle)
				:attr('rowspan', #listnums)
				:tag('div')
					:wikitext(processItem(args.imageleft))
	end

	if args['group' .. listnum] then
		local groupCell = row:tag('th')

		-- id for aria-labelledby attribute, if lone group with no title or above
		if listnum == 1 and not (args.title or args.above or args.group2) then
			groupCell
				:attr('id', mw.uri.anchorEncode(args.group1))
		end

		groupCell
			:attr('scope', 'row')
			:addClass('navbox-group')
			:addClass(args.groupclass)
			:cssText(args.basestyle)
			:css('width', args.groupwidth or '1%') -- If groupwidth not specified, minimize width

		groupCell
			:cssText(args.groupstyle)
			:cssText(args['group' .. listnum .. 'style'])
			:wikitext(args['group' .. listnum])
	end

	local listCell = row:tag('td')

	if args['group' .. listnum] then
		listCell
			:css('text-align', 'left')
			:css('border-left-width', '2px')
			:css('border-left-style', 'solid')
	else
		listCell:attr('colspan', 2)
	end

	if not args.groupwidth then
		listCell:css('width', '100%')
	end

	local rowstyle  -- usually nil so cssText(rowstyle) usually adds nothing
	if index % 2 == 1 then
		rowstyle = args.oddstyle
	else
		rowstyle = args.evenstyle
	end

	local listText = args['list' .. listnum]
	local oddEven = ODD_EVEN_MARKER
	if listText:sub(1, 12) == '&lt;/div&gt;&lt;table' then
		-- Assume list text is for a subgroup navbox so no automatic striping for this row.
		oddEven = listText:find('&lt;th[^&gt;]*"navbox%-title"') and RESTART_MARKER or 'odd'
	end
	listCell
		:css('padding', '0px')
		:cssText(args.liststyle)
		:cssText(rowstyle)
		:cssText(args['list' .. listnum .. 'style'])
		:addClass('navbox-list')
		:addClass('navbox-' .. oddEven)
		:addClass(args.listclass)
		:addClass(args['list' .. listnum .. 'class'])
		:tag('div')
			:css('padding', (index == 1 and args.list1padding) or args.listpadding or '0em 0.25em')
			:wikitext(processItem(listText, args.nowrapitems))

	if index == 1 and args.image then
		row
			:tag('td')
				:addClass('navbox-image')
				:addClass(args.imageclass)
				:css('width', '1px')               -- Minimize width
				:css('padding', '0px 0px 0px 2px')
				:cssText(args.imagestyle)
				:attr('rowspan', #listnums)
				:tag('div')
					:wikitext(processItem(args.image))
	end
end


--
--   Tracking categories
--

local function needsHorizontalLists()
	if border == 'subgroup' or args.tracking == 'no' then
		return false
	end
	local listClasses = {
		['plainlist'] = true, ['hlist'] = true, ['hlist hnum'] = true,
		['hlist hwrap'] = true, ['hlist vcard'] = true, ['vcard hlist'] = true,
		['hlist vevent'] = true,
	}
	return not (listClasses[args.listclass] or listClasses[args.bodyclass])
end

local function hasBackgroundColors()
	for _, key in ipairs({'titlestyle', 'groupstyle', 'basestyle', 'abovestyle', 'belowstyle'}) do
		if tostring(args[key]):find('background', 1, true) then
			return true
		end
	end
end

local function hasBorders()
	for _, key in ipairs({'groupstyle', 'basestyle', 'abovestyle', 'belowstyle'}) do
		if tostring(args[key]):find('border', 1, true) then
			return true
		end
	end
end

local function isIllegible()
	local styleratio = require('Module:Color contrast')._styleratio

	for key, style in pairs(args) do
		if tostring(key):match("style$") then
			if styleratio{mw.text.unstripNoWiki(style)} &lt; 4.5 then
				return true
			end
		end
	end
	return false
end

local function getTrackingCategories()
	local cats = {}
	if needsHorizontalLists() then table.insert(cats, 'Navigational boxes without horizontal lists') end
	if hasBackgroundColors() then table.insert(cats, 'Navboxes using background colours') end
	if isIllegible() then table.insert(cats, 'Potentially illegible navboxes') end
	if hasBorders() then table.insert(cats, 'Navboxes using borders') end
	return cats
end

local function renderTrackingCategories(builder)
	local title = mw.title.getCurrentTitle()
	if title.namespace ~= 10 then return end -- not in template space
	local subpage = title.subpageText
	if subpage == 'doc' or subpage == 'sandbox' or subpage == 'testcases' then return end

	for _, cat in ipairs(getTrackingCategories()) do
		builder:wikitext('[[Category:' .. cat .. ']]')
	end
end

--
--   Main navbox tables
--
local function renderMainTable()
	local tbl = mw.html.create('table')
		:addClass('nowraplinks')
		:addClass(args.bodyclass)

	if args.title and (args.state ~= 'plain' and args.state ~= 'off') then
		tbl
			:addClass('collapsible')
			:addClass(args.state or 'autocollapse')
	end

	tbl:css('border-spacing', 0)
	if border == 'subgroup' or border == 'none' then
		tbl
			:addClass('navbox-subgroup')
			:cssText(args.bodystyle)
			:cssText(args.style)
	else  -- regular navbox - bodystyle and style will be applied to the wrapper table
		tbl
			:addClass('navbox-inner')
			:css('background', 'transparent')
			:css('color', 'inherit')
	end
	tbl:cssText(args.innerstyle)

	renderTitleRow(tbl)
	renderAboveRow(tbl)
	for i, listnum in ipairs(listnums) do
		renderListRow(tbl, i, listnum)
	end
	renderBelowRow(tbl)

	return tbl
end

function p._navbox(navboxArgs)
	args = navboxArgs
	listnums = {}

	for k, _ in pairs(args) do
		if type(k) == 'string' then
			local listnum = k:match('^list(%d+)$')
			if listnum then table.insert(listnums, tonumber(listnum)) end
		end
	end
	table.sort(listnums)

	border = mw.text.trim(args.border or args[1] or '')
	if border == 'child' then
		border = 'subgroup'
	end

	-- render the main body of the navbox
	local tbl = renderMainTable()

	-- render the appropriate wrapper around the navbox, depending on the border param
	local res = mw.html.create()
	if border == 'none' then
		local nav = res:tag('div')
			:attr('role', 'navigation')
			:node(tbl)
		-- aria-labelledby title, otherwise above, otherwise lone group
		if args.title or args.above or (args.group1 and not args.group2) then
			nav:attr('aria-labelledby', mw.uri.anchorEncode(args.title or args.above or args.group1))
		else
			nav:attr('aria-label', 'Navbox')
		end
	elseif border == 'subgroup' then
		-- We assume that this navbox is being rendered in a list cell of a parent navbox, and is
		-- therefore inside a div with padding:0em 0.25em. We start with a &lt;/div&gt; to avoid the
		-- padding being applied, and at the end add a &lt;div&gt; to balance out the parent's &lt;/div&gt;
		res
			:wikitext('&lt;/div&gt;')
			:node(tbl)
			:wikitext('&lt;div&gt;')
	else
		local nav = res:tag('div')
			:attr('role', 'navigation')
			:addClass('navbox')
			:cssText(args.bodystyle)
			:cssText(args.style)
			:css('padding', '3px')
			:node(tbl)
		-- aria-labelledby title, otherwise above, otherwise lone group
		if args.title or args.above or (args.group1 and not args.group2) then
			nav:attr('aria-labelledby', mw.uri.anchorEncode(args.title or args.above or args.group1))
		else
			nav:attr('aria-label', 'Navbox')
		end
	end

	if (args.nocat or 'false'):lower() == 'false' then
		renderTrackingCategories(res)
	end
	return striped(tostring(res))
end

function p.navbox(frame)
	if not getArgs then
		getArgs = require('Module:Arguments').getArgs
	end
	args = getArgs(frame, {wrappers = {'Template:Navbox', 'Template:Navbox subgroup'}})
	if frame.args.border then
		-- This allows Template:Navbox_subgroup to use {{#invoke:Navbox|navbox|border=...}}.
		args.border = frame.args.border
	end

	-- Read the arguments in the order they'll be output in, to make references number in the right order.
	local _
	_ = args.title
	_ = args.above
	for i = 1, 20 do
		_ = args["group" .. tostring(i)]
		_ = args["list" .. tostring(i)]
	end
	_ = args.below

	return p._navbox(args)
end

return p</text>
    </revision>
  </page>
  <page>
    <title>Module:No globals</title>
    <ns>828</ns>
    <id>111</id>
    <revision>
      <id>4111</id>
      <parentid>4110</parentid>
      <timestamp>2019-01-30T06:29:19Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>13 revisions imported from [[:templatewiki:Module:No_globals]]</comment>
      <origin>4108</origin>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text bytes="0" sha1="phoiac9h4m842xq45sp7s6u21eteeq1" xml:space="preserve" />
    </revision>
  </page>
  <page>
    <title>Module:Ns has subpages</title>
    <ns>828</ns>
    <id>112</id>
    <revision>
      <id>4120</id>
      <parentid>4113</parentid>
      <timestamp>2019-01-30T06:29:19Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>5 revisions imported from [[:templatewiki:Module:Ns_has_subpages]]</comment>
      <origin>4113</origin>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text bytes="1678" sha1="qb0b1z2vff7kifnw21v205d791esbiz" xml:space="preserve">-- This module implements [[Template:Ns has subpages]].
-- While the template is fairly simple, this information is made available to
-- Lua directly, so using a module means that we don't have to update the
-- template as new namespaces are added.

local p = {}

function p._main(ns, frame)
	-- Get the current namespace if we were not passed one.
	if not ns then
		ns = mw.title.getCurrentTitle().namespace
	end

	-- Look up the namespace table from mw.site.namespaces. This should work
	-- for a majority of cases.
	local nsTable = mw.site.namespaces[ns]

	-- Try using string matching to get the namespace from page names.
	-- Do a quick and dirty bad title check to try and make sure we do the same
	-- thing as {{NAMESPACE}} in most cases.
	if not nsTable and type(ns) == 'string' and not ns:find('[&lt;&gt;|%[%]{}]') then
		local nsStripped = ns:gsub('^[_%s]*:', '')
		nsStripped = nsStripped:gsub(':.*$', '')
		nsTable = mw.site.namespaces[nsStripped]
	end

	-- If we still have no match then try the {{NAMESPACE}} parser function,
	-- which should catch the remainder of cases. Don't use a mw.title object,
	-- as this would increment the expensive function count for each new page
	-- tested.
	if not nsTable then
		frame = frame or mw.getCurrentFrame()
		local nsProcessed = frame:callParserFunction('NAMESPACE', ns)
		nsTable = nsProcessed and mw.site.namespaces[nsProcessed]
	end
	
	return nsTable and nsTable.hasSubpages
end

function p.main(frame)
	local ns = frame:getParent().args[1]
	if ns then
		ns = ns:match('^%s*(.-)%s*$') -- trim whitespace
		ns = tonumber(ns) or ns
	end
	local hasSubpages = p._main(ns, frame)
	return hasSubpages and 'yes' or ''
end

return p</text>
    </revision>
  </page>
  <page>
    <title>Module:Section link</title>
    <ns>828</ns>
    <id>113</id>
    <revision>
      <id>4146</id>
      <parentid>4144</parentid>
      <timestamp>2019-01-30T06:29:20Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>11 revisions imported from [[:templatewiki:Module:Section_link]]</comment>
      <origin>4144</origin>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text bytes="3794" sha1="nqa6nvur4c4vdo96v4qtmh8qfsvh745" xml:space="preserve">-- This module implements {{section link}}.

local checkType = require('libraryUtil').checkType

local p = {}

local function makeSectionLink(page, section, display)
	display = display or section
	page = page or ''
	return string.format('[[%s#%s|%s]]', page, section, display)
end

local function normalizeTitle(title)
	title = mw.ustring.gsub(mw.ustring.gsub(title,"'",""),'"','')
	return mw.title.new(mw.ustring.gsub(title,"%b&lt;&gt;","")).prefixedText
end

function p._main(page, sections, options, title)
	-- Validate input.
	checkType('_main', 1, page, 'string', true)
	checkType('_main', 3, options, 'table', true)
	if sections == nil then
		sections = {}
	elseif type(sections) == 'string' then
		sections = {sections}
	elseif type(sections) ~= 'table' then
		error(string.format(
			"type error in argument #2 to '_main' " ..
			"(string, table or nil expected, got %s)",
			type(sections)
		), 2)
	end
	options = options or {}
	title = title or mw.title.getCurrentTitle()

	-- Deal with blank page names elegantly
	if page and not page:find('%S') then
		page = nil
		options.nopage = true
	end

	-- Make the link(s).
	local isShowingPage = not options.nopage
	if #sections &lt;= 1 then
		local linkPage = page or ''
		local section = sections[1] or 'Notes'
		local display = '§&amp;nbsp;' .. section
		if isShowingPage then
			page = page or title.prefixedText
			if options.display and options.display ~= '' then
				if normalizeTitle(options.display) == normalizeTitle(page) then
					display = options.display .. ' ' .. display
				else
					error(string.format(
						'Display title "%s" was ignored since it is ' ..
						"not equivalent to the page's actual title",
						options.display
					), 0)
				end
			else
				display = page .. ' ' .. display
			end
		end
		return makeSectionLink(linkPage, section, display)
	else
		-- Multiple sections. First, make a list of the links to display.
		local ret = {}
		for i, section in ipairs(sections) do
			ret[i] = makeSectionLink(page, section)
		end

		-- Assemble the list of links into a string with mw.text.listToText.
		-- We use the default separator for mw.text.listToText, but a custom
		-- conjunction. There is also a special case conjunction if we only
		-- have two links.
		local conjunction
		if #sections == 2 then
			conjunction = '&amp;#8203; and '
		else
			conjunction = ', and '
		end
		ret = mw.text.listToText(ret, nil, conjunction)

		-- Add the intro text.
		local intro = '§§&amp;nbsp;'
		if isShowingPage then
			intro = (page or title.prefixedText) .. ' ' .. intro
		end
		ret = intro .. ret

		return ret
	end
end

function p.main(frame)
	local args = require('Module:Arguments').getArgs(frame, {
		wrappers = 'Template:Section link',
		valueFunc = function (key, value)
			value = value:match('^%s*(.-)%s*$') -- Trim whitespace
			-- Allow blank first parameters, as the wikitext template does this.
			if value ~= '' or key == 1 then
				return value
			end
		end
	})

	-- Sort the arguments.
	local page
	local sections, options = {}, {}
	for k, v in pairs(args) do
		if k == 1 then
			-- Doing this in the loop because of a bug in [[Module:Arguments]]
			-- when using pairs with deleted arguments.
			page = mw.text.decode(v, decodeNamedEntities)
		elseif type(k) == 'number' then
			sections[k] = v
		else
			options[k] = v
		end
	end
	
	-- Extract section from page, if present
	if page then
		local p, s = page:match('^(.-)#(.*)$')
		if p then page, sections[1] = p, s end
	end

	-- Compress the sections array.
	local function compressArray(t)
		local nums, ret = {}, {}
		for num in pairs(t) do
			nums[#nums + 1] = num
		end
		table.sort(nums)
		for i, num in ipairs(nums) do
			ret[i] = t[num]
		end
		return ret
	end
	sections = compressArray(sections)

	return p._main(page, sections, options)
end

return p</text>
    </revision>
  </page>
  <page>
    <title>Module:Separated entries</title>
    <ns>828</ns>
    <id>115</id>
    <revision>
      <id>4176</id>
      <parentid>4174</parentid>
      <timestamp>2019-01-30T06:29:20Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>14 revisions imported from [[:templatewiki:Module:Separated_entries]]</comment>
      <origin>4174</origin>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text bytes="1403" sha1="r3n53qz4zycs3vxyo5ms9qjo1jm32bp" xml:space="preserve">-- This module takes positional parameters as input and concatenates them with
-- an optional separator. The final separator (the "conjunction") can be
-- specified independently, enabling natural-language lists like
-- "foo, bar, baz and qux". The starting parameter can also be specified.

local compressSparseArray = require('Module:TableTools').compressSparseArray
local p = {}

function p._main(args)
	local separator = args.separator
		-- Decode (convert to Unicode) HTML escape sequences, such as "&amp;#32;" for space.
		and mw.text.decode(args.separator) or ''
	local conjunction = args.conjunction and mw.text.decode(args.conjunction) or separator
	-- Discard values before the starting parameter.
	local start = tonumber(args.start)
	if start then
		for i = 1, start - 1 do args[i] = nil end
	end
	-- Discard named parameters.
	local values = compressSparseArray(args)
	return mw.text.listToText(values, separator, conjunction)
end

local function makeInvokeFunction(separator, conjunction, first)
	return function (frame)
		local args = require('Module:Arguments').getArgs(frame)
		args.separator = separator or args.separator
		args.conjunction = conjunction or args.conjunction
		args.first = first or args.first
		return p._main(args)
	end
end

p.main = makeInvokeFunction()
p.br = makeInvokeFunction('&lt;br /&gt;')
p.comma = makeInvokeFunction(mw.message.new('comma-separator'):plain())

return p</text>
    </revision>
  </page>
  <page>
    <title>Module:TableTools</title>
    <ns>828</ns>
    <id>117</id>
    <revision>
      <id>4260</id>
      <parentid>4259</parentid>
      <timestamp>2019-01-30T06:29:21Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>42 revisions imported from [[:templatewiki:Module:TableTools]]</comment>
      <origin>4259</origin>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text bytes="8030" sha1="k1omc17qij757n8hd68yihcqxo4biqi" xml:space="preserve">--[[
------------------------------------------------------------------------------------
--                               TableTools                                       --
--                                                                                --
-- This module includes a number of functions for dealing with Lua tables.        --
-- It is a meta-module, meant to be called from other Lua modules, and should     --
-- not be called directly from #invoke.                                           --
------------------------------------------------------------------------------------
--]]

local libraryUtil = require('libraryUtil')

local p = {}

-- Define often-used variables and functions.
local floor = math.floor
local infinity = math.huge
local checkType = libraryUtil.checkType

--[[
------------------------------------------------------------------------------------
-- isPositiveInteger
--
-- This function returns true if the given value is a positive integer, and false
-- if not. Although it doesn't operate on tables, it is included here as it is
-- useful for determining whether a given table key is in the array part or the
-- hash part of a table.
------------------------------------------------------------------------------------
--]]
function p.isPositiveInteger(v)
	if type(v) == 'number' and v &gt;= 1 and floor(v) == v and v &lt; infinity then
		return true
	else
		return false
	end
end

--[[
------------------------------------------------------------------------------------
-- isNan
--
-- This function returns true if the given number is a NaN value, and false
-- if not. Although it doesn't operate on tables, it is included here as it is
-- useful for determining whether a value can be a valid table key. Lua will
-- generate an error if a NaN is used as a table key.
------------------------------------------------------------------------------------
--]]
function p.isNan(v)
	if type(v) == 'number' and tostring(v) == '-nan' then
		return true
	else
		return false
	end
end

--[[
------------------------------------------------------------------------------------
-- shallowClone
--
-- This returns a clone of a table. The value returned is a new table, but all
-- subtables and functions are shared. Metamethods are respected, but the returned
-- table will have no metatable of its own.
------------------------------------------------------------------------------------
--]]
function p.shallowClone(t)
	local ret = {}
	for k, v in pairs(t) do
		ret[k] = v
	end
	return ret
end

--[[
------------------------------------------------------------------------------------
-- removeDuplicates
--
-- This removes duplicate values from an array. Non-positive-integer keys are
-- ignored. The earliest value is kept, and all subsequent duplicate values are
-- removed, but otherwise the array order is unchanged.
------------------------------------------------------------------------------------
--]]
function p.removeDuplicates(t)
	checkType('removeDuplicates', 1, t, 'table')
	local isNan = p.isNan
	local ret, exists = {}, {}
	for i, v in ipairs(t) do
		if isNan(v) then
			-- NaNs can't be table keys, and they are also unique, so we don't need to check existence.
			ret[#ret + 1] = v
		else
			if not exists[v] then
				ret[#ret + 1] = v
				exists[v] = true
			end
		end	
	end
	return ret
end			

--[[
------------------------------------------------------------------------------------
-- numKeys
--
-- This takes a table and returns an array containing the numbers of any numerical
-- keys that have non-nil values, sorted in numerical order.
------------------------------------------------------------------------------------
--]]
function p.numKeys(t)
	checkType('numKeys', 1, t, 'table')
	local isPositiveInteger = p.isPositiveInteger
	local nums = {}
	for k, v in pairs(t) do
		if isPositiveInteger(k) then
			nums[#nums + 1] = k
		end
	end
	table.sort(nums)
	return nums
end

--[[
------------------------------------------------------------------------------------
-- affixNums
--
-- This takes a table and returns an array containing the numbers of keys with the
-- specified prefix and suffix. For example, for the table
-- {a1 = 'foo', a3 = 'bar', a6 = 'baz'} and the prefix "a", affixNums will
-- return {1, 3, 6}.
------------------------------------------------------------------------------------
--]]
function p.affixNums(t, prefix, suffix)
	checkType('affixNums', 1, t, 'table')
	checkType('affixNums', 2, prefix, 'string', true)
	checkType('affixNums', 3, suffix, 'string', true)

	local function cleanPattern(s)
		-- Cleans a pattern so that the magic characters ()%.[]*+-?^$ are interpreted literally.
		s = s:gsub('([%(%)%%%.%[%]%*%+%-%?%^%$])', '%%%1')
		return s
	end

	prefix = prefix or ''
	suffix = suffix or ''
	prefix = cleanPattern(prefix)
	suffix = cleanPattern(suffix)
	local pattern = '^' .. prefix .. '([1-9]%d*)' .. suffix .. '$'

	local nums = {}
	for k, v in pairs(t) do
		if type(k) == 'string' then			
			local num = mw.ustring.match(k, pattern)
			if num then
				nums[#nums + 1] = tonumber(num)
			end
		end
	end
	table.sort(nums)
	return nums
end

--[[
------------------------------------------------------------------------------------
-- numData
--
-- Given a table with keys like ("foo1", "bar1", "foo2", "baz2"), returns a table
-- of subtables in the format 
-- { [1] = {foo = 'text', bar = 'text'}, [2] = {foo = 'text', baz = 'text'} }
-- Keys that don't end with an integer are stored in a subtable named "other".
-- The compress option compresses the table so that it can be iterated over with
-- ipairs.
------------------------------------------------------------------------------------
--]]
function p.numData(t, compress)
	checkType('numData', 1, t, 'table')
	checkType('numData', 2, compress, 'boolean', true)
	local ret = {}
	for k, v in pairs(t) do
		local prefix, num = mw.ustring.match(tostring(k), '^([^0-9]*)([1-9][0-9]*)$')
		if num then
			num = tonumber(num)
			local subtable = ret[num] or {}
			if prefix == '' then
				-- Positional parameters match the blank string; put them at the start of the subtable instead.
				prefix = 1
			end
			subtable[prefix] = v
			ret[num] = subtable
		else
			local subtable = ret.other or {}
			subtable[k] = v
			ret.other = subtable
		end
	end
	if compress then
		local other = ret.other
		ret = p.compressSparseArray(ret)
		ret.other = other
	end
	return ret
end

--[[
------------------------------------------------------------------------------------
-- compressSparseArray
--
-- This takes an array with one or more nil values, and removes the nil values
-- while preserving the order, so that the array can be safely traversed with
-- ipairs.
------------------------------------------------------------------------------------
--]]
function p.compressSparseArray(t)
	checkType('compressSparseArray', 1, t, 'table')
	local ret = {}
	local nums = p.numKeys(t)
	for _, num in ipairs(nums) do
		ret[#ret + 1] = t[num]
	end
	return ret
end

--[[
------------------------------------------------------------------------------------
-- sparseIpairs
--
-- This is an iterator for sparse arrays. It can be used like ipairs, but can
-- handle nil values.
------------------------------------------------------------------------------------
--]]
function p.sparseIpairs(t)
	checkType('sparseIpairs', 1, t, 'table')
	local nums = p.numKeys(t)
	local i = 0
	local lim = #nums
	return function ()
		i = i + 1
		if i &lt;= lim then
			local key = nums[i]
			return key, t[key]
		else
			return nil, nil
		end
	end
end

--[[
------------------------------------------------------------------------------------
-- size
--
-- This returns the size of a key/value pair table. It will also work on arrays,
-- but for arrays it is more efficient to use the # operator.
------------------------------------------------------------------------------------
--]]
function p.size(t)
	checkType('size', 1, t, 'table')
	local i = 0
	for k in pairs(t) do
		i = i + 1
	end
	return i
end

return p</text>
    </revision>
  </page>
  <page>
    <title>Module:Template invocation</title>
    <ns>828</ns>
    <id>119</id>
    <revision>
      <id>4266</id>
      <parentid>4265</parentid>
      <timestamp>2019-01-30T06:29:22Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>1 revision imported from [[:templatewiki:Module:Template_invocation]]</comment>
      <origin>4264</origin>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text bytes="4219" sha1="t3w81lymevg8kw03d9qn9x56uqvoe66" xml:space="preserve">-- This module provides functions for making MediaWiki template invocations.

local checkType = require('libraryUtil').checkType

local p = {}

------------------------------------------------------------------------
--         Name:  p.name
--      Purpose:  Find a template invocation name from a page name or a
--                mw.title object.
--  Description:  This function detects whether a string or a mw.title
--                object has been passed in, and uses that to find a
--                template name as it is used in template invocations.
--   Parameters:  title - full page name or mw.title object for the
--                template (string or mw.title object)
--      Returns:  String
------------------------------------------------------------------------

function p.name(title)
	if type(title) == 'string' then
		title = mw.title.new(title)
		if not title then
			error("invalid title in parameter #1 of function 'name'", 2)
		end
	elseif type(title) ~= 'table' or type(title.getContent) ~= 'function' then
		error("parameter #1 of function 'name' must be a string or a mw.title object", 2)
	end
	if title.namespace == 10 then
		return title.text
	elseif title.namespace == 0 then
		return ':' .. title.prefixedText
	else
		return title.prefixedText
	end
end

------------------------------------------------------------------------
--         Name:  p.invocation
--      Purpose:  Construct a MediaWiki template invocation.
--  Description:  This function makes a template invocation from the
--                name and the arguments given. Note that it isn't
--                perfect: we have no way of knowing what whitespace was
--                in the original invocation, the named parameters will be
--                alphabetically sorted, and any parameters with duplicate keys
--                will be removed.
--   Parameters:  name - the template name, formatted as it will appear
--                    in the invocation. (string)
--                args - a table of template arguments. (table)
--                format - formatting options. (string, optional)
--                    Set to "nowiki" to escape, curly braces, pipes and
--                    equals signs with their HTML entities. The default
--                    is unescaped.
--      Returns:  String
------------------------------------------------------------------------

function p.invocation(name, args, format)
	checkType('invocation', 1, name, 'string')
	checkType('invocation', 2, args, 'table')
	checkType('invocation', 3, format, 'string', true)

	-- Validate the args table and make a copy to work from. We need to
	-- make a copy of the table rather than just using the original, as
	-- some of the values may be erased when building the invocation.
	local invArgs = {}
	for k, v in pairs(args) do
		local typek = type(k)
		local typev = type(v)
		if typek ~= 'string' and typek ~= 'number'
			or typev ~= 'string' and typev ~= 'number'
		then
			error("invalid arguments table in parameter #2 of " ..
			"'invocation' (keys and values must be strings or numbers)", 2)
		end
		invArgs[k] = v
	end

	-- Get the separators to use.
	local seps = {
		openb = '{{',
		closeb = '}}',
		pipe = '|',
		equals = '='
	}
	if format == 'nowiki' then
		for k, v in pairs(seps) do
			seps[k] = mw.text.nowiki(v)
		end
	end

	-- Build the invocation body with numbered args first, then named.
	local ret = {}
	ret[#ret + 1] = seps.openb
	ret[#ret + 1] = name
	for k, v in ipairs(invArgs) do
		if type(v) == 'string' and v:find('=', 1, true) then
			-- Likely something like 1=foo=bar, we need to do it as a named arg
			break
		end
		ret[#ret + 1] = seps.pipe
		ret[#ret + 1] = v
		invArgs[k] = nil -- Erase the key so that we don't add the value twice
	end
	local invArgs_list = {} -- sort a parameter list; preferable to randomly sorted output
	for k, v in pairs(invArgs) do
		invArgs_list[#invArgs_list + 1] = k
	end
	table.sort(invArgs_list)
	for i, v in ipairs(invArgs_list) do -- Add named args based on sorted parameter list
		ret[#ret + 1] = seps.pipe
		ret[#ret + 1] = v
		ret[#ret + 1] = seps.equals
		ret[#ret + 1] = invArgs[v]
	end
	ret[#ret + 1] = seps.closeb

	return table.concat(ret)
end

return p</text>
    </revision>
  </page>
  <page>
    <title>Module:Yesno</title>
    <ns>828</ns>
    <id>120</id>
    <revision>
      <id>4336</id>
      <parentid>4335</parentid>
      <timestamp>2019-01-30T06:29:22Z</timestamp>
      <contributor>
        <username>Lizhijie</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>34 revisions imported from [[:templatewiki:Module:Yesno]]</comment>
      <origin>4333</origin>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text bytes="745" sha1="swdskn7svew8i9wuydn9uj5l3r2ghcs" xml:space="preserve">-- Function allowing for consistent treatment of boolean-like wikitext input.
-- It works similarly to the template {{yesno}}.

return function (val, default)
	-- If your wiki uses non-ascii characters for any of "yes", "no", etc., you
	-- should replace "val:lower()" with "mw.ustring.lower(val)" in the
	-- following line.
	val = type(val) == 'string' and val:lower() or val
	if val == nil then
		return nil
	elseif val == true 
		or val == 'yes'
		or val == 'y'
		or val == 'true'
		or val == 't'
		or val == 'on'
		or tonumber(val) == 1
	then
		return true
	elseif val == false
		or val == 'no'
		or val == 'n'
		or val == 'false'
		or val == 'f'
		or val == 'off'
		or tonumber(val) == 0
	then
		return false
	else
		return default
	end
end</text>
    </revision>
  </page>
</mediawiki>
